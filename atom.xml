<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小客栈</title>
  
  <subtitle>前端复习总结</subtitle>
  <link href="https://couriourc.github.io/atom.xml" rel="self"/>
  
  <link href="https://couriourc.github.io/"/>
  <updated>2023-03-11T07:54:57.434Z</updated>
  <id>https://couriourc.github.io/</id>
  
  <author>
    <name>CouriourC</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2022 年度回顾</title>
    <link href="https://couriourc.github.io/posts/2MEJM9V.html"/>
    <id>https://couriourc.github.io/posts/2MEJM9V.html</id>
    <published>2023-03-02T04:55:55.000Z</published>
    <updated>2023-03-11T07:54:57.434Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="2022-回顾"><a class="markdownIt-Anchor" href="#2022-回顾"></a> 2022 回顾</h1><p><code>2022 </code>对我来说，是一个忙碌的一年，也是特别有纪念意义的一年。</p><p>这一年，我面过字节，拿到过百词斩实习 Offer、半个腾讯实习的 Offer 、哈啰出行的实习 Offer，最后奔赴求学之路 —— 考研。</p><p>这一年，我经历了半年的规律作息，经历了下降三十斤的体重变化，也爱上了跑步、运动。</p><p>这一年，从预备党员成为了一名光荣的共产党员。</p><p>这一年，有一起逛街的饭搭子，有相约共同旅游的好朋友，有相约赏遍桂林山水，走遍中西南北的妹，有一起跑步的哥们，有靠谱的老姐……</p><p>因此，还是为自己做一个大总结吧～</p><hr><p>人生处处是选择，不管结果如何，总会充满惊喜。</p><p>自一月份就开始做选择，在电话中进行了腾讯 IEG 蓝鲸智云校企合作项目组的简短面试，于此同时，也在进行成都超有爱科技有限公司 (百词斩) 的面试，最终都双双通过，然后就在二者之间选择，百词斩是春季实习，没有转正机会，需要自带电脑，不过薪资还可以，压力给到 蓝鲸 这边，因为只是校企合作项目，所以肯定和实习是不一样的，不过最后结果还是选择了蓝鲸这边，拒了百词斩，讲道理，在起初我最心仪的其实是百词斩。</p><p>在蓝鲸这边，我结识了 凯神，宸哥，边成 以及很多优秀的人，他们给了我一开始想要得到的东西 —— 宝贵经历，其中成哥 (边成) 基本就是线上老基友了，考研的时候相互鼓励，当然这也是后话了。在这次项目中，磕磕拌拌的，从第一次评审 “挨骂”，然后发现原型图或者说从开始的需求分析都不对，然后需要整改重做，到开始找凯神，宸哥讨论新的设计，最后从新的设计上手，到进行代码实现，居然只用了一周，期间还经历与 O 神以及诸多大佬交流，学习了很多东西，并对这个项目重新进行需求分析，概念模型建立，到编码阶段一整套流程，虽然还是有挺多细节和 BUG 没有解决的，不过 UI ，功能已经实现的十分齐全了，可以说从这一次开始，我做项目不再是单纯的写代码，而是开始思考，而是从一个用户的角度去思考问题了，操作细节上的设计。</p><p>时至三四月，春季实习开放，腾讯 IEG 这边也开了 <code>HC</code>，我自然也是投了简历，经历基本的面试之后，然后到了 Offer 报批环节，也基本分配了 Leader 。很遗憾 —— 疫情来了，当时的腾讯甚至在裁人了，自然不可能再招新人了，刚开始得知这个消息的时候，心中还是难免有些失落的，不过很快就调整了心态，转向更多的提升自己了，毕竟在我还需要深入学习，进一步开拓自己的视野。于是我开始泡图书馆，读《操作系统》，读《领域驱动设计》，读 《软件工程》等基础知识，边做边总结，越是遨游在书籍中，越是发现自己如同井底之蛙！</p><p>已经步入五月，毕业危机到来，于是我开始萌生了考研的想法，和成哥一合计，交流，发现他也在计划考研，优秀的人都这么卷么🤡。</p><p>由于专业的课程设计，我投入到电子材料的课程设计中去，完成一系列综合实验，根据材料性质，设计建议面包板，再手抄了一堆报告。在抄报告的时候顺便研究了一下院校选择，也看了很多帖子，收集了很多资料。</p><p>上半年尾声想起，六月结束，我的下半年围绕着考研开始了……</p><p>进入七月份开始我的考研计划，原本打算考西南石油大学，最后发现性价比不行，评级还不如本校，不过专业课考操作系统和数据结构，因此就没太在意，保持着复习，高数武中祥，英语《考研真相》，刷单词，每天早上六点半起，打一套《八部金刚功》，吃一份麦片泡牛奶，进入复习，然年后中午干饭，下午继续，然后晚上八点结束学习，绕着学校跑步，日复一日，坚持了三个月～，瘦了二十斤，别的不说，满嘴顺口溜。</p><p>之后图书馆闭馆，就转移战场，来到实验室复习。</p><p>然后发现一搬资料，我去，咋这么多，什么汤家凤 1000 基础题，什么 660、330、考研真相豪华版（2001-2023）、王道考研系列，腿姐手册（虽然这玩意我到考研结束，连第一章都没翻完）。搬过来之后，就懒得又搬来搬去，等于说，我这个老油条，又在实验室呆了几个月到考研。</p><p>实验室真是一个好地方，大家都在这努力追赶，很忙，很充实！在实验室复习阶段，每天还是保持着规律作息，行色匆匆，肉眼可见的时间飞逝。</p><p>🎭（直接猛喷 - 龙哥，星宇，祖姐，皮总，一堆堆 - 这堆学弟学妹 - 虽然我都是称他们为哥啊姐啊，不过都是顺口，各个卷的一逼，通宵啥的是一点不含糊），不过考研的时候，也是实验室各位给了我很多的鼓励，虽然我自认为自己还是比较不以物喜，不以己悲的。</p><p>要解决的是问题，而不是产生问题。</p><p>但难免进入 emo 期，我印象中最深刻的便是 —— 英语，那种无力感，明明单词语句都看得懂，却理解不了文章，做不对题，每天一篇阅读理解，做到了 2013 年，也就是说，大概有 40 几天，始终保持着稳定的错误率，我意识到，我在白努力！并不是我没有耐心，而是若一件事一直停滞不前，说明我的方向压根就是错的，我开始慌了，做梦都在思考如何怎样才是正确的英语打开技巧，找朋友们倾诉，找好基友吐槽，吐槽英语的没人性，为什么技术文档看得贼溜，结果一篇英语阅读直接给我干蒙了，压得我几乎喘不过气。最后是代姐（之前参加 “互联网 +” 的一个小姐姐，来自外国语学院英语专业）给了我一些启发，或许我根本没有看懂文章，可以尝试去看一下赵楠楠的阅读方法论以及一个同班的一个英语大佬 —— 陈舒月交流，给了我一个记单词的方法，以及每次做完一篇文章之后，读一下，写，看，在他们的启发下，我进入闭关期，我意识到：单词在于重复，反复的看，消化文章，也是如此。我重新制定了我的英语学习计划，并且专门一周时间只做英语，具体计划如下:</p><ol><li>早上起床，一两个小时疯狂刷单词，而不是写在本子上，而是进行单词淘汰，具体来说，就是每次把自己十分熟悉的单词移除。</li><li>把之前的阅读重新做，对照着赵楠楠的阅读讲解</li><li>下午继续刷单词</li><li>继续做阅读</li><li>每晚一篇外刊阅读</li></ol><p>每天基本上要过完六七百个单词，然后再次淘汰重背，后面我发现我连单词出现的顺序都记住了，于是我切换软件，改用其他单词软件，一路从词根单词，到不背单词，到墨墨背单词，到欧路词典……，英语阅读也是重新做了个遍，不过很遗憾，进步不大！但！，有进步，说明我方法对了，于是我更加努力，我意识到，赵楠楠的方法不适合我，于是我开始寻找其他老师的阅读方法，期间看过唐迟，邪冰冰（确实邪教做法），在归纳总结了市面上知名教师的阅读方法论，我有了自己的做题理论：</p><ol><li>赵楠楠的方法重单词，读文章和通过问题来推测文章结构和内容。</li><li>唐迟的方法重同义替换，读文章和通过问题以及问题选项来推测答案。</li><li>邪教做法则是利用答案只有一个来对比选项，从而推出最大概率的选项，这个需要对题型有准确的判断。</li></ol><p>我则是去百家之长，利用选项来分析结构，然后直接读文章，而不是邪教读五项，利用同义替换，读问题，标记问题类型，看缺什么，然后直接进入到读文章，因为之前赵楠楠的方法影响，我读文章能够很快推出大意，从而定位，推测这句话是否为烟雾弹，然后直接排除选项，剩余选项再进行对比，然后直接段落定位，简单来说就是这样，最终英二收获 <code>75 </code>分 ，已经算是我比较满意的一个结果了，而且还习惯了阅读英语文章。</p><p>随着英语的复习推进，发现时间已经来到了，十月了，时值金秋，穿插了之前海投的时候，投到了哈啰出行，然后进行了两轮面试，意外的过了，但是我当时已经想考完研，于是推脱到十二月份过去，计划考完研再过去赚点外快啥的，之后就和 HR 博弈，最终以太长时间到岗，Hold 住，因为面试的时候给终面面试官留下了比较好的印象，之后就给我转成了校招岗，重新进入面试环节，然后一面给我挂了，还真是抽象🤡~~~~。又进入懵逼期间，倒不是因为反复起起落落，而是我发现政治内容咋这么夸张，三本书，救命！没有其他办法就拿着背吧，然后发现我背我的，他考他的，是真的完全做不明白，就把政治纳入学习环节，重新调整计划，背书，刷肖四肖八，最后政治分数也还比较可观 ——61。</p><p>莫名其妙就进入考研攻坚期，但是我心态意外的好，没有那种面临考试的紧张感，而是一种充实感（虽然脂肪不再那么充实了）。在真正考场的时候，我总是第一个进入考场，搞得监考老师都记住我了🤡（纯粹是提前半个小时做好准备的习惯罢了）。</p><p>攻坚期，好消息是不封校了，坏消息是肺炎还在，虽然已经算作是小感冒了，我也已经做好了当小阳人的准备了，最后没想到，只发烧了了半天，然后第二天就奇迹般恢复了，并且记忆能力还加强了👴，一口气上五层楼，喔，不对，一口气背完了肖四，意外的因祸得福？</p><p>在考研期间，就一直和一个哥们 (熊) 每天出去到点跑步，后面 爬哥 也加入进来，我们到点散步，讨论学习进度，周末分享我的思维导图（我比较喜欢画这些玩意，对我而言，这算是我特别重要的工具了）。不过也有麻烦点，熊居然碎觉晚上打呼噜😨，我是真的见识到了，在考试前两天，因为考场就在楼下，计划直接在实验室睡，没想到居然封教学楼，无奈就得回寝室，但是室友阳了（讲道理，说不定是我传的），然后我就计划出去住，然后和那哥们一拍即和，拍的多高兴，我就有多后悔，半夜以为世界末日了🤡，于是我毅然决然，回寝室休息😏。</p><p>综合当时考试的情况来看，我已经对我的数学考差有了预感，四门考试，除了数学，均提前一个小时做完，提前半个小时交卷。但是数学给我的感觉不在于它很难，而在于它很难算，做着一度很卡壳，虽然给了我很大打击，不过这为我之后的学习方法进行了警告（虽然考试结束了，学习并没有结束）。</p><p>。。。有点偏题了，回归正文，不过也快结束了。</p><p>中间还有很多小插曲，之后再补充吧，总结这东西，总是需要一大段时间来回顾，生活很美好，只言片语，道不明白。</p><p>考完研已经是 22 日了，电话消息不断，有约饭，恰饭，逛街，有来自老爸老妈的亲切问候。</p><p>元旦的钟声敲响，时光老头还真挺能跑的，一眨眼，又得去追他了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;2022-</summary>
      
    
    
    
    <category term="2022" scheme="https://couriourc.github.io/categories/2022/"/>
    
    <category term="年度总结" scheme="https://couriourc.github.io/categories/2022/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="2022" scheme="https://couriourc.github.io/tags/2022/"/>
    
    <category term="年度回顾" scheme="https://couriourc.github.io/tags/%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BE/"/>
    
  </entry>
  
  <entry>
    <title>成都量子矩阵前端实习面试经历</title>
    <link href="https://couriourc.github.io/posts/1HA3ZR3.html"/>
    <id>https://couriourc.github.io/posts/1HA3ZR3.html</id>
    <published>2023-02-24T04:55:55.000Z</published>
    <updated>2023-03-04T13:51:18.255Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="成都量子矩阵前端实习面试经历"><a class="markdownIt-Anchor" href="#成都量子矩阵前端实习面试经历"></a> 成都量子矩阵前端实习面试经历</h1><p>原本有两面的，终面和线上面，后面貌似说，直接免掉了终面，让我入职了，面试时长大概是二十分钟</p><h2 id="简短的自我介绍"><a class="markdownIt-Anchor" href="#简短的自我介绍"></a> 简短的自我介绍</h2><h3 id="vue2-和-vue3-的区别点"><a class="markdownIt-Anchor" href="#vue2-和-vue3-的区别点"></a> Vue2 和 Vue3 的区别点</h3><p>监听方式</p><h4 id="vue3"><a class="markdownIt-Anchor" href="#vue3"></a> Vue3</h4><p>watchEffect 和 watch 的区别</p><h3 id="计网"><a class="markdownIt-Anchor" href="#计网"></a> 计网</h3><p>HTTP 常见状态码</p><p>HTTP 的发展历程（以为之前微派一面的影响，所以对 HTTP 每一段发生了什么，以及为什么要这么去做，之前都整理了一遍，所以思路比较清晰）</p><h3 id="算法题"><a class="markdownIt-Anchor" href="#算法题"></a> 算法题</h3><p>题目，生成随机颜色 Hex #ffffffff</p><p>讲道理，确实忘记了规则，后面才想起来，分三组，然后前一位表示颜色的亮度，16 进制，这玩意，调 API 随机生成就想，起初我以为还是，生成随机码之后，写个洗牌算法呢，正打算洗牌的 N 种做法呢。</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>因为没什么太多有意思的提问，就没记录太多，不过总结而言，还是需要把基础打好，然后由于这边愿意让我复试之后可以继续实习，然后想的就是反正之后除了毕设和复试，而且对于暑假刚好可以去实习的时候观望一下新的前沿技术，毕竟公司做的是数字孪生 AI 这一块，之前就听到过一些概念，就入职了</p><h2 id="入职体验"><a class="markdownIt-Anchor" href="#入职体验"></a> 入职体验</h2><p>还挺年轻化的，挺有意思的一个团队，很有活力，上下班时间也比较合理，整体来说差强人意。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;成都量子矩</summary>
      
    
    
    
    <category term="面试经历" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
    <category term="2023面试" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="interview" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/interview/"/>
    
    
    <category term="2023面试" scheme="https://couriourc.github.io/tags/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="面试经历" scheme="https://couriourc.github.io/tags/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>微派前端面试经历</title>
    <link href="https://couriourc.github.io/posts/3H28QX.html"/>
    <id>https://couriourc.github.io/posts/3H28QX.html</id>
    <published>2023-02-23T04:55:55.000Z</published>
    <updated>2023-03-04T13:51:08.621Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="微派前端面试经历"><a class="markdownIt-Anchor" href="#微派前端面试经历"></a> 微派前端面试经历</h1><blockquote><p>趁着考研初试成绩出来之前，投了很多家的春招招聘，面了一些，也拒了一些。之前都没有什么面试因为面试给我带来太多的帮助，或氛围不行，或白菜价格，而此次面试得到了很多很不一样的思考方式和提升，特此记录</p></blockquote><h2 id="一面"><a class="markdownIt-Anchor" href="#一面"></a> 一面</h2><blockquote><p>因为本来就有做任何事都提前半小时做好准备的习惯，这次也不例外，所以就提前半个小时进入了面试会议，虽然额外又多等了十五分钟，不过影响不是特别大。</p></blockquote><h3 id="自我介绍"><a class="markdownIt-Anchor" href="#自我介绍"></a> 自我介绍</h3><blockquote><p>之前一直没有一个完整体系的自我介绍，所以这次自我介绍也是说的不是很好，这两天准备给导师发简历，所以就多做了一些功课，就顺手在此处记录一下，虽然不是面试时候说出来的:</p><p>当然不是为了说走后门啥的，我只是想做研究，对于区块链十分感兴趣，恰好看到一位老师在做这一块，也十分感兴趣，但是考虑到如此火爆，再加上我只是一个材料学子，大佬看不上，所以就毛遂自荐，希望能有一席之地，就算复试出了幺蛾子，也能有继续交流的机会，就已经很满足了，毕竟对我而言，周边环境只是辅助作用，自我驱动才是我的动力源泉。</p><p>之所以对区块链的 idea ，如此感兴趣，当初也是受《黑客与画家》的影响，而之前在了解到区块链之前，我也有区块链的基本想法，然后碰到之后就自然而然就像是伯乐之音一般，我的蓝图，便是能参与其中并落地实践。</p><p>嗯，之所以在面经的时候讲一下我的学习方法，纯粹只是突然想到，然后估摸着可能对实验室的学弟学妹们有点用，故此分享。</p></blockquote><p>面试官您好，我叫陈润，现在将要面试的是微派 23 届校招，本科期间，我主修材料科学工程学院电子元器件方向，初入大一任职班长，荣获院级优秀班干部、优秀共青团，我严于律己热爱学习，荣获西华大学高等数学竞赛一等奖，成为一名光荣的共产党员。</p><p>严于律己是性格，兴趣是我的灵魂。</p><p>我热爱计算机技术，以梦为马，当以浆行舟。为具备相应的能力，我去图书馆借阅书籍；到计算机学院课程上旁听；在慕课进行学习。有计划，有目标的提升自己的能力，得益于此，在大一下时，通过层层面试选拔，我加入到计算机学院本科实验室（微力创新互动科技实验室，该实验室自主研发了 “西瓜课表” 等多项项目提供全校师生使用）。</p><p>实验室中，我主攻 Web 应用开发方向，学习基础知识，积极与学长老师交流，弥补不足。学长毕业后，我很荣幸得到实验室老师以及成员们的认可，成为实验室管理员之一，组织每周组会、协助新成员研发学习，实验室在 AI、Web、Unity  方向均斩获诸多奖项，本人也积极参与 “互联网 +”，“计算机能力挑战赛”，“蓝桥杯” 等竞赛并获多项奖项。</p><p>毫无疑问，实验室为我综合能力上带来质的飞跃，于是我在大二下的暑假获得了第一份实习 offer，后因疫情原因提前结束，又入实验室师兄创业团队进行研发，入冬寒假，接到腾讯 IEG 蓝鲸智云校企项目合作开发邀请，参与开源奖项管理系统的开发，并以极高评价结题。</p><p>实际面试和上面有些许出入，面试基本挑的是关于我的学习方式，以及实习经历用到的技术栈和解决的问题来介绍我自己。</p><h3 id="正文"><a class="markdownIt-Anchor" href="#正文"></a> 正文</h3><ul><li><p>面试官：看你简历上写做个小程序的优化，可以讲讲小程序的优化么？</p></li><li><p>我：在该小程序中，我分为了两个优化点。分为延时加载，和差异比对，减少 <code>setData</code> 的批量使用，以及对于虚拟列表的优化实现，首先对于第一个，因为实时效果要求比较严格，而频繁的轮询会导致反复的数据赋值（算是我自己开发时候的疏漏吧）。然后是厂列表，分了两个部分角度优化，分批次 <code>setData</code>, 以及虚拟滚动（这个是之后开发时候的想到的，虽然没有实际用上去）。</p></li><li><p>面试官：差异比对，给你一个复杂对象，怎么去做呢。</p></li><li><p>我：Diff 算法的话太奢侈了，我可能会选择给他转成 JSON，比对一下就是，或者找一个 NodeID , 这种给他绑定，而不是每一个都判断</p><blockquote><p>当时讲的时候，没有现在这么讲的简洁了，不过差不多想要表达这个涵义。</p></blockquote></li><li><p>面试官：你在 xxx 系统写做到了权限控制，你可以讲讲你的思路么？</p></li><li><p>我：在当初我们后端并没有写完整的某个用户能看到什么的权限表，我只有一个用户的身份信息，只知道这是不同权限的人登录，并不知道这个人具体有什么权限，我参照之前实习的时候的一个解决方案，自己维护了一张权限表在本地，然后用 <code>v-if</code> 这些指令结合 <code>vuex</code>,<code>getter</code>, 并将 <code>getter</code> 封装成函数，然后呢，再做校验（这样做其实问题很大，逻辑层彻底与 UI 耦合了，但是多少是一个解决方案，后面单独抽出指令，把权限表在指令中设计，用 <code>display</code> 来做控制，从而做到单个按钮的原子级组件控制。</p><blockquote><p>这个其实是目前市面上看到过特别多的解决思路，我当初并没有查到，甚至当我开发的时候，都没有搞明白这个专有名词是个啥，因为之前太忙于做项目，以及蒙头书中，所以对于前端的一些解决方案并不知道其他人如何解决的，基本都是自己思路想到了，最后运用的七七八八，才知道这个解决方案，人家已经在用了，我面试的时候也是这样说的，因为这个简历毕竟是之前的，而且我认为这玩意确实是当时我独立思考的成果，所以还是能说出来的，而且在设置权限表的时候就像是去设计一款协议一样，也并不是很简单。</p></blockquote></li><li><p>。。。然后又是一些项目上的问题</p></li><li><p>面试官：我们来简单问两个技术问题，<code>js</code> 的事件循环知道么，以及宏任务，和微任务。</p></li><li><p>我：所谓的宏任务，微任务是一个因为多线程带来的问题，就好比时间片轮转一样，在操作系统中有众多进程，进程之间通过回调来做消息通知，我们知道浏览器的 JS 是单线程，但是绝不会有谁说加上 timer 计时器也仍然是单线程，以及 UI/Render 的线程，他们是分割开的，DOM 的解析和 JS 是一起的，但是 CSSOM 的又是另外一个，所以就出现了， RequestAnimateFrame ，RequestIdleCallback 这种东西，以及 setTimeout，setInterval，处于不同线程的任务，对于每一个线程的回调执行，便对微任务队列进行一次批量回调，也就是一个圈的模型，这也解释了为什么 setTimeout 相比于 ReqeustAnimateFrame 出现极小的一个时间差不平衡，一般来讲起码有 0.4ms 的误差，如果遇到更难执行的任务，卡在 js 线程，那么等待的时间就更久，而这也是为什么微任务引入的原因，避免同步任务卡太久，导致渲染不给力。</p><blockquote><p>我当时一下就高兴起来，毕竟我自从把事件循环所谓的宏任务，微任务以及操作系统的进程线程模型联系起来之后，感觉打通了任督二脉之后，就没人怎么问我这个东西了，非常怀恋，RequestAnimateFrame 并不是当时答出来，只是做在这里，现在作为总结，连贯一些。</p></blockquote></li><li><p>面试官：那让你实现一个倒计时，你有什么思路？</p></li><li><p>我：闭包，采用闭包缓存一个 <code>count </code>，然后采用 setTimeout ，或者 setInterval 实现，但是 setInterval 的 timer 容易丢失，而且处于休眠过程中，或者其他页面的时候，就会停止还是说会继续来着（说实话我当时也说不清，现在也有点描述不出来）。</p></li><li><p>面试官：还有没有其他方案呢？</p></li><li><p>我：（突然绷不住了，确实大概就这两个方案，我实在想不出来），不好意思，确实想不到其他方案，可以给个提示么。</p></li><li><p>面试官：有了解过 RequestAnimateFrame 么</p></li><li><p>我：了是了解过，这个可以使得动画边得平滑，不过还是没啥大思路，只知道，大概它的时间间隔和屏幕的 fps 有关，（说实话，我估计是当时理解了他想表达的含义了，应该想说的是展示时钟，那种，这样在刷新屏幕的时候更新值就可以了，这样会更加平滑，准确）</p></li><li><p>面试官：再问一个问题，我看你对 Vue 用的多一些，你可以讲讲 Vue 的实现以及优势么。</p></li><li><p>我：（Vue 双向绑定 ，以及与 Vue 3 的一个对比，以及之前对源码的一些理解，以及其中对 Object.defineProperty 和 Proxy 的关系，以及从作为一个语义开发者对这两个 API 的一个理解）+ （VNode，讲到这玩意的时候很多东西都忘了）+ Diff 算法。</p></li><li><p>面试官：可以讲讲 Vnode 的作用么？</p></li><li><p>我：提升性能，组件化，做 Diff。</p></li><li><p>面试官：还有没有呢？</p></li><li><p>我：。。。（当时确实没想出来）</p></li><li><p>面试官：SSR 了解过么，SSR 是如何生成 HTML5 的？</p></li><li><p>我：（吧啦了这个我之前遇到过，服务端渲染，讲了一下他的实现效果和 SEO 上的作用，不过还是联系不上 Vnode）</p></li><li><p>面试官：Vue 组件化为什么不用 HTML5 的 component?</p></li><li><p>我：兼容性吧？然后讲了一下兼容性的问题。我好像对 Vnode 的有些眉目了。</p></li><li><p>面试官：说说？</p></li><li><p>我：难道是因为兼容性问题？</p></li><li><p>面试官：缺点，不太对，要不你猜一下？</p></li><li><p>我：竟然让我猜，那我就思路飞起来了，从 SSR 角度来想，联系起来，我不由得和  ORM 对比起来，其中 ORM 就是对象关系操作模型，也就是简化 SQL 的一个东西，难道是 Vnode 生成 HTML5，跨平台，移植性？</p></li><li><p>面试官：差不多，那总结一下？</p></li><li><p>我：/。/。/（总结一下）</p></li><li><p>面试官：简单做个算法题？</p><blockquote><p>P A L E</p><p>P L E</p><p>有三种操作方式，加一个字符串，和删一个字符串，和改变一个字符串，问能不能一次操作实现两个字母边得一样。</p></blockquote></li><li><p>我：这个题很熟悉（当时和 leetcode 那个题记错了，也不是背题，只是一眼晃过来，就忽略了，只要一次操作这个边界就开始想着动态规划去做，几个实现，然后写了半天，思路错了，面试官提醒，然后发现条件限制，然后就突然卡住了，这个题就一下子 A 不出来了，。。。面试官耐心的说，可以分成情况讨论，什么情况是不可能成功的，- 提示部分就不继续说了，然后总之当时没写出来，不过大概思路是双指针了，我还往 KMP 方向思考了，回头再看确实是想复杂了，直接双指针，合并一下，然后两个指针位置只差大于 2 就跳出就是，面试完之后，干饭的时候想起来，心中五味杂陈，主要是这个题不难，自己想复杂了）</p><blockquote><p>其中有部分面试时候问的内容，回忆不太起来了</p></blockquote></li></ul><h3 id="反问环节"><a class="markdownIt-Anchor" href="#反问环节"></a> 反问环节</h3><ul><li><p>关于学习建议。（在面试的时候，我基本都会问一下这个问题，因为这样可能给我未来有更大的帮助，至少学习方法不能错）</p></li><li><p>面试官：看得出来，你对底层源码很熟悉，有比较丰富的经验，也有很好的学习习惯，但是对于这些框架的参生，以及其为什么有这个，而不是另外一个已经有了的工具，换句话说就是为什么，这个能取代其他成为主流，可以从这样的宏观角度去思考，从业务层面也好，从实际出发也好，从底层原理出发也好，都需要具体了解，这个技术本身解决了什么问题，像我之前在组内和成员分享的时候，有时候甚至会涉及到某一个属性的实现，从 Webview 本身去看这个的一个原理，这些内容可以是一个学习方向，也就是说知道原理只是为了更好的运用，而不是更困难的去学习。（内容大概有删减，但是呢，也是我理解他说的一段话的含义）</p><blockquote><p>在对于新的框架学习的时候，一定要去思考他的运用场景，他解决了什么问题，它为什么能成为主流，然后它是如何解决某个问题的，以及框架本身的历史包袱，只是自然而然的一个学习过程。这对我的一个学习方法有了转变，之前只是用工具，然后听说这个工具能够解决问题，然后我去采用工具，但是对于它为什么能解决我的问题确实是一知半解的</p></blockquote></li><li><p>如果我成功通过面试之后，可能的业务线与技术栈？</p></li><li><p>。。。。</p></li></ul><h2 id="二面"><a class="markdownIt-Anchor" href="#二面"></a> 二面</h2><h3 id="自我介绍-2"><a class="markdownIt-Anchor" href="#自我介绍-2"></a> 自我介绍</h3><h3 id="讲项目"><a class="markdownIt-Anchor" href="#讲项目"></a> 讲项目</h3><h3 id="一些基本题"><a class="markdownIt-Anchor" href="#一些基本题"></a> 一些基本题</h3><p>面试官：Promise 有哪些静态方法？</p><p>我：我记得的大概有，三种状态组合，要么都完成，要么都没完成的，直接让他完成的，所有任务中完成一个就返回的，不管成不成功都要返回的（实际上，我只是想到了 race all resolve reject 还有其他的，这种 API 其实根据现实场景去寻找更加合理）</p><p>面试官：ES6 有哪些常用方法</p><p>我：我所记得的有，定义变量的（let const ），简化操作的 (解构赋值，展开运算符。。。)，异步操作的（yield generator）, 新的数据类型（Bigint Symbol），出现类的概念，更多的 String 方法。（回答的比较笼统，确实考研去了，这些新规范忘记了很多）</p><p>面试官：说一下 let const 的区别</p><p>我：（这个基本就是网上那一套，什么 const 要赋初值啊，多用 const 啊，以及和 var 再对应一下）</p><h3 id="算法题"><a class="markdownIt-Anchor" href="#算法题"></a> 算法题</h3><p>也不太能算作是算法题吧，只是一个应用题吧</p><p><img lazyload="" src="/images/loading.svg" data-src="image-20230227094915362.png" alt="image-20230227094915362"></p><p>也就是把下面的数据集合，让你实现每一次输入，然后更新这个建议集，</p><p>简单的思路直接 BF，直接 <code>Search</code>， startsWith 啥的，构造正则表达式，巴拉巴拉</p><p>然后就是可以把 goog 进行结构转变，构建一个树就行了</p><h5 id="反问"><a class="markdownIt-Anchor" href="#反问"></a> 反问</h5><p>因为是不同业务线的面试官，就顺便问了一下他所处的业务线，以及相关内容，毕竟考虑到如果去了之后，好选择业务线。</p><h2 id="三面"><a class="markdownIt-Anchor" href="#三面"></a> 三面</h2><h3 id="问项目"><a class="markdownIt-Anchor" href="#问项目"></a> 问项目</h3><h3 id="如何排查-bug"><a class="markdownIt-Anchor" href="#如何排查-bug"></a> 如何排查 Bug</h3><h3 id="算法题和思维题"><a class="markdownIt-Anchor" href="#算法题和思维题"></a> 算法题和思维题</h3><h4 id="算法题-2"><a class="markdownIt-Anchor" href="#算法题-2"></a> 算法题</h4><p>给定 n+1 个数字，然后随机放入 n 个到某一个数组，然后判断哪个数没放进去</p><blockquote><p>基本思路：遍历 n+1 次，异或一遍</p></blockquote><h4 id="思维题"><a class="markdownIt-Anchor" href="#思维题"></a> 思维题</h4><p>假定一个聊天室，只有我和你两个人，然后我说我有一个超能力，能够知道你有多少根头发，你怎样判断我是否真的有这个超能力。</p><blockquote><p>当时看的时候还觉得蛮新颖的，再加上有些紧张，一时半会想不到解决方法，差点去手写真值表，然后面试官提醒，如果服务器有一个功能，可以去输出一张图片有多少个某个颜色的像素点，怎么去验证他，不过我听完之后还是没思路，然后转念一想，我作为客户端，我只有我自己的信息，那我对于服务器也是一个黑盒状态，那么我只要保证我的随机性，然后知道我自己的信息差，然后让对面来猜就行了，也就是你先来问我一次，我报一个数，然后你偷偷去拔掉一根（可以是随机的根，只要自己知道就可以了，有一种类似私钥的感觉），你再来找我问你有多少根，然后从而就能判断出，是否真的有这个能力了。</p><p>后面研究了一下，发现这个是在区块链很火的一个东西，零知识证明，本来之前也在关注区块链，不过主要是 p2p 层和 共识机制（因为和分布式这个很有共同点，所以关注的比较多）。</p></blockquote><h2 id="hr-面"><a class="markdownIt-Anchor" href="#hr-面"></a> HR 面</h2><p>原本有 CTO 面，也就是有 四面的，但是貌似后面给我免掉了，然后我就直达 HR 面了。</p><p>可是就是三面之后，差不多出复试成绩了，没想到考的还算可以，那我肯定只有跑去准备复试了，真的很可惜，本来也不想为难 HR 的，因为这种鸽子，她们大概率会被骂，就希望 CTO 面的时候，然后给他解释一下，不过也可能是我想多了吧，自作多情了点，主要是一面 和 HR 给我的映像特别深，本来计划如果考的不太行，就进入他的那条业务线的。</p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>面试下来，面试官观察我的同时，我也会观察面试官，当然不是察言观色，而是观察我加入她们是否有意义，因为，如果是一个死气层层，只是八股文的团队，貌似可以缓解生计，但是却很没必要，可以等之后再来考虑生计问题，在满足生活的条件下，还是可以追求一下理想的🎈。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;微派前端面</summary>
      
    
    
    
    <category term="面试经历" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
    <category term="2023面试" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="interview" scheme="https://couriourc.github.io/categories/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/2023%E9%9D%A2%E8%AF%95/interview/"/>
    
    
    <category term="2023面试" scheme="https://couriourc.github.io/tags/2023%E9%9D%A2%E8%AF%95/"/>
    
    <category term="面试经历" scheme="https://couriourc.github.io/tags/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 指令周期</title>
    <link href="https://couriourc.github.io/posts/24YB9K9.html"/>
    <id>https://couriourc.github.io/posts/24YB9K9.html</id>
    <published>2023-02-12T05:00:57.000Z</published>
    <updated>2023-02-13T04:00:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><script src="https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js@3.0/dist/svg.min.js"></script><h1 id="指令周期"><a class="markdownIt-Anchor" href="#指令周期"></a> 指令周期</h1><p>CPU 执行指令共有四个周期：取指周期 -&gt;[间指周期]-&gt; 执行周期 -&gt;[中断周期]</p><svg width="800" height="600" xmlns="http://www.w3.org/2000/svg" id="graph1"> <g>  <title>取指周期 -&gt; 执行周期的指令周期</title>  <g id="svg_31">   <rect stroke="#000" id="svg_29" height="168" width="82" y="232" x="653" fill="#fff"></rect>   <text id="svg_30" x="659" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" y="326" stroke="#000" fill="#000000">存储器</text>  </g>  <g stroke="null" id="svg_33">   <rect stroke="#000" id="svg_6" height="287.99999" width="350.00001" y="154" x="54" fill="#fff"></rect>   <rect stroke="#000" id="svg_7" height="65.57538" width="70.94595" y="177.92615" x="61.43243" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" id="svg_8" y="226.74306" x="95" stroke-width="0" fill="#000000"> PC</text>   <path stroke="#000" id="svg_9" d="m274.27027,182.35692l83.78379,0l0,63.80307l-83.78379,0l0,-63.80307z" opacity="undefined" fill="#fff"></path>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_11" y="229.74306" x="416" fill="#000000">MAR</text>   <rect stroke="#000" id="svg_12" height="40.76308" width="75" y="284.26461" x="277.64865" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_14" y="332.74306" x="425" fill="#000000">CU</text>   <rect stroke="#000" id="svg_15" height="62.91692" width="87.83784" y="353.38461" x="273.5946" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_16" y="423.74306" x="413" fill="#000000">MDR</text>   <rect stroke="#000" id="svg_17" height="57.6" width="70.94595" y="361.35999" x="62.10811" fill="#fff"></rect>   <text transform="matrix(0.675676 0 0 0.886154 17.5135 17.76)" stroke="#000" xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_19" y="430.74306" x="93" fill="#000000">IR</text>  </g>  <g id="svg_37">   <line id="svg_35" y2="209" x2="275" y1="208" x1="130" stroke="#000" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_36" y="198" x="192" stroke="#000" fill="#000000">1</text>  </g>  <g stroke="null" id="svg_40">   <line stroke="#000" id="svg_38" y2="213" x2="473" y1="212" x1="360" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" id="svg_45" y="195" x="408" stroke-width="0" stroke="#000" fill="#000000">2</text>  </g>  <text xml:space="preserve" text-anchor="start" font-family="'Dancing Script'" font-size="24" stroke-width="0" id="svg_42" y="60" x="382" stroke="#000" fill="#000000"> 地址总线</text>  <text xml:space="preserve" text-anchor="start" font-family="'Dancing Script'" font-size="24" stroke-width="0" id="svg_43" y="60" x="489" stroke="#000" fill="#000000">数据总线</text>  <text xml:space="preserve" text-anchor="start" font-family="'Dancing Script'" font-size="24" stroke-width="0" id="svg_44" y="60" x="594" stroke="#000" fill="#000000">控制总线</text>  <g stroke="null" id="svg_48">   <line stroke="#000" id="svg_46" y2="156" x2="707.00001" y1="155" x1="476" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" id="svg_49" y="140" x="586" stroke-width="0" stroke="#000" fill="#000000"> 3</text>   <line id="svg_52" y2="231" x2="707" y1="157" x1="707" stroke="#000" fill="none"></line>  </g>  <line id="svg_56" y2="260" x2="656" y1="259" x1="608" stroke="#000" fill="none"></line>  <g id="svg_61">   <path id="svg_54" d="m353,299l254,3" opacity="undefined" stroke="#000" fill="none"></path>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_60" y="292" x="436" stroke="#000" fill="#000000">4</text>  </g>  <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_62" y="242" x="622" stroke="#000" fill="#000000">5</text>  <path id="svg_66" d="m277,307c-183,-1 -170,2 -170,2c0,0 -2,-64 -2,-64" opacity="NaN" stroke="#000" fill="none"></path>  <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_71" y="286" x="200" stroke="#000" fill="#000000">9</text>  <g id="svg_72">   <line id="svg_59" y2="382" x2="137" y1="381" x1="275" stroke="#000" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_70" y="365" x="195" stroke="#000" fill="#000000">8</text>  </g>  <g id="svg_73">   <line id="svg_64" y2="393" x2="367" y1="392" x1="531" stroke="#000" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_69" y="381" x="437" stroke="#000" fill="#000000">7</text>  </g>  <g id="svg_74">   <g id="svg_32">    <line id="svg_24" y2="520" x2="471" y1="77" x1="474" stroke="#000" fill="none"></line>    <line id="svg_27" y2="520" x2="530" y1="77" x1="533" stroke="#000" fill="none"></line>    <line id="svg_28" y2="520" x2="605" y1="77" x1="608" stroke="#000" fill="none"></line>   </g>   <line stroke="#000" id="svg_63" y2="357" x2="528.99999" y1="357" x1="655" fill="none"></line>   <text xml:space="preserve" text-anchor="start" font-family="Noto Sans JP" font-size="24" stroke-width="0" id="svg_68" y="343" x="571" stroke="#000" fill="#000000">6</text>  </g> </g></svg>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;script src=&quot;</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="computer-base" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/computer-base/"/>
    
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 原码，补码，反码</title>
    <link href="https://couriourc.github.io/posts/3J64FQ8.html"/>
    <id>https://couriourc.github.io/posts/3J64FQ8.html</id>
    <published>2023-02-12T04:25:57.000Z</published>
    <updated>2023-02-12T04:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="原码补码反码"><a class="markdownIt-Anchor" href="#原码补码反码"></a> 原码，补码，反码</h1><p><strong>原码</strong>：将最高位作为符号位（0 表示正，1 表示负），其它数字位代表数值本身的绝对值的数字表示方式。</p><p><strong>反码</strong>：如果是正数，则表示方法和原码一样；如果是负数，符号位不变，其余各位取反，则得到这个数字的反码表示形式。</p><p><strong>补码</strong>：如果是正数，则表示方法和原码一样；如果是负数，则将数字的反码加上 1（相当于将原码数值位取反然后在最低位加 1）。</p><blockquote><p>tips: 以上的说法是对于二进制，可以知道补码的含义是</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><msup><mi>K</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = K^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> K 表示几进制，n 表示有几位</p><p>比如一位十进制的补码</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><mn>1</mn><msup><mn>0</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = 10^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></p></blockquote><h2 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h2><table><thead><tr><th>真值</th><th>原码</th><th>反码</th><th>补码</th></tr></thead><tbody><tr><td> 58</td><td>0111010</td><td>0111010</td><td>0111010</td></tr><tr><td>-58</td><td><span text-red="">1</span>111010</td><td>1<span text-red="">000101</span></td><td>10001<span text-red="">10</span></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;原码补码反</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="computer-base" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/computer-base/"/>
    
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 概述</title>
    <link href="https://couriourc.github.io/posts/1TVR2P9.html"/>
    <id>https://couriourc.github.io/posts/1TVR2P9.html</id>
    <published>2023-02-12T04:25:57.000Z</published>
    <updated>2023-02-12T04:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="原码补码反码"><a class="markdownIt-Anchor" href="#原码补码反码"></a> 原码，补码，反码</h1><p><strong>原码</strong>：将最高位作为符号位（0 表示正，1 表示负），其它数字位代表数值本身的绝对值的数字表示方式。</p><p><strong>反码</strong>：如果是正数，则表示方法和原码一样；如果是负数，符号位不变，其余各位取反，则得到这个数字的反码表示形式。</p><p><strong>补码</strong>：如果是正数，则表示方法和原码一样；如果是负数，则将数字的反码加上 1（相当于将原码数值位取反然后在最低位加 1）。</p><blockquote><p>tips: 以上的说法是对于二进制，可以知道补码的含义是</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><msup><mi>K</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = K^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> K 表示几进制，n 表示有几位</p><p>比如一位十进制的补码</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>P</mi><msub><mo stretchy="false">]</mo><mtext> 原</mtext></msub><mo> +</mo><mo stretchy="false">[</mo><mi>Q</mi><msub><mo stretchy="false">]</mo><mtext> 补</mtext></msub><mo> =</mo><mn>1</mn><msup><mn>0</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">[P]_原 +[Q]_补 = 10^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 原</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">Q</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight"> 补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></p></blockquote><h2 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h2><table><thead><tr><th>真值</th><th>原码</th><th>反码</th><th>补码</th></tr></thead><tbody><tr><td> 58</td><td>0111010</td><td>0111010</td><td>0111010</td></tr><tr><td>-58</td><td><span text-red="">1</span>111010</td><td>1<span text-red="">000101</span></td><td>10001<span text-red="">10</span></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;原码补码反</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="computer-base" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/computer-base/"/>
    
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 —— 常用寄存器</title>
    <link href="https://couriourc.github.io/posts/2HMTDAB.html"/>
    <id>https://couriourc.github.io/posts/2HMTDAB.html</id>
    <published>2023-02-12T04:25:57.000Z</published>
    <updated>2023-02-12T04:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="常用寄存器"><a class="markdownIt-Anchor" href="#常用寄存器"></a> 常用寄存器</h1><h2 id="通用寄存器32位"><a class="markdownIt-Anchor" href="#通用寄存器32位"></a> 通用寄存器（32 位）</h2><h3 id="数据寄存器"><a class="markdownIt-Anchor" href="#数据寄存器"></a> 数据寄存器</h3><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> EAX(Accumulator)</td><td> 累加寄存器</td><td>在乘法和除法指令中被自动使用；在 Win32 中，一般用在函数的返回值中。</td></tr><tr><td>EBX(Base)</td><td> 基址寄存器</td><td> DS 段中的数据指针</td></tr><tr><td> ECX(Count)</td><td> 计数寄存器</td><td> CPU 自动使用 ECX 作为循环计数器，在字符串和循环操作中常用，在循环指令（LOOP）或串操作中，ECX 用来进行循环计数，每执行一次循环，ECX 都会被 CPU 自动减一</td></tr><tr><td> EDX(Data)</td><td> 数据寄存器</td><td></td></tr></tbody></table><h3 id="指针变址寄存器"><a class="markdownIt-Anchor" href="#指针变址寄存器"></a> 指针变址寄存器</h3><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> EBP(Base Pointer)</td><td> 扩展基址指针寄存器</td><td> SS 段中堆栈内数据指针。EBP 由高级语言用来引用参数和局部变量，通常称为堆栈基址指针寄存器。</td></tr><tr><td>ESP(Stack Pointer)</td><td> 堆栈指针寄存器</td><td> SS 段中堆栈指针。ESP 用来寻址堆栈上的数据，ESP 寄存器一般不参与算数运算。</td></tr><tr><td>ESI(Source Index)</td><td> 源变址寄存器</td><td>字符串操作源指针</td></tr><tr><td> EDI(Destination Index)</td><td> 目的指针寄存器</td><td>字符串操作目标指针</td></tr></tbody></table><hr><h2 id="指令指针寄存器"><a class="markdownIt-Anchor" href="#指令指针寄存器"></a> 指令指针寄存器</h2><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> EIP(Instruction Pointer)</td><td> 指令指针寄存器</td><td>保存着下一条要执行的指令的地址。程序运行时，CPU 会读取 EIP 中的一条指令的地址，传送指令到指令缓冲区后，EIP 寄存器的值自动增加，增加的大小即是读取指令的字节大小，即下一条指令的地址为当前指令的地址加上当前指令的长度。</td></tr></tbody></table><hr><h2 id="段寄存器"><a class="markdownIt-Anchor" href="#段寄存器"></a> 段寄存器</h2><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> CS(Code Segment)</td><td> 代码段</td><td></td></tr><tr><td> DS(Data Segment)</td><td> 数据段</td><td></td></tr><tr><td> SS(Stack Segment)</td><td> 堆栈段</td><td></td></tr><tr><td> ES(Extra Segment)</td><td> 附加数据段</td><td></td></tr><tr><td> FS</td><td> 附加数据段</td><td></td></tr><tr><td> GS</td><td> 附加数据段</td><td></td></tr></tbody></table><hr><h2 id="标志寄存器"><a class="markdownIt-Anchor" href="#标志寄存器"></a> 标志寄存器</h2><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> FLAGS（flags) 或 PSW</td><td> 标志寄存器</td><td>程序状态字寄存器</td></tr></tbody></table><p>标志寄存器 又分为两类：条件标志寄存器、控制标志寄存器</p><p>条件标志寄存器：</p><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> OF(OverFlow Flag)</td><td> 溢出标志位</td><td>用来反应有符号数加减法运算所得结果是否溢出。运算超出当前运算位数所能表示的范围，则称为溢出，标志位被置为 1，否则为 0。</td></tr><tr><td>SF(Sign Flag)</td><td> 符号标志位</td><td>用来反应运算结果是否为 0。运算结果为负时置为 1，否则为 0。</td></tr><tr><td>ZF(Zero Flag)</td><td> 零标志位</td><td>用来反应运算结果是否为 0。为零时置为 1，否则为 0。</td></tr><tr><td>AF(Auxilliary carry Flag)</td><td> 辅助进位标志位</td><td>在字操作址，发生低字节向高字节进位或借位时该标志位被置为 1，否则为 0。</td></tr><tr><td>PF(Parity Flag)</td><td> 奇偶标志位</td><td>用于反应结果中 “1” 的个数的奇偶性。如果 “1” 为偶数置为 1，否则为 0。</td></tr><tr><td>CF(Carry Flag)</td><td> 进位标志位</td><td>运算结果的最高位产生了一个进位或错位，则该标志位置为 1，否则为 0。</td></tr></tbody></table><h3 id="控制标志寄存器"><a class="markdownIt-Anchor" href="#控制标志寄存器"></a> 控制标志寄存器</h3><table><thead><tr><th>寄存器</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td> DF(Direction Flag)</td><td> 方向标志位</td><td>用于串操作指令中，控制地址的变化方向。当 DF 为 0 时，存储器地址自动增加；当 DF 为 1 时，存储器地址自动减少。</td></tr><tr><td>IF(Interupt Flag)</td><td> 中断标志位</td><td>用于控制外部可屏蔽中断是否可以被处理器响应。</td></tr><tr><td>TF(Trap Flag)</td><td> 陷阱标志位</td><td>用于控制处理器是否进入单步操作方式。当 TF 为 0 时，处理器在正常模式下运行；当为 1 时，处理器单步执行指令，调试器可以逐步指令进行执行就是使用了该标志位。</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;常用寄存器</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="computer-base" scheme="https://couriourc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/computer-base/"/>
    
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="计算机组成原理" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论 - SQL</title>
    <link href="https://couriourc.github.io/posts/1G2H57H.html"/>
    <id>https://couriourc.github.io/posts/1G2H57H.html</id>
    <published>2023-02-11T11:25:57.000Z</published>
    <updated>2023-02-11T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="关系数据库标准语言sql"><a class="markdownIt-Anchor" href="#关系数据库标准语言sql"></a> 关系数据库标准语言（SQL）</h1><h2 id="sql-的特点"><a class="markdownIt-Anchor" href="#sql-的特点"></a> SQL 的特点</h2><h3 id="综合统一"><a class="markdownIt-Anchor" href="#综合统一"></a> 综合统一</h3><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;SQL&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;语言构成&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;DDL(数据库定义语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;DCL(数据控制语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;DML(数据操作（管理）语言)&quot;}]}]}"></svg></div><ul><li><p>是集数据定义语言（DDL），（DML），(DCL) 于一体的非过程语言</p></li><li><p>可以独立完成数据库生命周期的全部活动</p><ul><li>定义和修改、删除关系模式，定义和删除视图，插入数据，建立数据库<ul><li>模式 -&gt;CREATE SCHEMA schema_name AUTHORIZATION  username</li><li> 视图 -&gt;</li><li> 数据库：指的是插入数据</li></ul></li><li>对数据库的数据进行查询更新</li><li>数据库重构和维护</li><li>数据库安全性、完整性控制、以及事务控制</li><li><strong>嵌入式 SQL</strong> 和<strong>动态 SQL</strong></li></ul></li><li><p>用户数据库投入运行后，可根据需要随时逐步修改模式，不影响数据库的运行</p></li><li><p>数据操作符统一</p></li></ul><h3 id="高度非过程化"><a class="markdownIt-Anchor" href="#高度非过程化"></a> 高度非过程化</h3><ul><li>非关系数据模型的数据操纵语言面向过程，必须指定存取路径，而 <strong>SQL</strong> 只需要提出<strong>做什么</strong>。</li><li>SQL 的存取路径的选择以及 SQL 的操作过程，由系统自动完成</li></ul><h3 id="面向集合的操作方式"><a class="markdownIt-Anchor" href="#面向集合的操作方式"></a> 面向集合的操作方式</h3><ul><li><p>非关系数据模型采用面向记录的操作方式，操作对象是一条数据</p></li><li><p>SQL 操作对象、查找结果可以是元组的集合，他的一次插入、删除、更新操作的对象可以是元组的集合</p></li></ul><h3 id="以同一种语法结构提供多种使用方式"><a class="markdownIt-Anchor" href="#以同一种语法结构提供多种使用方式"></a> 以同一种语法结构提供多种使用方式</h3><ul><li>SQL 是 独立的语言，能够独立用于联机交互的使用方式</li><li> SQL 又是嵌入式语言，能嵌入到高级语言中，共程序员设计使用</li></ul><h3 id="sql-语言简洁易学易用"><a class="markdownIt-Anchor" href="#sql-语言简洁易学易用"></a> SQL 语言简洁，易学易用</h3><table><thead><tr><th>SQL 功能</th><th>动词</th></tr></thead><tbody><tr><td>数据查询</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong> SELECT</strong></span></td></tr><tr><td> 数据定义 (DDL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>CREATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DROP</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>ALTER</strong></span></td></tr><tr><td> 数据管理 (DML)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>INSERT</strong></span> <span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>UPDATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DELETE</strong></span></td></tr><tr><td> 数据控制 (DCL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>GRANT</strong></span> <span rounded-lg="" bg-green="" text-white=""><strong>REVOKE</strong></span></td></tr></tbody></table><h3 id="sql-的基本概念"><a class="markdownIt-Anchor" href="#sql-的基本概念"></a> SQL 的基本概念</h3><p>基本表：</p><ul><li>本身独立存在的表</li><li> SQL 中一个关系就对应一个基本表</li><li>一个（或多个）基本表对应一个存储文件</li><li>一个表可以带若干索引</li></ul><p>存储文件</p><ul><li>逻辑结构构成了关系数据库的内模式</li><li>物理结构对用户是隐藏的</li></ul><p>视图</p><ul><li>从一个或几个基本表到处的表</li><li>数据库中只存放视图的定义而不存放视图对应的数据</li><li>视图是一个虚表</li><li>用户可以再视图上再定义视图</li></ul><h2 id="32-学生-课程-数据库"><a class="markdownIt-Anchor" href="#32-学生-课程-数据库"></a> 3.2 学生 - 课程 数据库</h2><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215121643500.png" alt="image-20230215121643500"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>S-T<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_dept'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>      <span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_pno'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ccredit<span class="token punctuation">`</span></span> <span class="token keyword">FLOAT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span>     <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span>  <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Sno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Cno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215123735800.png" alt="image-20230215123735800"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token string">'李勇'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'刘晨'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'王敏'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'MA'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'张立'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'IS'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133708074.png" alt="image-20230215133708074"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215131918332.png" alt="image-20230215131918332"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Credit<span class="token punctuation">`</span></span> <span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'数据库'</span><span class="token punctuation">,</span><span class="token string">'5'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">''</span> <span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'信息系统'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'操作系统'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据结构'</span><span class="token punctuation">,</span><span class="token string">'7'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据处理'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'PASCAL语言'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133652902.png" alt="image-20230215133652902"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133005148.png" alt="image-20230215133005148"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133720872.png" alt="image-20230215133720872"></p><hr><h2 id="数据定义"><a class="markdownIt-Anchor" href="#数据定义"></a> 数据定义</h2><h3 id="sql-数据定义功能"><a class="markdownIt-Anchor" href="#sql-数据定义功能"></a> SQL 数据定义功能</h3><ul><li><p>视图和索引定义</p></li><li><p>模式</p></li><li><p>表定义</p><blockquote><p>tips:</p><p>模式与数据库、数据库中的表的关系：<br>1 个数据库下，可以有多个模式。</p><p>1 个模式下，可以有 0 个或多个表 。</p></blockquote></li></ul><table><thead><tr><th>操作对象</th><th>创建</th><th>删除</th><th>修改</th><th></th></tr></thead><tbody><tr><td>视图</td><td> CREATE VIEW</td><td>DROP VIEW</td><td></td><td></td></tr><tr><td> 索引</td><td> CREATE INDEX</td><td>DROP INDEX</td><td>ALTER INDEX</td><td></td></tr><tr><td> 模式</td><td> CREATE SCHEMA</td><td>DROP SCHEMA</td><td></td><td></td></tr><tr><td> 表</td><td> CREATE TABLE</td><td>DROP TABLE</td><td>ALTER TABLE</td><td></td></tr></tbody></table><h3 id="模式"><a class="markdownIt-Anchor" href="#模式"></a> 模式</h3><p>数据库（有的系统称为目录）-&gt; 模式 -&gt; 表以及视图、索引</p><p>现代关系数据库系统提供了一个层次化的对象命名机制</p><ul><li>一个关系数据库管理系统的实例中可以有多个数据库</li><li>一个数据库可以建立多个模式</li><li>一个模式下通常包括多个表、视图和索引等数据库对象</li></ul><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215140428334.png" alt="image-20230215140428334"></p><h4 id="模式的定义与删除"><a class="markdownIt-Anchor" href="#模式的定义与删除"></a> 模式的定义与删除</h4><h5 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h5><ul><li><p>定义模式实际上定义了一个命名空间。</p></li><li><p>在这个空间中可以定义该模式包含的数据库对象，例如基本表、视图、索引等。</p></li><li><p>在 CREATE SCHEMA 中可以接受 CREATE TABLE，CREATE VIEW 和 GRANT 子句。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token identifier"><span class="token punctuation">`</span>SCHEMA_A<span class="token punctuation">`</span></span> <span class="token keyword">AUTHORIZATION</span> <span class="token identifier"><span class="token punctuation">`</span>SYS_USER<span class="token punctuation">`</span></span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>TABLE_NAME<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>COLUMN_NAME<span class="token punctuation">`</span></span> <span class="token keyword">TYPE</span> <span class="token punctuation">[</span><span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>KEY_TYPE<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> DEFAULT_VALUE<span class="token punctuation">]</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    表名 表完整性约束<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h5 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">SCHEMA</span> <span class="token operator">&lt;</span>模式名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>删除模式有两种额外选项</p><ul><li><p>级联：删除模式的同时把该模式中所有的数据库对象全部删除</p></li><li><p>限制：如果该模式中定义了下属的数据库对象（如表，视图等），则拒绝该删除语句的执行</p><blockquote><p>也就是级联全部强制清空，格式化，限制就是确保为空的时候删除</p></blockquote></li></ul></li></ul><h4 id="基本表的定义-删除"><a class="markdownIt-Anchor" href="#基本表的定义-删除"></a> 基本表的定义、删除</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>表级完整性约束条件：e<span class="token punctuation">.</span>g: <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&lt;表名&gt;：索要定义的基本表的名字</p><p>&lt;列名&gt;：组成该表的各个属性</p><p>&lt;列级完整性约束条件&gt;：涉及相应属性列的完整性约束条件</p><ul><li><code>UNIQUE</code></li><li><code>PRIMARY KEY</code></li><li><code>NOT NULL</code></li><li><code>FOREIGN KEY</code></li><li><code>AUTO_INCREMENT</code></li><li><code>DEFAULT</code></li><li><code>CHECK</code></li></ul><p>&lt;表级完整性约束条件&gt;：涉及一个或多个属性列的完整性约束条件</p><ul><li>PRIMARY KEY (&lt; 列名&gt;,[&lt; 列名 &gt;] )</li><li> 如果完整性约束条件涉及到该表的多个属性列，则必须定义在表级，不然的话就可以定义在列级</li></ul><blockquote><p>也就是</p><p>PRIMARY KEY 和 PRIMARY KEY ( ) 的区别</p></blockquote><h5 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h5><ul><li><p>SQL 中的域的概念用<strong>数据类型</strong>来实现</p></li><li><p>定义表的属性时需要指明其数据类型以及长度</p></li><li><p>选用那种数据类型需要从取值范围和运算角度来思考</p><table><thead><tr><th>序号</th><th>数据类型</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td> 1</td><td><code>CHAR(n)</code>,<code>CHARACTER(n)</code></td><td>长度为 n 的定长字串</td><td></td></tr><tr><td> 2</td><td><code>VARCHAR(n)</code>,<code>CHARACTEVARYING(n)</code></td><td>最大长度为 n 的边长字串</td><td></td></tr><tr><td> 3</td><td><code>CLOB</code></td><td>字符串大对象</td><td></td></tr><tr><td> 4</td><td><code>BLOB</code></td><td>二进制大对象</td><td></td></tr><tr><td> 5</td><td><code>INT</code>，<code>INTEGER</code></td><td>长整数（4 字节）</td><td></td></tr><tr><td>6</td><td><code>BIGINT</code></td><td>大整数（8 字节）</td><td></td></tr><tr><td>7</td><td><code>SMALLINT</code></td><td>短整数（2 字节）</td><td></td></tr><tr><td>8</td><td><code>NUMERIC(p,d)</code></td><td>定点数，由 p 位数字（不包括符号位，小数点）组成，小输后面由 d 位</td><td></td></tr><tr><td> 9</td><td><code>DECIMAL(p,d),DEC(p,d)</code></td><td>同 NUMERIC</td><td></td></tr><tr><td>10</td><td><code>REAL</code></td><td>取决于机器精度的单精度浮点数</td><td></td></tr><tr><td> 11</td><td><code>DOUBLE PRECISION</code></td><td>取决于机器精度的双精度浮点数</td><td></td></tr><tr><td> 12</td><td><code>FLOAT(n)</code></td><td>可选精度的浮点数，精度至少为 n 位数字</td><td></td></tr><tr><td> 13</td><td><code>BOOLEAN</code></td><td>逻辑布尔量</td><td></td></tr><tr><td> 14</td><td><code>DATE</code></td><td>日期，YYYY-MM-DD</td><td></td></tr><tr><td>15</td><td><code>TIME</code></td><td>时间，HH:MM:SS</td><td></td></tr><tr><td>16</td><td><code>TIMESTAMP</code></td><td>时间戳类型</td><td></td></tr><tr><td> 17</td><td><code>INTERVAL</code></td><td>时间间隔类型</td><td></td></tr></tbody></table><blockquote><p>每一个基本表都属于某一个模式</p><p>一个模式包含多个基本表</p><p>定义基本表所属模式</p><ul><li><p>方法一 在表名中明显地给出模式名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Create</span> <span class="token keyword">table</span><span class="token string">"S-T"</span><span class="token punctuation">.</span>Student<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/*模式名为 S-T*/</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>Cource<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>SC<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方法二：在创建模式语句中同时创建表</p><p>方法三：设置所属的模式</p></li></ul></blockquote></li><li><p>创建基本表（其他数据库也一样）时候，没有指定模式，系统根据搜索路径来确定对象所属的模式</p><blockquote><p>在 use database_name; 的时候选择的模式</p></blockquote></li><li><p>关系数据库管理系统会使用模式列表中第一个存在的模式作为数据库对象的模式名</p></li><li><p>若搜索路径中的模式明都不存在，系统将会报错</p></li><li><p>数据库管理员用户可以设置搜索路径，然后定义基本表</p></li></ul><h5 id="修改表"><a class="markdownIt-Anchor" href="#修改表"></a> 修改表</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="删除表"><a class="markdownIt-Anchor" href="#删除表"></a> 删除表</h4><pre class="line-numbers language-Sql" data-language="Sql"><code class="language-Sql">DROP TABLE &lt;表名&gt; [RESTRICT | CASCADE];DROP TABLE `S-T`.sc CASCADE;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>RESTRICT</code>、<code>CASCADE</code> 效果同之前删除模式一样</p></blockquote><ul><li><p>基本表定义被删除，数据被删除</p></li><li><p>表上建立的索引、视图、触发器等一般也将被删除</p><p>若表上建有视图，选择 <code>RESTRICT </code>时表不能被删除；选择 <code>CASCADE</code> 时，视图也自动删除。</p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> VIEW_STUDENT <span class="token keyword">AS</span><span class="token keyword">SELECT</span> Sno<span class="token punctuation">,</span> Sname<span class="token punctuation">,</span>Sage <span class="token keyword">From</span> Student<span class="token keyword">WHERE</span> Sdept<span class="token operator">=</span><span class="token string">'ls'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h4 id="索引表的定义-删除"><a class="markdownIt-Anchor" href="#索引表的定义-删除"></a> 索引表的定义、删除</h4><ul><li><p>建立索引的目的：加快查询速度</p></li><li><p>关系数据库管理系统中常见索引</p><ul><li>顺序文件上的索引</li><li> B+ 索引 🌮 具有动态平衡的有点</li><li>散列索引：查找速度很快</li><li>位图索引</li></ul></li></ul><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;谁可以建立索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;数据库管理员，也就是建表的主人&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;谁维护索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;关系数据库管理系统自动完成&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;谁使用索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;关系管理系统自动选择合适的索引作为存取路径，用户不必也不能显示的选择索引&quot;}]}]}"></svg></div><h5 id="建立索引"><a class="markdownIt-Anchor" href="#建立索引"></a> 建立索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token operator">|</span>CLUSTER<span class="token punctuation">]</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>次序<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> Stusno <span class="token keyword">ON</span> Student<span class="token punctuation">(</span>Sno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>个人理解，INDEX 的使用场景应该是在静态的表中，也就是内部数据的使用，比如我要放一个百科手册在里面，对这个手册我在之后并不会改他，或者说我在很久远之后，而且是作为管理员的我，来修改，这个时候建立索引性价比就比较高。</p><p>索引是属于表的，所以不存在修改索引到哪个表啥的。</p></blockquote><h5 id="修改索引"><a class="markdownIt-Anchor" href="#修改索引"></a> 修改索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>旧索引名<span class="token operator">&gt;</span> <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> <span class="token operator">&lt;</span>新索引<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> Stusno  <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> Stuid<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="删除索引"><a class="markdownIt-Anchor" href="#删除索引"></a> 删除索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="阶段总结"><a class="markdownIt-Anchor" href="#阶段总结"></a> 阶段总结</h3><blockquote><p>阶段总结：以上都是 DML 相关的语句</p><p>对于表进行创建，删除</p><p>他主要有一下几个方面:</p><ul><li><p>模式</p><ul><li><pre class="highlight"><code class="sql"><span class="hljs-keyword">CREATE</span> SCHEMA <span class="hljs-operator">&lt;</span>模式名<span class="hljs-operator">&gt;</span> [<span class="hljs-keyword">AUTHORIZATION</span> <span class="hljs-operator">&lt;</span>USER_NAME<span class="hljs-operator">&gt;</span>]; <span class="hljs-operator">&lt;</span><span class="hljs-operator">!</span><span class="hljs-comment">--code￼14--&gt;</span></code></pre></li></ul></li><li><p>基本表</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改</p></li></ul></li></ul></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>视图</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>索引</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;关系数据库</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="database-system" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/database-system/"/>
    
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="SQL" scheme="https://couriourc.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论 - SQL</title>
    <link href="https://couriourc.github.io/posts/1G2H57H.html"/>
    <id>https://couriourc.github.io/posts/1G2H57H.html</id>
    <published>2023-02-11T11:25:57.000Z</published>
    <updated>2023-02-11T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="关系数据库标准语言sql"><a class="markdownIt-Anchor" href="#关系数据库标准语言sql"></a> 关系数据库标准语言（SQL）</h1><h2 id="sql-的特点"><a class="markdownIt-Anchor" href="#sql-的特点"></a> SQL 的特点</h2><h3 id="综合统一"><a class="markdownIt-Anchor" href="#综合统一"></a> 综合统一</h3><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;SQL&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;语言构成&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;DDL(数据库定义语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;DCL(数据控制语言)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;DML(数据操作（管理）语言)&quot;}]}]}"></svg></div><ul><li><p>是集数据定义语言（DDL），（DML），(DCL) 于一体的非过程语言</p></li><li><p>可以独立完成数据库生命周期的全部活动</p><ul><li>定义和修改、删除关系模式，定义和删除视图，插入数据，建立数据库<ul><li>模式 -&gt;CREATE SCHEMA schema_name AUTHORIZATION  username</li><li> 视图 -&gt;</li><li> 数据库：指的是插入数据</li></ul></li><li>对数据库的数据进行查询更新</li><li>数据库重构和维护</li><li>数据库安全性、完整性控制、以及事务控制</li><li><strong>嵌入式 SQL</strong> 和<strong>动态 SQL</strong></li></ul></li><li><p>用户数据库投入运行后，可根据需要随时逐步修改模式，不影响数据库的运行</p></li><li><p>数据操作符统一</p></li></ul><h3 id="高度非过程化"><a class="markdownIt-Anchor" href="#高度非过程化"></a> 高度非过程化</h3><ul><li>非关系数据模型的数据操纵语言面向过程，必须指定存取路径，而 <strong>SQL</strong> 只需要提出<strong>做什么</strong>。</li><li>SQL 的存取路径的选择以及 SQL 的操作过程，由系统自动完成</li></ul><h3 id="面向集合的操作方式"><a class="markdownIt-Anchor" href="#面向集合的操作方式"></a> 面向集合的操作方式</h3><ul><li><p>非关系数据模型采用面向记录的操作方式，操作对象是一条数据</p></li><li><p>SQL 操作对象、查找结果可以是元组的集合，他的一次插入、删除、更新操作的对象可以是元组的集合</p></li></ul><h3 id="以同一种语法结构提供多种使用方式"><a class="markdownIt-Anchor" href="#以同一种语法结构提供多种使用方式"></a> 以同一种语法结构提供多种使用方式</h3><ul><li>SQL 是 独立的语言，能够独立用于联机交互的使用方式</li><li> SQL 又是嵌入式语言，能嵌入到高级语言中，共程序员设计使用</li></ul><h3 id="sql-语言简洁易学易用"><a class="markdownIt-Anchor" href="#sql-语言简洁易学易用"></a> SQL 语言简洁，易学易用</h3><table><thead><tr><th>SQL 功能</th><th>动词</th></tr></thead><tbody><tr><td>数据查询</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong> SELECT</strong></span></td></tr><tr><td> 数据定义 (DDL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>CREATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DROP</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>ALTER</strong></span></td></tr><tr><td> 数据管理 (DML)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>INSERT</strong></span> <span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>UPDATE</strong></span><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>DELETE</strong></span></td></tr><tr><td> 数据控制 (DCL)</td><td><span p-1="" rounded-lg="" bg-green="" text-white="" ml-2=""><strong>GRANT</strong></span> <span rounded-lg="" bg-green="" text-white=""><strong>REVOKE</strong></span></td></tr></tbody></table><h3 id="sql-的基本概念"><a class="markdownIt-Anchor" href="#sql-的基本概念"></a> SQL 的基本概念</h3><p>基本表：</p><ul><li>本身独立存在的表</li><li> SQL 中一个关系就对应一个基本表</li><li>一个（或多个）基本表对应一个存储文件</li><li>一个表可以带若干索引</li></ul><p>存储文件</p><ul><li>逻辑结构构成了关系数据库的内模式</li><li>物理结构对用户是隐藏的</li></ul><p>视图</p><ul><li>从一个或几个基本表到处的表</li><li>数据库中只存放视图的定义而不存放视图对应的数据</li><li>视图是一个虚表</li><li>用户可以再视图上再定义视图</li></ul><h2 id="32-学生-课程-数据库"><a class="markdownIt-Anchor" href="#32-学生-课程-数据库"></a> 3.2 学生 - 课程 数据库</h2><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215121643500.png" alt="image-20230215121643500"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>S-T<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_dept'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_name'</span><span class="token punctuation">,</span>      <span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'unknown_pno'</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Ccredit<span class="token punctuation">`</span></span> <span class="token keyword">FLOAT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span>     <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span>  <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Sno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>Cno<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span> <span class="token keyword">TINYINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215123735800.png" alt="image-20230215123735800"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>Sname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Ssex<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sage<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sdept<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token string">'李勇'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'刘晨'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'CS'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'王敏'</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'MA'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token string">'张立'</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">'IS'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133708074.png" alt="image-20230215133708074"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215131918332.png" alt="image-20230215131918332"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>Course<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>Cname<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cpno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Credit<span class="token punctuation">`</span></span> <span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'数据库'</span><span class="token punctuation">,</span><span class="token string">'5'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">''</span> <span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'信息系统'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'操作系统'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据结构'</span><span class="token punctuation">,</span><span class="token string">'7'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'数据处理'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'PASCAL语言'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133652902.png" alt="image-20230215133652902"></p><hr><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133005148.png" alt="image-20230215133005148"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>SC<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Sno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Cno<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>Grade<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215133720872.png" alt="image-20230215133720872"></p><hr><h2 id="数据定义"><a class="markdownIt-Anchor" href="#数据定义"></a> 数据定义</h2><h3 id="sql-数据定义功能"><a class="markdownIt-Anchor" href="#sql-数据定义功能"></a> SQL 数据定义功能</h3><ul><li><p>视图和索引定义</p></li><li><p>模式</p></li><li><p>表定义</p><blockquote><p>tips:</p><p>模式与数据库、数据库中的表的关系：<br>1 个数据库下，可以有多个模式。</p><p>1 个模式下，可以有 0 个或多个表 。</p></blockquote></li></ul><table><thead><tr><th>操作对象</th><th>创建</th><th>删除</th><th>修改</th><th></th></tr></thead><tbody><tr><td>视图</td><td> CREATE VIEW</td><td>DROP VIEW</td><td></td><td></td></tr><tr><td> 索引</td><td> CREATE INDEX</td><td>DROP INDEX</td><td>ALTER INDEX</td><td></td></tr><tr><td> 模式</td><td> CREATE SCHEMA</td><td>DROP SCHEMA</td><td></td><td></td></tr><tr><td> 表</td><td> CREATE TABLE</td><td>DROP TABLE</td><td>ALTER TABLE</td><td></td></tr></tbody></table><h3 id="模式"><a class="markdownIt-Anchor" href="#模式"></a> 模式</h3><p>数据库（有的系统称为目录）-&gt; 模式 -&gt; 表以及视图、索引</p><p>现代关系数据库系统提供了一个层次化的对象命名机制</p><ul><li>一个关系数据库管理系统的实例中可以有多个数据库</li><li>一个数据库可以建立多个模式</li><li>一个模式下通常包括多个表、视图和索引等数据库对象</li></ul><p><img lazyload="" src="/images/loading.svg" data-src="/image-20230215140428334.png" alt="image-20230215140428334"></p><h4 id="模式的定义与删除"><a class="markdownIt-Anchor" href="#模式的定义与删除"></a> 模式的定义与删除</h4><h5 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h5><ul><li><p>定义模式实际上定义了一个命名空间。</p></li><li><p>在这个空间中可以定义该模式包含的数据库对象，例如基本表、视图、索引等。</p></li><li><p>在 CREATE SCHEMA 中可以接受 CREATE TABLE，CREATE VIEW 和 GRANT 子句。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token identifier"><span class="token punctuation">`</span>SCHEMA_A<span class="token punctuation">`</span></span> <span class="token keyword">AUTHORIZATION</span> <span class="token identifier"><span class="token punctuation">`</span>SYS_USER<span class="token punctuation">`</span></span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>TABLE_NAME<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>COLUMN_NAME<span class="token punctuation">`</span></span> <span class="token keyword">TYPE</span> <span class="token punctuation">[</span><span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>KEY_TYPE<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> DEFAULT_VALUE<span class="token punctuation">]</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    表名 表完整性约束<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h5 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">SCHEMA</span> <span class="token operator">&lt;</span>模式名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>删除模式有两种额外选项</p><ul><li><p>级联：删除模式的同时把该模式中所有的数据库对象全部删除</p></li><li><p>限制：如果该模式中定义了下属的数据库对象（如表，视图等），则拒绝该删除语句的执行</p><blockquote><p>也就是级联全部强制清空，格式化，限制就是确保为空的时候删除</p></blockquote></li></ul></li></ul><h4 id="基本表的定义-删除"><a class="markdownIt-Anchor" href="#基本表的定义-删除"></a> 基本表的定义、删除</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">[</span>列级完整性约束:e<span class="token punctuation">.</span>g:<span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">&lt;</span>表级完整性约束条件：e<span class="token punctuation">.</span>g: <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&lt;表名&gt;：索要定义的基本表的名字</p><p>&lt;列名&gt;：组成该表的各个属性</p><p>&lt;列级完整性约束条件&gt;：涉及相应属性列的完整性约束条件</p><ul><li><code>UNIQUE</code></li><li><code>PRIMARY KEY</code></li><li><code>NOT NULL</code></li><li><code>FOREIGN KEY</code></li><li><code>AUTO_INCREMENT</code></li><li><code>DEFAULT</code></li><li><code>CHECK</code></li></ul><p>&lt;表级完整性约束条件&gt;：涉及一个或多个属性列的完整性约束条件</p><ul><li>PRIMARY KEY (&lt; 列名&gt;,[&lt; 列名 &gt;] )</li><li> 如果完整性约束条件涉及到该表的多个属性列，则必须定义在表级，不然的话就可以定义在列级</li></ul><blockquote><p>也就是</p><p>PRIMARY KEY 和 PRIMARY KEY ( ) 的区别</p></blockquote><h5 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h5><ul><li><p>SQL 中的域的概念用<strong>数据类型</strong>来实现</p></li><li><p>定义表的属性时需要指明其数据类型以及长度</p></li><li><p>选用那种数据类型需要从取值范围和运算角度来思考</p><table><thead><tr><th>序号</th><th>数据类型</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td> 1</td><td><code>CHAR(n)</code>,<code>CHARACTER(n)</code></td><td>长度为 n 的定长字串</td><td></td></tr><tr><td> 2</td><td><code>VARCHAR(n)</code>,<code>CHARACTEVARYING(n)</code></td><td>最大长度为 n 的边长字串</td><td></td></tr><tr><td> 3</td><td><code>CLOB</code></td><td>字符串大对象</td><td></td></tr><tr><td> 4</td><td><code>BLOB</code></td><td>二进制大对象</td><td></td></tr><tr><td> 5</td><td><code>INT</code>，<code>INTEGER</code></td><td>长整数（4 字节）</td><td></td></tr><tr><td>6</td><td><code>BIGINT</code></td><td>大整数（8 字节）</td><td></td></tr><tr><td>7</td><td><code>SMALLINT</code></td><td>短整数（2 字节）</td><td></td></tr><tr><td>8</td><td><code>NUMERIC(p,d)</code></td><td>定点数，由 p 位数字（不包括符号位，小数点）组成，小输后面由 d 位</td><td></td></tr><tr><td> 9</td><td><code>DECIMAL(p,d),DEC(p,d)</code></td><td>同 NUMERIC</td><td></td></tr><tr><td>10</td><td><code>REAL</code></td><td>取决于机器精度的单精度浮点数</td><td></td></tr><tr><td> 11</td><td><code>DOUBLE PRECISION</code></td><td>取决于机器精度的双精度浮点数</td><td></td></tr><tr><td> 12</td><td><code>FLOAT(n)</code></td><td>可选精度的浮点数，精度至少为 n 位数字</td><td></td></tr><tr><td> 13</td><td><code>BOOLEAN</code></td><td>逻辑布尔量</td><td></td></tr><tr><td> 14</td><td><code>DATE</code></td><td>日期，YYYY-MM-DD</td><td></td></tr><tr><td>15</td><td><code>TIME</code></td><td>时间，HH:MM:SS</td><td></td></tr><tr><td>16</td><td><code>TIMESTAMP</code></td><td>时间戳类型</td><td></td></tr><tr><td> 17</td><td><code>INTERVAL</code></td><td>时间间隔类型</td><td></td></tr></tbody></table><blockquote><p>每一个基本表都属于某一个模式</p><p>一个模式包含多个基本表</p><p>定义基本表所属模式</p><ul><li><p>方法一 在表名中明显地给出模式名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Create</span> <span class="token keyword">table</span><span class="token string">"S-T"</span><span class="token punctuation">.</span>Student<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/*模式名为 S-T*/</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>Cource<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">Create</span> <span class="token keyword">table</span> <span class="token string">"S-T"</span><span class="token punctuation">.</span>SC<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方法二：在创建模式语句中同时创建表</p><p>方法三：设置所属的模式</p></li></ul></blockquote></li><li><p>创建基本表（其他数据库也一样）时候，没有指定模式，系统根据搜索路径来确定对象所属的模式</p><blockquote><p>在 use database_name; 的时候选择的模式</p></blockquote></li><li><p>关系数据库管理系统会使用模式列表中第一个存在的模式作为数据库对象的模式名</p></li><li><p>若搜索路径中的模式明都不存在，系统将会报错</p></li><li><p>数据库管理员用户可以设置搜索路径，然后定义基本表</p></li></ul><h5 id="修改表"><a class="markdownIt-Anchor" href="#修改表"></a> 修改表</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="删除表"><a class="markdownIt-Anchor" href="#删除表"></a> 删除表</h4><pre class="line-numbers language-Sql" data-language="Sql"><code class="language-Sql">DROP TABLE &lt;表名&gt; [RESTRICT | CASCADE];DROP TABLE `S-T`.sc CASCADE;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>RESTRICT</code>、<code>CASCADE</code> 效果同之前删除模式一样</p></blockquote><ul><li><p>基本表定义被删除，数据被删除</p></li><li><p>表上建立的索引、视图、触发器等一般也将被删除</p><p>若表上建有视图，选择 <code>RESTRICT </code>时表不能被删除；选择 <code>CASCADE</code> 时，视图也自动删除。</p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> VIEW_STUDENT <span class="token keyword">AS</span><span class="token keyword">SELECT</span> Sno<span class="token punctuation">,</span> Sname<span class="token punctuation">,</span>Sage <span class="token keyword">From</span> Student<span class="token keyword">WHERE</span> Sdept<span class="token operator">=</span><span class="token string">'ls'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h4 id="索引表的定义-删除"><a class="markdownIt-Anchor" href="#索引表的定义-删除"></a> 索引表的定义、删除</h4><ul><li><p>建立索引的目的：加快查询速度</p></li><li><p>关系数据库管理系统中常见索引</p><ul><li>顺序文件上的索引</li><li> B+ 索引 🌮 具有动态平衡的有点</li><li>散列索引：查找速度很快</li><li>位图索引</li></ul></li></ul><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;谁可以建立索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;数据库管理员，也就是建表的主人&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;谁维护索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;关系数据库管理系统自动完成&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;谁使用索引&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;关系管理系统自动选择合适的索引作为存取路径，用户不必也不能显示的选择索引&quot;}]}]}"></svg></div><h5 id="建立索引"><a class="markdownIt-Anchor" href="#建立索引"></a> 建立索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token operator">|</span>CLUSTER<span class="token punctuation">]</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>次序<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> Stusno <span class="token keyword">ON</span> Student<span class="token punctuation">(</span>Sno<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>个人理解，INDEX 的使用场景应该是在静态的表中，也就是内部数据的使用，比如我要放一个百科手册在里面，对这个手册我在之后并不会改他，或者说我在很久远之后，而且是作为管理员的我，来修改，这个时候建立索引性价比就比较高。</p><p>索引是属于表的，所以不存在修改索引到哪个表啥的。</p></blockquote><h5 id="修改索引"><a class="markdownIt-Anchor" href="#修改索引"></a> 修改索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>旧索引名<span class="token operator">&gt;</span> <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> <span class="token operator">&lt;</span>新索引<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">INDEX</span> Stusno  <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> Stuid<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="删除索引"><a class="markdownIt-Anchor" href="#删除索引"></a> 删除索引</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="阶段总结"><a class="markdownIt-Anchor" href="#阶段总结"></a> 阶段总结</h3><blockquote><p>阶段总结：以上都是 DML 相关的语句</p><p>对于表进行创建，删除</p><p>他主要有一下几个方面:</p><ul><li><p>模式</p><ul><li><pre class="highlight"><code class="sql"><span class="hljs-keyword">CREATE</span> SCHEMA <span class="hljs-operator">&lt;</span>模式名<span class="hljs-operator">&gt;</span> [<span class="hljs-keyword">AUTHORIZATION</span> <span class="hljs-operator">&lt;</span>USER_NAME<span class="hljs-operator">&gt;</span>]; <span class="hljs-operator">&lt;</span><span class="hljs-operator">!</span><span class="hljs-comment">--code￼14--&gt;</span></code></pre></li></ul></li><li><p>基本表</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>TABLE_NAME<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改</p></li></ul></li></ul></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">ADD</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新列名<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ADD</span> <span class="token operator">&lt;</span>表级完整性约束<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span><span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> <span class="token operator">&lt;</span>完整性约束名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">RESTRICT</span><span class="token operator">|</span><span class="token keyword">CASCADE</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>S_entrance<span class="token punctuation">`</span></span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token identifier"><span class="token punctuation">`</span>new_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">CONSTRAINT</span> PK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> FK_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token operator">|</span> UC_<span class="token punctuation">[</span>列名<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CASCADE</span><span class="token operator">|</span><span class="token keyword">RESTRICT</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>Student<span class="token punctuation">`</span></span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">`</span>old_column<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>视图</p><ul><li><p>创建</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> <span class="token operator">&lt;</span>视图名<span class="token operator">&gt;</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>索引</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>索引名<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> Stusno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;关系数据库</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="database-system" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/database-system/"/>
    
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="SQL" scheme="https://couriourc.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论 - 数据依赖的公理系统</title>
    <link href="https://couriourc.github.io/posts/C0JDXW.html"/>
    <id>https://couriourc.github.io/posts/C0JDXW.html</id>
    <published>2023-01-17T11:25:57.000Z</published>
    <updated>2023-01-17T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="armstrong-公理系统"><a class="markdownIt-Anchor" href="#armstrong-公理系统"></a> Armstrong 公理系统</h1><p>对于满足一组函数依赖 <code>F</code> 的关系模式 <code>R&lt;U,F&gt;</code>, 其任何一个关系 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>, 若函数依赖 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="7.173ex" height="1.57ex" role="img" focusable="false" viewBox="0 -683 3170.6 694"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2407.6,0)"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g></g></g></svg></mjx-container>都成立，则称 F 逻辑蕴涵。</p><p>设 <code>U</code> 为属性集总体，<code>F</code> 是 <code>U</code> 上的一组函数依赖，于是有关系模式 R&lt;U,F&gt;, 则对于 R&lt;U,F &gt; 来说，有以下推理规则：</p><ol><li><code>自反律</code>: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>⊆</mo><mi>X</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">Y\subseteq X \subseteq U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span> ，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>⊆</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\subseteq Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 为 <code>F</code> 所蕴含。</li><li><code>增广律</code>: 若 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="7.173ex" height="1.57ex" role="img" focusable="false" viewBox="0 -683 3170.6 694"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(1129.8,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2407.6,0)"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g></g></g></svg></mjx-container>为 <code>F</code> 所蕴涵，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">Z\subseteq U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span> ，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi>Z</mi><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">XZ\rightarrow YZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 为 <code>F</code> 所蕴涵。</li><li><code>传递律</code>: 若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 以及 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">Y\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 为 <code>F</code> 所蕴含，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 为 <code>F</code> 所蕴含。</li></ol><p>看着有点绕，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;armst</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="database-system" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/database-system/"/>
    
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论 - 规范化</title>
    <link href="https://couriourc.github.io/posts/X846MB.html"/>
    <id>https://couriourc.github.io/posts/X846MB.html</id>
    <published>2023-01-01T11:25:57.000Z</published>
    <updated>2023-01-01T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="规范化"><a class="markdownIt-Anchor" href="#规范化"></a> 规范化</h1><h2 id="函数依赖"><a class="markdownIt-Anchor" href="#函数依赖"></a> 函数依赖</h2><p><strong>定义</strong>:  设 <code>R(U) </code>是属性集 <code>U </code>上的关系模式， <code>X</code>，<code>Y </code>是 <code>U</code> 的子集。若对于 <code>R(U)</code> 的任意一个可能的关系 <code>r</code>, <code>r </code>中不可能存在两个元组 在 <code>X</code> 上的属性值相等，而在 <code>Y </code>上的属性值不等，则称 <code>X </code>函数确定 <code>Y </code>或 <code>Y </code>函数依赖于 <code>X</code> .</p><blockquote><p>举个例子:</p><p>R( [<code>学号</code> , <code>学生</code>])，U = [<code>学号</code> , <code>学生</code>]</p><p>对于一个关系 <code>学号-&gt;学生</code>中，所对应到的关系模式为 <code>1-1</code>(关系模式指的是 一对一，一对多，多对多 这种) ：</p><p>[A, 小明]</p><p>[B , 小润]</p><p>….</p><p>这几个元组之间一旦学号确定了，那么对应到的学生就确定了，也就是说 学生函数依赖于学号，学号函数确定学生。</p></blockquote><h3 id="非平凡函数依赖"><a class="markdownIt-Anchor" href="#非平凡函数依赖"></a> 非平凡函数依赖</h3><p>X-&gt;Y , 但是 X  并不包含 Y , 也就是 X 中的子集并不包含 Y</p><h3 id="平凡函数依赖"><a class="markdownIt-Anchor" href="#平凡函数依赖"></a> 平凡函数依赖</h3><p>不是非平凡依赖就是平凡依赖，也就是 X-&gt;Y ，但是 X 包含了 Y，对于任意关系模式，平凡函数依赖都是必然成立的，因为 X-&gt;X 是可以保证的</p><blockquote><p>平凡函数依赖的作用主要是讨论，同一类实体的不同操作顺序之类的情况</p></blockquote><h3 id="完全函数依赖"><a class="markdownIt-Anchor" href="#完全函数依赖"></a> 完全函数依赖</h3><p>在 <code>R(U) </code>中，如果 X-&gt;Y ，对于 X 的任意一个真子集 X`, 都有 X` 不函数确定 Y，而是 X 中除了 X` 的部分函数确定其他部分的数据</p><blockquote><p>完全函数依赖实际上就是有点类似于数学中的奇函数的图像，也就是 x 一一对应 y</p></blockquote><pre class="mermaid">graph TBx[X];y[Y]x---&gt;y</pre><h3 id="部分函数依赖"><a class="markdownIt-Anchor" href="#部分函数依赖"></a> 部分函数依赖</h3><p>在 <code>R(U)</code> 中，如果 X-&gt;Y，对于 X 的一个真子集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup></mrow><annotation encoding="application/x-tex">X^{'}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，就使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>−</mo><mo>&gt;</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X^{'}-&gt;Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0258099999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 成立。</p><blockquote><p>可以举一个特殊的例子，比如高数中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mo>−</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x) = f(-x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，只需要 x 的正半轴部分就能表示 y 的所有取值了。</p></blockquote><h3 id="传递函数依赖"><a class="markdownIt-Anchor" href="#传递函数依赖"></a> 传递函数依赖</h3><p>在 <code>R(U)</code> 中，如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>−</mo><mo>&gt;</mo><mi>Y</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>⊊</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X-&gt;Y(Y \subsetneq X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⊊</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo lspace="0em" rspace="0em">↛</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo>→</mo><mi>Z</mi><mo separator="true">,</mo><mi>Z</mi><mo>⊊</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y {\nrightarrow}X,Y\rightarrow Z,Z\subsetneq Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord"><span class="mrel amsrm">↛</span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⊊</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，则 称 <code>Z</code> 对 <code>X</code> 传递依赖</p><blockquote><p>这里如果加上条件<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.545ex;" xmlns="http://www.w3.org/2000/svg" width="6.671ex" height="2.09ex" role="img" focusable="false" viewBox="0 -683 2948.6 924"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44C" d="M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z"></path></g><g data-mml-node="mo" transform="translate(1040.8,0)"><path data-c="228A" d="M693 72Q693 68 692 66T686 59T680 52H524Q398 52 367 53T309 63Q236 82 180 132T98 250Q84 288 84 343Q84 397 98 437Q126 515 193 568T346 632Q347 632 373 633T440 634T520 635H680Q693 620 693 615Q693 608 680 595H526Q364 595 353 592Q279 582 221 539T138 430Q124 392 124 343Q124 296 138 257Q163 192 221 149T353 95Q364 92 526 92H680Q693 79 693 72ZM102 -132T102 -125T115 -103H382L420 -68Q429 -60 438 -52T452 -39T463 -28T472 -20T478 -14T483 -10T487 -7T490 -6T493 -5T496 -5Q502 -5 508 -12T515 -28Q515 -34 513 -37Q512 -38 507 -42T492 -55T475 -70L440 -101L562 -103H682Q693 -114 693 -122T680 -143H395L355 -179Q289 -241 280 -241Q273 -241 267 -235T260 -221T265 -208T300 -174L335 -143H224L113 -141L106 -137Q102 -132 102 -125Z"></path></g><g data-mml-node="mi" transform="translate(2096.6,0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g></svg></mjx-container> , 是因为如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mo separator="true">,</mo><mtext> 则</mtext><mi> X</mi><mo>←</mo><mo>→</mo><mi>Y</mi><mo separator="true">,</mo><mtext> 实际上就是</mtext><mi> X</mi><mo>=</mo><mo>=</mo><mi>Y</mi><mo separator="true">,</mo><mtext> 也就直接就是</mtext><mi> X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y, 则 X \leftarrow \rightarrow Y , 实际上就是 X == Y, 也就直接就是 X \rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback"> 则</span><span class="mord mathnormal" style="margin-right:0.07847em;"> X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback"> 实</span><span class="mord cjk_fallback">际</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.07847em;"> X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback"> 也</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">直</span><span class="mord cjk_fallback">接</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.07847em;"> X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>，其实可以联系一下高数中的求极限时对于 复合函数传递的要求，也是不能直接取值的原因。需要保证描述的完整性。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;规范化&quot;&gt;</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="database-system" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/database-system/"/>
    
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统概论</title>
    <link href="https://couriourc.github.io/posts/22VX46Q.html"/>
    <id>https://couriourc.github.io/posts/22VX46Q.html</id>
    <published>2023-01-01T11:25:57.000Z</published>
    <updated>2023-01-01T11:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="绪论"><a class="markdownIt-Anchor" href="#绪论"></a> 绪论</h1><p><strong>数据（Data）</strong>：描述事物的符号记录称为数据。数据与其语义是不可分的</p><p><strong>数据库（Data Base）</strong>：数据库是长期储存在计算机内的、有组织的、可共享的数据集合。数据库中的数据按一定的数据模型组织、描述和储存，具有较小的冗余度、较高的数据独立性和易扩展性，并可为各种用户共享。</p><p><strong>数据库系统（Data Base System）</strong>：在计算机系统中引入数据库后的系统构成。一般由数据库、数据库管理系统（及其开发工具）、应用系统、数据库管理员构成。</p><p><strong>数据库管理系统（DataBase Management System）</strong>：数据库管理系统是位于用户与操作系统之间的一层数据管理软件，用于科学地组织和存储数据、高效地获取和维护数据。DBMS 主要功能包括数据定义功能、数据操纵功能、数据库的运行管理功能、数据库的建立和维护功能。</p><p>数据库的数据具有【<strong>永久储存</strong>】、【<strong>有组织</strong>】、【<strong>可共享</strong>】三个基本特点。</p><hr><p>使用数据库系统的好处？</p><ul><li>使用数据库系统的好处是由数据库管理系统的特点或优点决定的</li><li>可以大大提高应用开发的效率</li><li>当数据的逻辑结构需要改变时，开发人员不必修改应用程序，或者只需要修改很少的应用程序</li><li>可以减轻 DBA 维护系统的负担</li><li>便于数据的集中管理、控制数据冗余、提高数据的利用率和一致性，又有利于应用程序的开发和维护</li></ul><hr><p><strong>文件系统与数据库系统的区别和联系</strong></p><ul><li><p>区别</p><ol><li><p>文件系统面向某一应用程序、共享性差、冗余度大、数据独立性差、记录内有结构、整体无结构、由应用程序自己控制</p></li><li><p>数据库系统面向现实世界、共享度高、冗余度小、具有较高物理独立性和一定的逻辑独立性、整体结构化、用数据模型描述、由数据库管理系统提供数据的安全性、完整性、并发控制和恢复能力</p></li></ol></li><li><p>联系</p><ol><li><p>都是计算机系统中管理数据的软件</p></li><li><p>文件系统是操作系统的重要组成部分，而 <code>DBMS</code> 是独立于操作系统的软件。但是 <code>DBMS</code> 是在操作系统的基础上实现的，数据库中的数据的组织和存储是通过操作系统中的文件系统来实现的</p></li></ol></li></ul><hr><p><strong>适用于文件系统或数据库系统的例子</strong></p><ul><li>适用于文件系统：数据的备份、软件或应用程序使用过程中的临时数据存储；早期功能比较简单、比较固定的应用系统（照片、短信、微信）</li><li>适用于数据库系统：企业或部门的信息系统（人事管理系统、学生管理系统）</li></ul><hr><p><strong>数据库系统特点</strong></p><ul><li>数据结构化（数据库系统与文件系统的本质区别）</li><li>数据共享性高，冗余度低，易扩充</li><li>数据独立性高</li><li>数据独立性包括数据的【<strong>物理独立性</strong>】和数据的【逻辑独立性】</li><li>【<strong>物理独立性</strong>】：用户的应用程序与数据库中数据的物理存储是相互独立的</li><li>【<strong>逻辑独立性</strong>】：用户的应用程序与数据库的逻辑结构是相互独立的</li><li>数据库管理系统的模式结构和二级映像功能保证了数据库中的数据具有很高的物理独立性和逻辑独立性。</li></ul><hr><p><strong>数据由 DBMS 统一管理和控制。提供统一的数据控制功能</strong></p><ul><li>数据的安全性保护：保护数据以防止不合法的使用造成的数据的泄密和破坏</li><li>数据的完整性检查：将数据控制在有效的范围内或保证数据之间满足一定的关系</li><li>并发控制：对多用户的并发操作加以控制和协调，保证并发操作的正确性</li><li>数据库恢复：当计算机系统发生硬件故障、软件故障，或者由于操作员的失误以及故意的破坏影响数据库中数据的正确性，甚至造成数据库部分或全部数据的丢失时，能将数据库从错误状态恢复到某一已知的正确状态（亦称为完整状态或一致状态）</li></ul><hr><p><strong>DBMS</strong> 的主要功能</p><ul><li><p>数据库定义功能</p></li><li><p>数据组织、存储和管理功能</p></li><li><p>数据操纵功能</p></li><li><p>数据库的事务管理和运行管理</p></li><li><p>数据库的建立和维护功能</p></li><li><p>其他功能，如不同数据库之间的互访和互操作功能等</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;绪论&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="语言基础" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="database-system" scheme="https://couriourc.github.io/categories/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/database-system/"/>
    
    
    <category term="数据库系统概论" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
    
    <category term="计算机基础" scheme="https://couriourc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>数据结构总结 - 递归杂想</title>
    <link href="https://couriourc.github.io/posts/2A4N28W.html"/>
    <id>https://couriourc.github.io/posts/2A4N28W.html</id>
    <published>2022-11-01T11:47:08.000Z</published>
    <updated>2022-11-01T11:47:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="数学方法思考递归和动规"><a class="markdownIt-Anchor" href="#数学方法思考递归和动规"></a> 数学方法思考递归和动规</h1><p>递归方法目前【2022/11/1】的一个分类思考：</p><h2 id="抽象递归"><a class="markdownIt-Anchor" href="#抽象递归"></a> 抽象递归</h2><p>主要利用递归栈的功能，来做遍历，输出。</p><ul><li><p>实现 DFS（先序遍历） 遍历节点</p></li><li><p>实现 汉诺塔</p></li></ul><p>抽象递归十分重要的一点是要赋予每一个符号具体意义，如果只是利用遍历效果，可以理解为，从上到下输出的时候是顺序的，这个递归下面的是栈弹出的，然后划分左右的话，就可以理解为递归子问题的划分，<br>Recur(…)<br>…<br>Recur(…)</p><blockquote><p>这种特点是不对值进行更改，只是通过传参进行变动，获得需要的输出效果，同时也不需要接收参数，适合多路效果，或者只是做统计，对于做统计可以利用下面的值递归的思想来做到统计</p></blockquote><h2 id="值递归"><a class="markdownIt-Anchor" href="#值递归"></a> 值递归</h2><p>主要利用递归自带的 F (n) = F (n-1) 的迭代式效果</p><ul><li><p>求 高斯 ：F (n) = 1 + F ( n -1 )</p></li><li><p>求 斐波 ：F (n) = F (n-1) + F (n-2)</p></li><li><p>求 阶乘 ：F (n) = n*F (n-1)</p></li></ul><blockquote><p>其他相关的求具体值得公式，这种解决方法很简单，直接按照公式写就行了。</p></blockquote><h2 id="抽象与值的结合类型"><a class="markdownIt-Anchor" href="#抽象与值的结合类型"></a> 抽象与值的结合类型</h2><p>这一部分就有数论的感觉了。</p><ul><li>反转链表<ul><li>RES{ cur cur.next null } = RES { cur.next cur null }</li></ul></li><li> 归并排序<ul><li>RES{ l r } =merge( RES{l} , RES{r})</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;数学方法思</summary>
      
    
    
    
    <category term="杂想" scheme="https://couriourc.github.io/categories/%E6%9D%82%E6%83%B3/"/>
    
    <category term="数据结构" scheme="https://couriourc.github.io/categories/%E6%9D%82%E6%83%B3/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="基础知识" scheme="https://couriourc.github.io/categories/%E6%9D%82%E6%83%B3/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="data-structure" scheme="https://couriourc.github.io/categories/%E6%9D%82%E6%83%B3/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/data-structure/"/>
    
    
    <category term="基础知识" scheme="https://couriourc.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="数据结构" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="杂想" scheme="https://couriourc.github.io/tags/%E6%9D%82%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>数据结构知识点总结 - 哈希表 (散列表)</title>
    <link href="https://couriourc.github.io/posts/3A290SD.html"/>
    <id>https://couriourc.github.io/posts/3A290SD.html</id>
    <published>2022-10-28T06:04:58.000Z</published>
    <updated>2022-10-28T06:04:58.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="哈希表"><a class="markdownIt-Anchor" href="#哈希表"></a> 哈希表</h1><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;散列表处理冲突的方法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;开放选址法（<span class=\&quot;katex\&quot;><span class=\&quot;katex-mathml\&quot;><math xmlns=\&quot;http://www.w3.org/1998/Math/MathML\&quot;><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub><mo>=</mo><mo stretchy=\&quot;false\&quot;>(</mo><mi>H</mi><mo stretchy=\&quot;false\&quot;>(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy=\&quot;false\&quot;>)</mo><mo>+</mo><msub><mi>d</mi><mi>i</mi></msub><mo stretchy=\&quot;false\&quot;>)</mo><mspace></mspace><mspace width=\&quot;0.6666666666666666em\&quot;/><mrow><mi mathvariant=\&quot;normal\&quot;>m</mi><mi mathvariant=\&quot;normal\&quot;>o</mi><mi mathvariant=\&quot;normal\&quot;>d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>m</mi></mrow><annotation encoding=\&quot;application/x-tex\&quot;>H_i = (H(key) + d_i) \\mod m</annotation></semantics></math></span><span class=\&quot;katex-html\&quot; aria-hidden=\&quot;true\&quot;><span class=\&quot;base\&quot;><span class=\&quot;strut\&quot; style=\&quot;height:0.83333em;vertical-align:-0.15em;\&quot;></span><span class=\&quot;mord\&quot;><span class=\&quot;mord mathnormal\&quot; style=\&quot;margin-right:0.08125em;\&quot;>H</span><span class=\&quot;msupsub\&quot;><span class=\&quot;vlist-t vlist-t2\&quot;><span class=\&quot;vlist-r\&quot;><span class=\&quot;vlist\&quot; style=\&quot;height:0.31166399999999994em;\&quot;><span style=\&quot;top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\&quot;><span class=\&quot;pstrut\&quot; style=\&quot;height:2.7em;\&quot;></span><span class=\&quot;sizing reset-size6 size3 mtight\&quot;><span class=\&quot;mord mathnormal mtight\&quot;>i</span></span></span></span><span class=\&quot;vlist-s\&quot;>​</span></span><span class=\&quot;vlist-r\&quot;><span class=\&quot;vlist\&quot; style=\&quot;height:0.15em;\&quot;><span></span></span></span></span></span></span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.2777777777777778em;\&quot;></span><span class=\&quot;mrel\&quot;>=</span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.2777777777777778em;\&quot;></span></span><span class=\&quot;base\&quot;><span class=\&quot;strut\&quot; style=\&quot;height:1em;vertical-align:-0.25em;\&quot;></span><span class=\&quot;mopen\&quot;>(</span><span class=\&quot;mord mathnormal\&quot; style=\&quot;margin-right:0.08125em;\&quot;>H</span><span class=\&quot;mopen\&quot;>(</span><span class=\&quot;mord mathnormal\&quot; style=\&quot;margin-right:0.03148em;\&quot;>k</span><span class=\&quot;mord mathnormal\&quot;>e</span><span class=\&quot;mord mathnormal\&quot; style=\&quot;margin-right:0.03588em;\&quot;>y</span><span class=\&quot;mclose\&quot;>)</span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.2222222222222222em;\&quot;></span><span class=\&quot;mbin\&quot;>+</span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.2222222222222222em;\&quot;></span></span><span class=\&quot;base\&quot;><span class=\&quot;strut\&quot; style=\&quot;height:1em;vertical-align:-0.25em;\&quot;></span><span class=\&quot;mord\&quot;><span class=\&quot;mord mathnormal\&quot;>d</span><span class=\&quot;msupsub\&quot;><span class=\&quot;vlist-t vlist-t2\&quot;><span class=\&quot;vlist-r\&quot;><span class=\&quot;vlist\&quot; style=\&quot;height:0.31166399999999994em;\&quot;><span style=\&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\&quot;><span class=\&quot;pstrut\&quot; style=\&quot;height:2.7em;\&quot;></span><span class=\&quot;sizing reset-size6 size3 mtight\&quot;><span class=\&quot;mord mathnormal mtight\&quot;>i</span></span></span></span><span class=\&quot;vlist-s\&quot;>​</span></span><span class=\&quot;vlist-r\&quot;><span class=\&quot;vlist\&quot; style=\&quot;height:0.15em;\&quot;><span></span></span></span></span></span></span><span class=\&quot;mclose\&quot;>)</span><span class=\&quot;mspace allowbreak\&quot;></span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.6666666666666666em;\&quot;></span></span><span class=\&quot;base\&quot;><span class=\&quot;strut\&quot; style=\&quot;height:0.69444em;vertical-align:0em;\&quot;></span><span class=\&quot;mord\&quot;><span class=\&quot;mord\&quot;><span class=\&quot;mord mathrm\&quot;>m</span><span class=\&quot;mord mathrm\&quot;>o</span><span class=\&quot;mord mathrm\&quot;>d</span></span></span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.16666666666666666em;\&quot;></span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.16666666666666666em;\&quot;></span><span class=\&quot;mord mathnormal\&quot;>m</span></span></span></span>&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;<strong>线性探测法</strong> （<span class=\&quot;katex\&quot;><span class=\&quot;katex-mathml\&quot;><math xmlns=\&quot;http://www.w3.org/1998/Math/MathML\&quot;><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding=\&quot;application/x-tex\&quot;>d_i</annotation></semantics></math></span><span class=\&quot;katex-html\&quot; aria-hidden=\&quot;true\&quot;><span class=\&quot;base\&quot;><span class=\&quot;strut\&quot; style=\&quot;height:0.84444em;vertical-align:-0.15em;\&quot;></span><span class=\&quot;mord\&quot;><span class=\&quot;mord mathnormal\&quot;>d</span><span class=\&quot;msupsub\&quot;><span class=\&quot;vlist-t vlist-t2\&quot;><span class=\&quot;vlist-r\&quot;><span class=\&quot;vlist\&quot; style=\&quot;height:0.31166399999999994em;\&quot;><span style=\&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\&quot;><span class=\&quot;pstrut\&quot; style=\&quot;height:2.7em;\&quot;></span><span class=\&quot;sizing reset-size6 size3 mtight\&quot;><span class=\&quot;mord mathnormal mtight\&quot;>i</span></span></span></span><span class=\&quot;vlist-s\&quot;>​</span></span><span class=\&quot;vlist-r\&quot;><span class=\&quot;vlist\&quot; style=\&quot;height:0.15em;\&quot;><span></span></span></span></span></span></span></span></span></span> 是线性的）&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;除留余数法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;<span class=\&quot;katex\&quot;><span class=\&quot;katex-mathml\&quot;><math xmlns=\&quot;http://www.w3.org/1998/Math/MathML\&quot;><semantics><mrow><mi>H</mi><mo stretchy=\&quot;false\&quot;>(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy=\&quot;false\&quot;>)</mo><mspace></mspace><mspace width=\&quot;0.6666666666666666em\&quot;/><mrow><mi mathvariant=\&quot;normal\&quot;>m</mi><mi mathvariant=\&quot;normal\&quot;>o</mi><mi mathvariant=\&quot;normal\&quot;>d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi></mrow><annotation encoding=\&quot;application/x-tex\&quot;>H(key) \\mod p</annotation></semantics></math></span><span class=\&quot;katex-html\&quot; aria-hidden=\&quot;true\&quot;><span class=\&quot;base\&quot;><span class=\&quot;strut\&quot; style=\&quot;height:1em;vertical-align:-0.25em;\&quot;></span><span class=\&quot;mord mathnormal\&quot; style=\&quot;margin-right:0.08125em;\&quot;>H</span><span class=\&quot;mopen\&quot;>(</span><span class=\&quot;mord mathnormal\&quot; style=\&quot;margin-right:0.03148em;\&quot;>k</span><span class=\&quot;mord mathnormal\&quot;>e</span><span class=\&quot;mord mathnormal\&quot; style=\&quot;margin-right:0.03588em;\&quot;>y</span><span class=\&quot;mclose\&quot;>)</span><span class=\&quot;mspace allowbreak\&quot;></span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.6666666666666666em;\&quot;></span></span><span class=\&quot;base\&quot;><span class=\&quot;strut\&quot; style=\&quot;height:0.8888799999999999em;vertical-align:-0.19444em;\&quot;></span><span class=\&quot;mord\&quot;><span class=\&quot;mord\&quot;><span class=\&quot;mord mathrm\&quot;>m</span><span class=\&quot;mord mathrm\&quot;>o</span><span class=\&quot;mord mathrm\&quot;>d</span></span></span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.16666666666666666em;\&quot;></span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.16666666666666666em;\&quot;></span><span class=\&quot;mord mathnormal\&quot;>p</span></span></span></span> 不大于m 最接近 m的质数&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[11,13]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;paragraph&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;发生冲突的时候是 1 2 3 的尝试比较，冲突的时候是模表长&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;<strong>平方探测法/二次探测法</strong>（<span class=\&quot;katex\&quot;><span class=\&quot;katex-mathml\&quot;><math xmlns=\&quot;http://www.w3.org/1998/Math/MathML\&quot;><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding=\&quot;application/x-tex\&quot;>d_i</annotation></semantics></math></span><span class=\&quot;katex-html\&quot; aria-hidden=\&quot;true\&quot;><span class=\&quot;base\&quot;><span class=\&quot;strut\&quot; style=\&quot;height:0.84444em;vertical-align:-0.15em;\&quot;></span><span class=\&quot;mord\&quot;><span class=\&quot;mord mathnormal\&quot;>d</span><span class=\&quot;msupsub\&quot;><span class=\&quot;vlist-t vlist-t2\&quot;><span class=\&quot;vlist-r\&quot;><span class=\&quot;vlist\&quot; style=\&quot;height:0.31166399999999994em;\&quot;><span style=\&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\&quot;><span class=\&quot;pstrut\&quot; style=\&quot;height:2.7em;\&quot;></span><span class=\&quot;sizing reset-size6 size3 mtight\&quot;><span class=\&quot;mord mathnormal mtight\&quot;>i</span></span></span></span><span class=\&quot;vlist-s\&quot;>​</span></span><span class=\&quot;vlist-r\&quot;><span class=\&quot;vlist\&quot; style=\&quot;height:0.15em;\&quot;><span></span></span></span></span></span></span></span></span></span> 是平方的）&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;paragraph&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;发生冲突的时候是 <span class=\&quot;katex\&quot;><span class=\&quot;katex-mathml\&quot;><math xmlns=\&quot;http://www.w3.org/1998/Math/MathML\&quot;><semantics><mrow><mn>1</mn><mo separator=\&quot;true\&quot;>,</mo><msup><mn>2</mn><mn>2</mn></msup><mo separator=\&quot;true\&quot;>,</mo><msup><mn>3</mn><mn>2</mn></msup></mrow><annotation encoding=\&quot;application/x-tex\&quot;>1, 2^{2},3^{2}</annotation></semantics></math></span><span class=\&quot;katex-html\&quot; aria-hidden=\&quot;true\&quot;><span class=\&quot;base\&quot;><span class=\&quot;strut\&quot; style=\&quot;height:1.008548em;vertical-align:-0.19444em;\&quot;></span><span class=\&quot;mord\&quot;>1</span><span class=\&quot;mpunct\&quot;>,</span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.16666666666666666em;\&quot;></span><span class=\&quot;mord\&quot;><span class=\&quot;mord\&quot;>2</span><span class=\&quot;msupsub\&quot;><span class=\&quot;vlist-t\&quot;><span class=\&quot;vlist-r\&quot;><span class=\&quot;vlist\&quot; style=\&quot;height:0.8141079999999999em;\&quot;><span style=\&quot;top:-3.063em;margin-right:0.05em;\&quot;><span class=\&quot;pstrut\&quot; style=\&quot;height:2.7em;\&quot;></span><span class=\&quot;sizing reset-size6 size3 mtight\&quot;><span class=\&quot;mord mtight\&quot;><span class=\&quot;mord mtight\&quot;>2</span></span></span></span></span></span></span></span></span><span class=\&quot;mpunct\&quot;>,</span><span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.16666666666666666em;\&quot;></span><span class=\&quot;mord\&quot;><span class=\&quot;mord\&quot;>3</span><span class=\&quot;msupsub\&quot;><span class=\&quot;vlist-t\&quot;><span class=\&quot;vlist-r\&quot;><span class=\&quot;vlist\&quot; style=\&quot;height:0.8141079999999999em;\&quot;><span style=\&quot;top:-3.063em;margin-right:0.05em;\&quot;><span class=\&quot;pstrut\&quot; style=\&quot;height:2.7em;\&quot;></span><span class=\&quot;sizing reset-size6 size3 mtight\&quot;><span class=\&quot;mord mtight\&quot;><span class=\&quot;mord mtight\&quot;>2</span></span></span></span></span></span></span></span></span></span></span></span>的尝试比较，冲突的时候是模表长&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;伪随机序列法&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;再散列法&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;拉链法&quot;}]}"></svg></div><h2 id="基本定义"><a class="markdownIt-Anchor" href="#基本定义"></a> 基本定义</h2><p>散列表，又叫<a class="link" href="http://data.biancheng.net/view/63.html">哈希表<i class="fas fa-external-link-alt"></i></a>（Hash Table），是能够通过给定的关键字的值直接访问到具体对应的值的一个数据结构。也就是说，把关键字映射到一个表中的位置来直接访问记录，以加快访问速度。</p><p>通常，我们把这个关键字称为 Key，把对应的记录称为 Value，所以也可以说是通过 Key 访问一个映射表来得到 Value 的地址。而这个映射表，也叫作散列函数或者哈希函数，存放记录的<a class="link" href="http://data.biancheng.net/view/309.html">数组<i class="fas fa-external-link-alt"></i></a>叫作散列表。</p><p>其中有个特殊情况，就是通过不同的 Key，可能访问到同一个地址，这种现象叫作碰撞（Collision）。而通过某个 Key 一定会得到唯一的 Value 地址。</p><h2 id="hash-函数选取方法"><a class="markdownIt-Anchor" href="#hash-函数选取方法"></a> Hash 函数选取方法</h2><ul><li><strong>直接寻址法</strong>：取关键字或关键字的某个线性函数值为散列地址。</li><li><strong>数字分析法</strong>：通过对数据的分析，发现数据中冲突较少的部分，并构造散列地址。例如同学们的学号，通常同一届学生的学号，其中前面的部分差别不太大，所以用后面的部分来构造散列地址。</li><li><strong>平方取中法</strong>：当无法确定关键字里哪几位的分布相对比较均匀时，可以先求出关键字的平方值，然后按需要取平方值的中间几位作为散列地址。这是因为：计算平方之后的中间几位和关键字中的每一位都相关，所以不同的关键字会以较高的概率产生不同的散列地址。</li><li><strong>取随机数法</strong>：使用一个随机函数，取关键字的随机值作为散列地址，这种方式通常用于关键字长度不同的场合。</li><li><strong>除留取余法</strong>：取关键字被某个不大于散列表的表长 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 的数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 除后所得的余数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 为散列地址。这种方式也可以在用过其他方法后再使用。该函数对 m 的选择很重要，一般取素数或者直接用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>。</li></ul><h2 id="对散列表函数产生冲突的解决办法"><a class="markdownIt-Anchor" href="#对散列表函数产生冲突的解决办法"></a> 对散列表函数产生冲突的解决办法</h2><h3 id="开放地址法也叫开放寻址法"><a class="markdownIt-Anchor" href="#开放地址法也叫开放寻址法"></a> 开放地址法（也叫开放寻址法）</h3><p>实际上就是当需要存储值时，对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi> K</mi><mi>e</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Key</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 哈希之后，发现这个地址已经有值了，这时该怎么办？不能放在这个地址，不然之前的映射会被覆盖。这时对计算出来的地址进行一个探测再哈希，比如往后移动一个地址，如果没人占用，就用这个地址。如果超过最大长度，则可以对总长度取余。这里移动的地址是产生冲突时的增列序量。</p><h3 id="再哈希法"><a class="markdownIt-Anchor" href="#再哈希法"></a> 再哈希法</h3><p>在产生冲突之后，使用关键字的其他部分继续计算地址，如果还是有冲突，则继续使用其他部分再计算地址。这种方式的缺点是时间增加了。</p><h3 id="链地址法"><a class="markdownIt-Anchor" href="#链地址法"></a> 链地址法</h3><p>链地址法其实就是对 Key 通过哈希之后落在同一个地址上的值，做一个<a class="link" href="http://data.biancheng.net/view/298.html">链表<i class="fas fa-external-link-alt"></i></a>。其实在很多高级语言的实现当中，也是使用这种方式处理冲突的，我们会在后面着重学习这种方式。</p><h3 id="建立一个公共溢出区"><a class="markdownIt-Anchor" href="#建立一个公共溢出区"></a> 建立一个公共溢出区</h3><p>这种方式是建立一个公共溢出区，当地址存在冲突时，把新的地址放在公共溢出区里。</p><h2 id="散列表的特点"><a class="markdownIt-Anchor" href="#散列表的特点"></a> 散列表的特点</h2><h3 id="访问速度很快"><a class="markdownIt-Anchor" href="#访问速度很快"></a> 访问速度很快</h3><p>由于散列表有散列函数，可以将指定的 Key 都映射到一个地址上，所以在访问一个 Key（键）对应的 Value（值）时，根本不需要一个一个地进行查找，可以直接跳到那个地址。所以我们在对散列表进行添加、删除、修改、查找等任何操作时，速度都很快。</p><h3 id="需要额外的空间"><a class="markdownIt-Anchor" href="#需要额外的空间"></a> 需要额外的空间</h3><p>首先，散列表实际上是存不满的，如果一个散列表刚好能够存满，那么肯定是个巧合。而且当散列表中元素的使用率越来越高时，性能会下降，所以一般会选择扩容来解决这个问题。另外，如果有冲突的话，则也是需要额外的空间去存储的，比如链地址法，不但需要额外的空间，甚至需要使用其他数据结构。</p><p>这个特点有个很常用的词可以表达，叫作 “空间换时间”，在大多数时候，对于算法的实现，为了能够有更好的性能，往往会考虑牺牲些空间，让算法能够更快些。</p><h3 id="无序"><a class="markdownIt-Anchor" href="#无序"></a> 无序</h3><p>散列表还有一个非常明显的特点，那就是无序。为了能够更快地访问元素，散列表是根据散列函数直接找到存储地址的，这样我们的访问速度就能够更快，但是对于有序访问却没有办法应对。</p><h3 id="可能会产生碰撞"><a class="markdownIt-Anchor" href="#可能会产生碰撞"></a> 可能会产生碰撞</h3><p>没有完美的散列函数，无论如何总会产生冲突，这时就需要采用冲突解决方案，这也使散列表更加复杂。通常在不同的高级语言的实现中，对于冲突的解决方案不一定一样。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;哈希表&quot;&gt;</summary>
      
    
    
    
    <category term="数据结构" scheme="https://couriourc.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="基础知识" scheme="https://couriourc.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="data-structure" scheme="https://couriourc.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/data-structure/"/>
    
    
    <category term="基础知识" scheme="https://couriourc.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="数据结构" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="哈希表" scheme="https://couriourc.github.io/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>数据结构总结 - 概念题</title>
    <link href="https://couriourc.github.io/posts/8P8M4F.html"/>
    <id>https://couriourc.github.io/posts/8P8M4F.html</id>
    <published>2022-10-24T07:08:39.000Z</published>
    <updated>2022-11-06T07:08:39.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h2 id="绪论"><a class="markdownIt-Anchor" href="#绪论"></a> 绪论</h2><p>** 数据：** 数据是信息的载体，信息是数据的内涵。</p><p>** 数据元素：** 数据的基本单位。</p><p>** 数据项：** 构成数据元素不可分割的最小单位。</p><p>** 数据对象：** 性质相同的数据元素的集合，是数据的子集。</p><p>** 数据类型：** 一个值的集合以及定义在此集合上一组操作的总称。原子类型、结构类型、抽象数据类型 ADT。</p><p>** 抽象数据类型 ADT：** 只关系逻辑结构，无需关系具体实现、存储结构。由数据对象、数据关系、基本操作组成。</p><p>** 数据结构：** 相互之间存在一种或多种特定关系的数据元素的集合。数据结构 = 数据元素 + 数据关系。</p><p>** 数据结构三要素：** 逻辑结构、物理结构、数据运算。</p><p>** 逻辑结构：** 数据元素之间的逻辑关系。线性结构、非线性结构。</p><p><strong>线性结构</strong>：线性表 1:1、栈、队列、串、数组、广义表。</p><p><strong>非线性结构</strong>：集合，除同属一个集合别无其他关系；树，1:n; 图，m:n。</p><p>** 存储结构：** 数据结构在计算机上的表示，顺序存储、链式存储、索引存储、散列存储。</p><p>** 数据运算：** 运算的定义依赖于逻辑结构，运算的实现依赖于物理结构。</p><p>** 算法：** 特定问题求解步骤的描述。</p><p>** 算法五特性：** 确定性、可行性、有穷性、输入、输出。</p><p>** 优质算法特性：** 正确性、健壮性、可读性、高效率、低存储（时空复杂度低）。</p><p>** 算法分析：** 时间复杂度、空间复杂度、稳定性。</p><p>**S (n)=O (1)😗* 算法原地工作指算法所需要的辅助空间为常量。</p><p>** 程序 = 数据结构 + 算法：** 数据结构是要处理的信息，算法是处理信息的步骤。</p><hr><h2 id="线性表"><a class="markdownIt-Anchor" href="#线性表"></a> 线性表</h2><p>** 顺序表：** 线性表的顺序存储，逻辑顺序和物理顺序相同。随机访问，存储密度高，插入删除需要移动大量元素。静态顺序表、动态顺序表。<br>静态线性表：数组、大小固定、少则内存溢出、多则资源浪费。<br>动态线性表：动态分配存储空间。</p><p>** 链表：** 线性表的链式表示，不要求存储地址联系，失去了随机访问的特性。适合插入删除。单链表、双链表、循环链表、静态链表。</p><p>** 单链表：** 链表结点存放后继指针。访问后继结点时间复杂度为 O (1), 前驱为 O (n)。</p><p>** 双链表：** 链表结点存放前驱和后继指针，这样就克服了单链表不能从后往前遍历的缺陷。prior、next</p><p>** 循环链表：** 循环单链表、循环双链表。循环单链表需要将尾结点指针指向头结点，这样就可以形成环。循环双链表还需要将头结点的 prior 指针指向尾结点。</p><p>** 静态链表：** 借助数组实现的链表。</p><p>** 线性表基本操作：** 创销、CRUD、判空、判表长、输出。</p><p>** 线性结构和非线性结构区别：** 线性结构除第一个和最后一个节点外，其余结点有唯一前驱和后继，第一个节点无前驱，最后一个结点无后继，结点之间是一对一关系。非线性结构结点前驱后继不具有唯一性，结点之间关系为一对多或者多对多。</p><p><strong>顺序存储结构特点:</strong> 存储密度大，空间利用率高；随机访问，随机存取；不适合插入删除操作，因为需要移动大量元素；预分配存储空间难以确定。</p><p><strong>顺序存储结构与链式存储结构比较</strong></p><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">顺序存储结构</th><th style="text-align:left">链式存储结构</th></tr></thead><tbody><tr><td style="text-align:left">优点</td><td style="text-align:left">存储密度高、随机访问、随机存取</td><td style="text-align:left">插入删除方便、动态分配存储空间、空间利用率高</td></tr><tr><td style="text-align:left">缺点</td><td style="text-align:left">不适合插入删除，因为需要移动大量元素；预分配存储空间难以确定</td><td style="text-align:left">存储密度小、访问需要从头遍历链表</td></tr></tbody></table><p><strong>顺序表和链表的比较</strong></p><table><thead><tr><th style="text-align:left">区别</th><th style="text-align:left">顺序表</th><th style="text-align:left">链表</th></tr></thead><tbody><tr><td style="text-align:left">存储结构</td><td style="text-align:left">顺序存储</td><td style="text-align:left">链式存储</td></tr><tr><td style="text-align:left">存取 / 访问速率</td><td style="text-align:left">随机存取，随机访问，方便 O (1)</td><td style="text-align:left"> 不方便，需要遍历 O (n)</td></tr><tr><td style="text-align:left"> 存储密度</td><td style="text-align:left">高</td><td style="text-align:left">低</td></tr><tr><td style="text-align:left">插入删除</td><td style="text-align:left">不方便，需要移动大量元素</td><td style="text-align:left">方便，修改指针</td></tr></tbody></table><p><strong>数组和链表的比较</strong></p><table><thead><tr><th style="text-align:left">区别</th><th style="text-align:left">数组</th><th style="text-align:left">链表</th></tr></thead><tbody><tr><td style="text-align:left">分配空间</td><td style="text-align:left">静态分配 / 栈分配</td><td style="text-align:left">动态分配 / 堆分配</td></tr><tr><td style="text-align:left">访问速率</td><td style="text-align:left">根据数组下标直接访问</td><td style="text-align:left">从头遍历</td></tr><tr><td style="text-align:left">插入删除</td><td style="text-align:left">不方便，需要移动大量元素</td><td style="text-align:left">方便，只需修改指针</td></tr></tbody></table><p><strong>头指针和头结点区分</strong></p><table><thead><tr><th style="text-align:left">区分</th><th style="text-align:left">头指针</th><th style="text-align:left">头结点</th></tr></thead><tbody><tr><td style="text-align:left">概念</td><td style="text-align:left">指向链表第一个结点的指针</td><td style="text-align:left">带头结点链表的第一个结点，是链表在表头附加的结点</td></tr><tr><td style="text-align:left">是否必须</td><td style="text-align:left">是</td><td style="text-align:left">否，只是为了统一操作</td></tr><tr><td style="text-align:left">引入头结点作用</td><td style="text-align:left">头指针就是链表名字、标记链表</td><td style="text-align:left">空表非空表头结点都指向头结点 / 统一了第一个数据结点和其余结点的操作</td></tr></tbody></table><p><strong>单链表双链表的区别</strong></p><table><thead><tr><th style="text-align:left">单链表</th><th style="text-align:left">双链表</th></tr></thead><tbody><tr><td style="text-align:left">存放后继指针 next , 只能从前往后遍历</td><td style="text-align:left">存放前驱后继指针 prior、next，双向遍历</td></tr></tbody></table><hr><h2 id="受限线性表特殊线性表栈-队列-串"><a class="markdownIt-Anchor" href="#受限线性表特殊线性表栈-队列-串"></a> 受限线性表 / 特殊线性表（栈、队列、串）</h2><p>** 栈：** 限定表尾插入删除，顺序栈、链栈、共享栈。</p><p>** 顺序栈：** 栈的顺序表示。</p><p>** 链栈：** 栈的链式存储。</p><p><strong>共享栈</strong>两个栈共享同一片空间。</p><p>** 队列：** 一段插入、一段删除，顺序队列（循环队列）、链队、双端队列。</p><p>** 循环队列：** 把顺序队列的尾指针指向头结点形成环。</p><p>** 链队：** 队列链式存储。</p><p>** 双端队列：** 两端都可以插入删除的队列。</p><p>** 输入受限的双端队列：** 只允许一端插入，两端删除。</p><p>** 输出受限的双端队列：** 只允许一端删除，两端插入。</p><p>** 串：** 限制数据元素为字符的线性表。 ** 串的存储结构：** 定长顺序存储、堆分配、块链存储。</p><p><strong>串的模式匹配</strong>暴力匹配算法、KMP、改进 KMP。</p><p>** 顺序队列相比，循环队列有哪些优点？** 解决假溢出现象。</p><p>** 栈的应用：** 括号匹配、表达式求值、递归。</p><p>** 队列应用：** 图的广度优先遍历，树的层次遍历，FCFS 先来先服务。</p><p>** 多栈共享技术：** 两栈共享空间、利用 “栈底位置不变、栈顶动态变化” 特性。</p><p>** 串和线性表的区别？** 串是特殊线性表，限制数据元素为字符，并且串的操作和线性表有较大差别，线性表操作大多以数据元素为操作对象，而串大多以串的整体或模式串作为操作对象。</p><p><strong>简述 KMP 算法</strong>：KMP 算法是在简单模式匹配算法的基础上对串的模式匹配进行优化。也就说 KMP 是改进的暴力匹配算法。<br>主要的思路是每趟比较过程中让子串先滑动到一个合适的位置。<br>当发生不匹配时，不同于简单模式匹配的右移一位，而是移动到适合的位置。<br>这里所移动的位置依靠 NEXT [] 数组，求 next [] 数组的方法是比较前后缀相同元素。</p><p><strong>栈和队列区别</strong></p><table><thead><tr><th style="text-align:left">栈</th><th style="text-align:left">队列</th></tr></thead><tbody><tr><td style="text-align:left">先入后出</td><td style="text-align:left">先入先出</td></tr><tr><td style="text-align:left">只许表尾插入删除</td><td style="text-align:left">一段插入一段删除</td></tr></tbody></table><hr><h2 id="线性表推广数组-广义表"><a class="markdownIt-Anchor" href="#线性表推广数组-广义表"></a> 线性表推广（数组、广义表）</h2><p>** 数组：** 相同数据类型的数据元素的有限序列。</p><p>** 矩阵：** 二位数组即矩阵，数组可以是数字、字符等，矩阵数据元素只能是数字。对称矩阵、对角矩阵、三角矩阵、三对角矩阵、稀疏矩阵。按行优先存储、按列优先存储。</p><p>** 压缩存储：** 相同数值分配一个存储空间、零不分配存储空间，目的节约存储空间。</p><p>** 稀疏矩阵：** 绝大部分数据元素为 0 的矩阵，通过三元组压缩存储。但压缩存储后失去了随机存取的特性。稀疏矩阵的三元组既可以采用数组存储，也可以采用十字链表存储。</p><p>** 广义表:** 放松了对表元素原子性的限制，容许表元素有自身结构。</p><hr><h2 id="树"><a class="markdownIt-Anchor" href="#树"></a> 树</h2><p>** 二叉树：** 结点的度最多为二，有左右子树之分。</p><p>** 完全二叉树：** 结点从上到下，从左到右。</p><p>** 满二叉树：** 每一层结点数都达到最大值。特殊的完全二叉树。</p><p>** 二叉排序树 BST:** 左子树所有结点值小于根值，右大于根，也可以为空树。</p><p>** 平衡二叉树 AVL：** 改进的二叉排序树，平衡因子不大于 1。</p><p>** 平衡调整：**LL 调整、RR 调整、LR 调整、RL 调整。</p><p>**B - 树：** 平衡二叉树扩展，结点多关键字的平衡树。</p><p>**B + 树:**B - 树的变形，叶子结点存储关键字以及记录地址，非叶子结点只有索引作用。</p><p>**B - 树和 B + 树区别：**B - 树分支从关键字两端引出、B + 树分支从关键字引出；B - 树中每个结点都存储信息，B + 树只有根节点存储关键字和记录，非叶结点只有索引作用，另外 B + 树可以用指针指向关键字最小的结点，并把所有结点链接成单链表。</p><p>** 哈夫曼树：** 树的带权路径长度最小的二叉树，也称最优二叉树。</p><p>** 遍历二叉树：** 按某种搜索路径寻访二叉树每个结点，使得每个结点只被访问一次。</p><p>** 线索二叉树：** 可以像遍历单链表一样遍历二叉树，加快查找前驱和后继结点。</p><p>** 二叉树存储结构：** 顺序存储结构、链式存储结构；完全二叉树和满二叉树采用顺序存储，其他二叉树如需要顺序存储需要添加空结点，一般二叉树采用链式存储结构。</p><p>** 树的三种存储方法：** 孩子表示法、双亲表示法、孩子兄弟表示法。</p><p>** 树的遍历：** 先序遍历，后续遍历 ** 二叉树遍历：** 先序遍历，中序遍历，后续遍历，层次遍历</p><p>** 树、森林、二叉树的转换：** 左孩子右兄弟</p><p>** 树的应用 - 并查集：** 管理一些不相交集合，并支持两种操作，合并和查询，其重要思想在于用集合中一个元素代表整个集合。</p><p>** 简述哈夫曼树：** 主要内容分为概念、性质、构造、哈夫曼编码、平均码长、作用。</p><p>** 概念：** 哈夫曼树是 WPL 最小的二叉树，也称最优二叉树。</p><p>** 性质：** 离根越近结点权值越大，没有度为 0 的结点，原结点都是叶子结点，结点总数 2n-1，度为二的结点数为 n-1。</p><p>** 构造：** 将集合中两个权值最小的结点相加结合生成一个新节点，放入集合，把原来的两个结点删除，在找两个最小的结点重复进行。</p><p>** 哈夫曼编码：** 可变长最短前缀编码。</p><p>** 平均码长：** 各初始结点权值乘路径长度的总和。<br>** 作用：** 数据压缩</p><hr><h2 id="图"><a class="markdownIt-Anchor" href="#图"></a> 图</h2><p>** 有向边、无向边：** 有向边是弧，无向边是边。</p><p>** 完全图：** 该有的边都有，有向完全图边的个数为 n (n-1), 无向完全图边的个数为 n (n-1)/2。</p><p>** 简单图，多重图：** 是否有自环和平行边。</p><p>** 连通图、强连通图：** 有向图任意两个顶点都有路径相通，无向图任意两点之间都有来回路径。</p><p>** 极大连通子图、极小连通子图、极大强连通子图、极小强连通子图：** 极大连通子图即连通分量，极小连通子图即边最少的连通子图，极大强连通子图即强连通分量、极小强连通子图在保持任意两结点来回互通的情况下弧最少的连通子图。</p><p>** 生成树：** 无向图的一个极小连通子图。</p><p>** 图的遍历：** 从某一顶点按需访问图中所有结点，每个结点只被访问一次。</p><p>**DAG：** 有向无环图，包括 AOE 和 AOV。</p><p>**AOE：** 以弧为活动，顶点表示事件的有向网。边有权值，用于关键路径。</p><p>**AOV:** 以顶点表示活动、弧表示事件的有向网。边无权值，用于拓扑排序。</p><p>** 图的存储结构：** 邻接矩阵、邻接表、十字链表、邻接多重表。</p><p>** 邻接矩阵：** 适用于稠密图，对称矩阵。包含顶点集和边集。</p><p>** 邻接表：** 适用于稀疏图，通过顶点表和边表组成。顶点表顺序，边表链式。有向图邻接表和逆邻接表的结合。</p><p>** 十字链表：** 适用于有向图，对邻接表查找入度的改进，方便快速查找入度。</p><p>** 邻接多重表：** 适用于无向图，对邻接表删除一个结点需要删除两个边表结点。</p><p>** 图的遍历：** 深度优先遍历 DFS、广度优先遍历 BFS。</p><p>**DFS:** 类似于树的先序遍历。工作栈实现，从初始点 v 开始访问任意一个未被访问的邻接顶点 m1，顶点 m1 访问一个未被访问的邻接顶点 m2，依次进行同样操作，直到该顶点没有未被访问的邻接顶点，则返回上一层，重复操作。</p><p>**BFS:** 类似于树的层次遍历。队列 + 辅助数组，从初始点出发，访问所有邻接顶点 m1,m2… 然后依次访问 m1 未被访问的邻接顶点，m2 未被访问的邻接顶点… 重复上述操作。</p><p>** 最小生成树:** 无向网中边权值之和最小的生成树，最小生成树 MST 不一定唯一。prim、克鲁斯卡尔。</p><p>**Prim:** 从点找边，先将初始点放入结果集，从初始顶点出发找到一个未被访问的权值最小的边所邻接的顶点，放入结果集，然后再找和这两个顶点未被访问的权值最小边所邻接顶点，放入集合，依次进行。</p><p>** 克鲁斯卡尔：** 从边找点，先找一个权值最小的边，然后找与这个边上顶点所邻接的最小边，这之间不能形成环，依次进行。</p><p>** 最短路径：** 迪杰斯特拉、弗洛伊德。</p><p>** 克鲁斯卡尔：** 求单源最短路径。</p><p>** 弗洛伊德 Floyd：** 求各顶点之间的最短路径。</p><p>** 拓扑结构：** 将入度为 0 的顶点取出，可用于检测 AOV 网是否有环。</p><p>** 关键路径：** 在 AOE 网中，从源点到汇点的最长路径。</p><hr><h2 id="查找"><a class="markdownIt-Anchor" href="#查找"></a> 查找</h2><p>** 查找分类：** 按功能：静态查找表适合查询，如顺序查找，折半查找；动态查找表适合插入删除，如 BST、AVL、B - 树、B + 树。<br>按结构：线性表、树表、散列表。</p><p>** 查找表：** 同一类型数据元素的集合。</p><p>** 线性表查找：** 顺序查找、折半查找、分块查找。</p><p>** 顺序查找：** 可以对有序表、也可以无序表。适用于顺序和链式存储。</p><p>** 折半查找：** 对有序表的查找。用到折半查找判定树。适用于顺序存储。</p><p>** 分块查找：** 顺序查找和折半查找的结合，块内无序、块间有序。</p><p>** 树表查找：** 二叉排序树、平衡二叉树、B - 树、B + 树。</p><p>** 二叉排序树：** 可以为空树，当有左子树，左子树所有结点的值小于根结点的值，若有右子树，则右子树上结点的值大于根值，左子树，右子树同理。</p><p>** 平衡二叉树：** 二叉排序树的改进，还要求平衡因子不大于 1。</p><p>** 关键字：** 数据元素中某个数据项的值，用它可以标识一个数据元素。</p><p>**B - 树：** 平衡二叉树的推广，多关键字平衡树。</p><p>**B + 树：**B - 树变形，叶子结点存放关键字和记录地址，非叶子结点只有索引作用，且可以用一个指针指向最小关键字的叶子结点，把各叶子结点链接成单链表。</p><p>** 散列表：** 根据关键字直接进行访问的数据结构，建立了关键字和物理存储的直接映射。</p><p>** 散列函数：** 把关键字映射成物理地址的函数。</p><p>** 散列函数构造方法：** 直接定址法、平方取中法、初留取余法、数字分析法、叠加法。</p><p>** 冲突：** 不同关键之映射到同一地址的情况。</p><p>** 解决冲突的方法：** 解决冲突的方法就是解决增量序列的问题。<br>开放定址法：线性探查发、平方探查发、再散列法、伪随机法。不适用于删除，因为删除的数据元素存储位置为空，他后面的数据元素就无法遍历查询到了。平方取中法解决了线性探查发堆积现象。<br>拉链法：通过链表把映射到相同地址的关键字链接存储。适用于插入删除。 <strong>散列</strong></p><p>** 查找效率影响因素：** 填装因子，散列函数，处理冲突的方法。平均查找长度 ASL 依赖于填装因子。填装因子是所存储的数据元素和整个申请存储空间的比值，即表的装满程度。</p><p><strong>各查找方法的基本思想以及 ASL:</strong></p><p>** 顺序查找：** 给定的关键字 k 从前往后对比线性表中记录的关键字，如果该几率关键字等于 k，则查找成功，否则查找失败。ASL=3 (n+1)/4</p><p>** 折半查找：** 将给定的关键字和表中中间记录关键字比较，如相等则成功，若小于中间关键字则说明要查找的关键字在表的前半部分，若大于同理，如此进行，直达找到，查找成功，否则查找失败。ASL=log2 (n+1)-1</p><p>** 分块查找：** 顺序查找或折半查找索引表、顺序查找块内元素。</p><p>** 散列查找：** 通过散列函数求关键字存储地址，看是否为空，如果空就失败，否则比较该记录关键字，若采用开放定址法则若不等则通过增量序列找到下一个存储地址进行对比，若拉链法，遍历查找链表。</p><hr><h2 id="排序"><a class="markdownIt-Anchor" href="#排序"></a> 排序</h2><p>** 算法评价：** 时间空间复杂度、稳定性。</p><p>** 内部排序、外部排序：** 内部排序利用内存；外部排序内存 + 外存，适用于大文件。</p><p><strong>排序种类：</strong></p><ol><li>插入排序：直接插入排序、希尔排序</li><li>交换排序：冒泡排序、快速排序</li><li>选择排序：直接选择排序、堆排序</li><li>归并排序：二路归并，多路归并排序（外排序）</li><li>基数排序、计数排序、桶排序<br><img lazyload="" src="/images/loading.svg" data-src="/../data-structure-concept/watermark.png" alt="在这里插入图片描述"></li></ol><p>** 排序算法稳定性：** 相同数字在排序前后相对位置不变。<br>不稳定：希尔排序、快速排序、直接选择排序、堆排序<br>不稳定：直接选择排序、冒泡排序、归并排序、基数排序、计数排序、桶排序</p><p><strong>排序算法时间复杂度：</strong></p><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)=O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：直接插入排序、直接选择排序、冒泡排序</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi> T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)=O(nlog_2 n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>：希尔排序、快速排序、堆排序、归并排</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi> T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)=O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>：基数排序、计数排序、桶排序 <strong>排序算法空间复杂度：</strong></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(n)=O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>：直接插入排序、希尔排序、冒泡排序、直接插入排序、堆排序</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi> S</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(n)=O(log_2 n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>：快速排序</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi> S</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(n)=O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>：归并排序</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi> S</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(n)=O( r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span>：基数排序</li></ol><p>** 直接插入排序：** 和打扑克牌一样，把未排序的部分按序取出一个元素插入到已经排序好的有序序列中，插入位置从前往后找。时间复杂度 O (n^2), 空间复杂度 O (1)</p><p>** 希尔排序：** 分组直接插入排序，将排序元素按增量序列分为几组，组内直接插入排序，缩减增量，使得元素基本有序，在进行一次直接插入排序。时间复杂度 O (nlog2 n)，空间复杂度 O (1)</p><p>** 冒泡排序：** 比较相邻元素的值。时间复杂度 O (n^2), 空间复杂度 O (1)</p><p>** 快速排序：** 从左到右的元素都能一次性找到自己最终位置。piovt 基准，low,high。时间复杂度 O (nlog2 n), 空间复杂度 O (log2 n)</p><p>** 直接选择排序：** 在给定的一组记录中选择最小的和第一个记录交换，然后从第二个记录到最后记录中找最小的和第二个记录交换，如此下去。方式可选小放前面、选大放后面。时间复杂度 O (n^2), 空间复杂度 O (1)</p><p>** 堆排序：** 大根堆、小根堆。时间复杂度 O (nlon2 n), 空间复杂度 O (1)</p><p>** 二路归并排序：** 两两归并，排序成一个个有序序列。时间复杂度 O (nlog2 n), 空间复杂度 O (n)</p><p>** 基数排序：** 实现方法为最高位优先、最低为优先。利用辅助队列按位收集和分配。时间复杂度 O (n), 空间复杂度 O (r )</p><hr><blockquote><p>版权声明：本文为 CSDN 博主「Yongliang Xu」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a class="link" href="https://blog.csdn.net/weixin_46733442/article/details/106237435">https://blog.csdn.net/weixin_46733442/article/details/106237435<i class="fas fa-external-link-alt"></i></a></p></blockquote>  <iframe width="100%" height="400px" name="couriourc/hexo-githubreader-tag" src="https://github1s.com/couriourc/hexo-githubreader-tag">  </iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h2 id=&quot;绪论&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="概念总结" scheme="https://couriourc.github.io/categories/%E6%A6%82%E5%BF%B5%E6%80%BB%E7%BB%93/"/>
    
    <category term="数据结构" scheme="https://couriourc.github.io/categories/%E6%A6%82%E5%BF%B5%E6%80%BB%E7%BB%93/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="基础知识" scheme="https://couriourc.github.io/categories/%E6%A6%82%E5%BF%B5%E6%80%BB%E7%BB%93/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="data-structure" scheme="https://couriourc.github.io/categories/%E6%A6%82%E5%BF%B5%E6%80%BB%E7%BB%93/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/data-structure/"/>
    
    
    <category term="基础知识" scheme="https://couriourc.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="数据结构" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="概念总结" scheme="https://couriourc.github.io/tags/%E6%A6%82%E5%BF%B5%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构总结 - 字符串：Kmp</title>
    <link href="https://couriourc.github.io/posts/347521J.html"/>
    <id>https://couriourc.github.io/posts/347521J.html</id>
    <published>2022-10-24T07:08:39.000Z</published>
    <updated>2022-10-24T07:08:39.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="浅析-kmp-的-next-数组求解思想"><a class="markdownIt-Anchor" href="#浅析-kmp-的-next-数组求解思想"></a> 浅析 <code>KMP </code> 的 <code>next</code> 数组求解思想</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">get_next</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    next_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>    j <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>    i <span class="token operator">=</span> <span class="token number">0</span>    s <span class="token operator">=</span> t    <span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> j <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> t<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>            i <span class="token operator">+=</span> <span class="token number">1</span>            j <span class="token operator">+=</span> <span class="token number">1</span>            next_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> j        <span class="token keyword">else</span><span class="token punctuation">:</span>            j <span class="token operator">=</span> next_list<span class="token punctuation">[</span>j<span class="token punctuation">]</span>    <span class="token keyword">return</span> next_listget_next<span class="token punctuation">(</span><span class="token string">'abababc'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于 Kmp 算法中书上的 <code>next </code>数组求法一直处于一个 <code>懵逼</code> 的状态。不理解为什么有 <code>-1</code>，为什么求前后公共后缀不需要用到单独的 <code>check</code> 机制，毕竟我们人眼来看都会去反复的判断（至少我之前一直都是）。</p><ul><li><p>思想归类</p><ul><li><p>滑动窗口</p><ul><li><p>我们求最大前后缀，依赖与前面的值所已经有的最长前后缀，从而不需要再，然后以此向前推</p></li><li><p>回忆一下之前做的习题：<a class="link" href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/"> 无重复字符的最长子串<i class="fas fa-external-link-alt"></i></a></p><blockquote><p>给定一个字符串 <code>s</code> ，请你找出其中不含有重复字符的 <strong>最长子串</strong> 的长度。</p><blockquote><p>来源：力扣（LeetCode）<br>链接：<a class="link" href="https://leetcode.cn/problems/sliding-window-maximum">https://leetcode.cn/problems/sliding-window-maximum<i class="fas fa-external-link-alt"></i></a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p></blockquote></blockquote><p>在我们这里用的是一端不动的窗口</p></li></ul></li><li><p>动态规划的角度思考</p></li></ul></li></ul><h2 id="代码中的求解过程"><a class="markdownIt-Anchor" href="#代码中的求解过程"></a> 代码中的求解过程</h2><p>举个例子: <code>abababa</code>，我们在运行求第 6 个的时候: <code>a b a b a "b" a</code>，我们之前所求到的前面的公共前后缀的长度也就是 3 <code>aba</code></p><p>前后缀是包括我们的第一个的，所以我们只需要每次从 <code>aba </code>的后面开始判断，<code>aba "?"</code>，这个 <code>?</code> 和我当前的对应到的也就是第 <code>7</code> 个的结果，这个取决于当前浏览的 <code>i</code> 也就是 <code>"b"</code> 是否满足等于之前所找到的最长的，如果不是就向下找前一段所求的公共最长子串，同样的道理也是取决于这个公共前后缀的尾巴与我现在所在的这个后缀的尾巴是否相等<br><code>a b a b a "b" a</code><br><code>0 1 1 2 3  4  5</code></p><p><code>a 0</code>: 默认值</p><p><code>b 1</code>: 前面的最长公共子串为 0 , 至于为什么要 <code>+1</code> 是因为我们当前匹配的时候，前面的已经发现在这个位置就不对，那 <code>a</code> 就没必要再与 <code>b</code> 这个位置比较，所以就跳到 <code>b</code> 的后面去，也就是 <code>j</code> 从头再开始。</p><blockquote><p>需要注意的是，我们求 这个值的时候，<code> i</code> 在 我们当前正在求的前一个位置，在这个满足后设置的才是我们当前求得这个 也即是说我们如果从 j = 0 开始的时候，也就是错开了一个位置<br>得到的 <code>next_list = ["0" 0 1 1 2 3  4  5]</code><br>而不是<code> next_list = [ 0 1 1 2 3  4  5]</code></p></blockquote><p><code>a 2</code>: 前面的前缀之前我们发现从 第 <code>0</code> 的位置是不存在前后缀的，然后现在我们要观察的是 前面的公共前后缀，也就是 ab 的公共前后缀，<code>a</code> 与 我当前的 <code>b</code> 并不相等，</p><p><code>b 3</code>: OK, 基于以上的，我们到求第三的这个位置，这个位置的判定条件就是：我们前面的 <code>aba </code>所求到的这个的最长公共前后缀的最后一个 <code>ab?</code> 中的 <code>? </code>与我当前的 <code>a </code>是否相等 (需要留意，用程序求的时候，是看前面的前面与我当前的位置的情况，然后推到后面的情况</p><hr><p>对于我们的直觉求法就是直接瞪眼神功对于上面的 求 <code>i+1 = 3</code>(这时候 <code>i </code>是等于 <code>2</code>) 也就是求第 4**(经历了 i= i +1-&gt; next_list [3])** 这一个字符前面的公共前后缀的时候 (<code>j = -1 </code>的时候求到的 <code>next_list </code>是正常的匹配顺序，也就是 <code>i </code>是从正常的 <code>0 </code>开始的其前面的字符是 <code>aba </code>来看，之前我们发现最长公共前后缀就是 0 也就是 <code>a </code>这个时候我们判断 <code>t[2]:a</code> 是否等于 (后缀和这个前面的最长的前缀的最后一个元素做比较) 然后发现 <code>a = a</code> 是相等的，然后就可以得到 <code>2</code> 了而不是还要去扫描后面的，因为我们这一次扫描带来的元素只有一个，有一种滑动窗口的味道了。</p><p>再重新整理一下：</p><ul><li>窗口中的进入了一个元素</li><li>这个元素对窗口产生的影响</li></ul><blockquote><p>一些问题：这种避免回溯的方法，能否在窗口中合理的利用呢。</p><p>还得继续做题，💪</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;浅析-km</summary>
      
    
    
    
    <category term="数据结构" scheme="https://couriourc.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="基础知识" scheme="https://couriourc.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="data-structure" scheme="https://couriourc.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/data-structure/"/>
    
    
    <category term="基础知识" scheme="https://couriourc.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="数据结构" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="823" scheme="https://couriourc.github.io/tags/823/"/>
    
    <category term="KMP" scheme="https://couriourc.github.io/tags/KMP/"/>
    
  </entry>
  
  <entry>
    <title>考研英语整理 - 词根词缀</title>
    <link href="https://couriourc.github.io/posts/393WDVH.html"/>
    <id>https://couriourc.github.io/posts/393WDVH.html</id>
    <published>2022-10-14T01:53:41.000Z</published>
    <updated>2022-10-14T11:40:59.315Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><p>*<strong>1. a-*</strong></p><p>① 加在单词或词根前面，表示 “不，无，非”，如 acentric 无中心的（a+centric 中心的）</p><p>② 加在单词前，表示 “在…，… 的”，如 aside 在边上（a+side 旁边）</p><p><em><strong>2. ab-, abs-</strong></em></p><p>加在词根前，表示 “相反，变坏，离去” 等，如 abuse 滥用（ab+use 用→用坏→滥用）</p><p><em><strong>3. ab-,ac-,ad-,af-,ag-,an-,ap-,ar-,as-,at - 等</strong></em></p><p>加在同辅音字母的词根前，表示 “一再” 等加强意，如 aggrandize 扩大（ag+grand 大→一再大→扩大 [权力] 等）</p><p>*<strong>4. ad-*</strong></p><p>加在在单词或词根前，表示 “做…，加强…”，如 adjoin 贴近；毗连（ad+join 参加→参加在一起→贴近）</p><p>*<strong>5. amphi-*</strong></p><p>表示 “两个，两种”，如 amphibian 两栖动物（amphi+bi 生命 + an→两个生命→两栖动物）</p><p>*<strong>6. an-*</strong></p><p>在词根前，表示 “不，无”，如 anarchism 无政府主义（an+arch 统治 + ism→无统治→无政府主义）</p><p><em><strong>7. ana-</strong></em></p><p>表示 “错误，在旁边，分开”，如 analysis 分析（ana+lysis 分开→分开来→分析）</p><p>*<strong>8. ante-*</strong></p><p>表示 “前面，先”，如 antedate 提前写日期；先于，早于（ante+date 日期→提前写日期）</p><p><em><strong>9. anti-</strong></em></p><p>表示 “反对，相反”，如 antipathy 反感（anti+pathy 感情）</p><p><em><strong>10. anthrop(o)-</strong></em></p><p>表示 “人，人类”，如 anthropology 人类学（anthropo+logy 学者）</p><p>*<strong>11. dem(o)*</strong></p><p>表示 “人民（1）”，如 democracy 民主；民主政治，民主政体；民主主义（demo+cracy 统治→人民统治→人民做主）</p><p>*<strong>12. popul-*</strong></p><p>表示 “人民（2）”，如 popular 流行的；大众的；受欢迎的；通俗的（popul+ar… 的）</p><p>*<strong>13. andr(o)-*</strong></p><p>表示 “男（1）”，如 androgyne 具有男妇两性的人，阴阳人（andro+gyn 女人）</p><p>*<strong>14. vir-*</strong></p><p>表示 “男（2）”，如 virile 男的，男性的，有男子气概的（vir+ile 形容词词尾 “… 的”）</p><p>*<strong>15. fem/ femin*</strong></p><p>表示 “女（1）”，如 female 女性的，妇女的；女子</p><p>*<strong>16. gyn(o)-/ gynec(o)-*</strong></p><p>表示 “女（2）”，如 gynecian 妇女的，妇人的（gynec+ian… 的）</p><p><em><strong>17. be-</strong></em></p><p>① 构成动词，表示 “使… 成为”，如 belie 掩盖（be+lie 说慌）</p><p>② 构成一些介词，如 before 在前面（be+fore 前面）</p><p><em><strong>18. bene-</strong></em></p><p>表示 “善，好”，如 benediction 祝福（bene+dict 说 + ion→说好话）</p><p>*<strong>19. bi-*</strong></p><p>表示 “两个，两”，如 bilingual 双语种的（bi+lingu 语言 + al・・・的→双语的)</p><p><em><strong>20. by-</strong></em></p><p>表示 “在旁边，副的”，如 bypass 旁路；忽略（by+pass 通过→从旁边通过→忽略）</p><p><em><strong>21. circum-</strong></em></p><p>表示 “环绕，周围”，如 circumscribe 限制（circum+scribe 写→规定范围→限制）</p><p><em><strong>22. co-</strong></em></p><p>表示 “共同”，通常放在元音词根前，如 coexist 共存（co+exist 存在）</p><p><em><strong>23. col/cor</strong></em></p><p>在同辅音词根前，表示 “共同”，如 collaboration 协作；合著（col+labor 劳动 + ation 名词→共同劳动）</p><p>*<strong>24. com-,con-*</strong></p><p>表示 “共同”，如 combine 联合，结合（com+bine 捆→捆在一起→结合）</p><p><em><strong>25. contra-</strong></em></p><p>表示 “反对，相反”，如 contradict 反驳；矛盾（contra+dict 说→反着说→反驳）</p><p><em><strong>26. counter-</strong></em></p><p>表示 “反对，相反”，如 counteract 对抗；抵消（counter+act 行为→反着行动→对抗）</p><p>*<strong>27. de-*</strong></p><p>① 表示 “去掉，变坏，离开，变慢，向下” 等，如 deforest 砍伐森林（de+forest 森林→去掉森林）</p><p>② 表示 “使… 成为，加强” 等，如 delimit 划定界限（de+limit 限定→加强限定）</p><p>*<strong>28. di-*</strong></p><p>① 表示 “两个，双”，=twi-，如 dioxide 二氧化物（di+ox 氧 + ide→二氧化物）</p><p>② 表示 “使… 变成，分开，离开”，如 divert 转移（di+vert 转→转开）</p><p>*<strong>29. patr(i)-/ part(o)-/pater-*</strong></p><p>表示 “父，祖”，如 patriarch 家长；族长（patri+arch 首脑，长）</p><p><em><strong>30. matr(i)-</strong>/<strong>mater-</strong>/<strong>metro-</strong></em></p><p>表示 “母”，如 maternal 母亲的，母性的（matr+n+al… 的）</p><p><em><strong>31. dia-</strong></em></p><p>表示 “穿过，二者之间”，如 dialogue 对话（dia+logue 话→两人之间的话）</p><p><em><strong>32. dif-</strong></em></p><p>和辅音重复表示 “不，否定，分开”，如 diffuse 散布的，散开的（dif+fusc 流→分开流→散布的）</p><p><em><strong>33. dis-</strong></em></p><p>① 表示 “不，消失掉”，如 disorder 无秩序（dis+order 顺序→没有顺序）</p><p>② 表示 “分开，分离”，如 dispense 分配（dis+pense 花费→分开花费→分配 [财富等]）</p><p><em><strong>34. dys-</strong></em></p><p>表示 “坏，不良”，如 dyspepsia 消化不良（dys+peps 消化；胃 + ia 病→消化不好）</p><p>*<strong>35. e-/ ef-*</strong></p><p>表示 “出，出来”，如 emerge 浮现（e+merge 投入；淹没→淹没的东西出现→浮现）</p><p>*<strong>36. em-/ en-*</strong></p><p>① 表示 “进入… 之中，包围”，如 embrace 拥抱（em+brace 胳膊→进入怀抱）</p><p>② 表示 “使… 进入状态”，如 empower 授权（em+power 权力）</p><p>*<strong>37. hyper-*</strong></p><p>表示 “超过，太多”，如 hypercritical 吹毛求疵的（hyper+critical 批评的）</p><p>*<strong>38. hypo-*</strong></p><p>表示 “下面，次等”，如 hypothesis 假说，假设（hypo+thesis 论文→还不是正式的理论→假说）</p><p><em><strong>39. homo-</strong></em></p><p>表示 “同类的”，如 homogeneous 同类的；同族的（homo+gen 产生 + eous 形容词后缀 “・・・的”→产生相同的）</p><p>*<strong>40. il-/ ir-*</strong></p><p>① 放在同辅音词根前表示 “不，无”，如 illegal 非法的（il+legal 合法的）</p><p>② 表示 “使…. 成为，进入”，如 irruption 闯入，冲入（ir+rupt 断 + ion 名词后缀→打断 [别人]→闯入）</p><p>*<strong>41. im-/ in-*</strong></p><p>① 表示 “不，无，非”，如 immoral 不道德的（im+moral 道德的）</p><p>② 表示 “向内，进入”，如 imprison 监禁（im+prison 监狱）</p><p>*<strong>42. inter-*</strong></p><p>表示 “在… 之间，相互”，如 international 国际的（inter+national 国家的）</p><p>*<strong>43. intro-*</strong></p><p>表示 “向内，入内”，如 introspect 内省，反省（(intro+pect 看→向内看→内省）</p><p>*<strong>44. macro-*</strong></p><p>表示 “宏伟，大”，如 macroworld 宏观世界（macro+world 世界）</p><p>*<strong>45. micro-*</strong></p><p>表示 “微，小”，如 microscope 显微镜（micro+scope 看→看小东西→显微镜）</p><p>*<strong>46. mal-*</strong></p><p>表示 “坏，恶”(亦作 male)，如 malpractice 不法行为（mal+practice 做事，实践→做坏事）</p><p>*<strong>47. mini-*</strong></p><p>表示 “小”，如 miniskirt 超短裙（mini+skirt 裙子）</p><p>*<strong>48. mis-*</strong></p><p>表示 “错误，坏”，如 isunderstand 误解（mis+understand 理解）</p><p>*<strong>49. mono-*</strong></p><p>表示 “单个，一个”，如 monarch 君主，独裁者（mon+arch 统治者→一个统治者）</p><p>*<strong>50. multi-*</strong></p><p>表示 “很多，很多”，如 multimedia 多媒体的（multi+media 媒介）</p><p>*<strong>51. neo-*</strong></p><p>表示 “新的”，如 neonatal 新生的，被生的（neo+natal 出生的）</p><p>*<strong>52. omni-*</strong></p><p>表示 “全部。到处”，如 omnipresent 无所不在的（omni+present 出现的）</p><p>*<strong>53. out-*</strong></p><p>① 表示 “超过，过度”，如 outlive 活得比… 长（out+live 活→超过别人活着）</p><p>② 表示 “出去，过时”，如 outside 在外面（out+side 旁边→在外边）</p><p>*<strong>54. over-*</strong></p><p>① 表示 “过度，过分”，如 overdose 药物过量（over+dose 剂量）</p><p>② 表示” 在…… 之上”，如 overbridge 天桥（over+bridge 桥→上面的桥→天桥）</p><p>③表示 “翻转”，如 overturn 颠覆（over+rurn 转→翻转）</p><p>*<strong>55. paleo-*</strong></p><p>表示 “古，旧”，如 paleozoology 古动物学（paleo+zoology 动物学）</p><p>*<strong>56. pan-*</strong></p><p>表示 “广泛的”，如 pandemic （疾病）在全国（或世界）流行的；流行病（pan+dem 人民 + ic 某种病→人民广泛〔染病〕）</p><p>*<strong>57. para-*</strong></p><p>① 表示 “半，类似，辅助”，如 parapolitical 半政治的（para+political 政治的）</p><p>② 表示 “在旁边”，如 paradigm 范例，示范（para+digm 显示→在旁边显示给 [别人]→示范）</p><p>③ 表示 “降落伞”，如 paradrop 空投，空降（para+drop 扔下）</p><p>*<strong>58. peri-*</strong></p><p>表示 “周围，靠近”，如 perigon 周角，360 度角（peri+gon 角）</p><p>*<strong>59. poly-*</strong></p><p>表示 “多”，如 polyfunctional 多功能的（poly+functional 有功能的）</p><p>*<strong>60. per-*</strong></p><p>① 表示 “贯穿，自始至终”，如 perspective 透视的（per+spect 看 + ive→看透了→透视的）</p><p>② 表示 “假，坏”，如 pervert 堕落，滥用（per+vert 转→转向坏→堕落）</p><p>*<strong>61. post-*</strong></p><p>① 表示 “在后面”，如 postgraduate 研究生；大学毕业后的（post+graduate 毕业）</p><p>② 表示 “邮件，邮政”，如 postoffice 邮局（post+office 办公室）</p><p>*<strong>62. pre-*</strong></p><p>表示 “…. 前的，预先”，如 preschool 学龄前的；幼儿园（pre+school 学校→上学前的）</p><p>*<strong>63. paeudo-*</strong></p><p>表示 “假，伪”，如 pseudoscience 伪科学（pseudo+science 科学）</p><p>*<strong>64. re-*</strong></p><p>①表示 “向后，相反，不”，如 reverse 反转的，颠倒的（re+verse 转→反转的）</p><p>②表示 “一再，重新”，如 rearrage 重新安排（re+arrange 安排）</p><p>*<strong>65. retro-*</strong></p><p>表示 “向后，倒退”，如 retrospect 回顾，回想（retro+spect 看→向后看）</p><p>*<strong>66. intra-*</strong></p><p>表示 “在内，内部”，如 intraparty 党内的（intra+party 党）</p><p>*<strong>67. iso-*</strong></p><p>表示 “等，同”，如 isogeny 同源（iso+geny 产生→共同产生→同源）</p><p>*<strong>68. kilo-*</strong></p><p>表示 “一千”，如 kilometer 公里（kilo+meter 米→一千米，公里）</p><p>*<strong>69. meta-*</strong></p><p>表示 “超过，改变”，如 metapsy 超心理学，灵学（meta+psych 心灵 + ology 学科）</p><p>*<strong>70. milli-*</strong></p><p>表示 “千，千分之一”，如 millimeter 毫米（milli+meter→千分之一米）</p><p>*<strong>71. ob-*</strong></p><p>表示 “逆，倒，加强意义”，如 oblique 倾斜的（ob+lique 歪斜→歪斜的）</p><p>*<strong>72. octa-/ octo-*</strong></p><p>表示 “八”，如 octagon 八角形（octa+gon 角）</p><p>*<strong>73. penta-*</strong></p><p>表示 “五”，如 pentagon 五角形；五角大楼（penta+gon 角）</p><p>*<strong>74. quadri-/ quadru-*</strong></p><p>表示 “四”，如 quadricycle 四轮车（quadri+cycle 轮子）</p><p>*<strong>75. quasi-*</strong></p><p>表示 “类似，准”，如 quasi-official 半官方的</p><p>*<strong>76. semi-*</strong></p><p>表示 “半”，如 semiautomatic 半自动的（semi+automatic 自动的）</p><p>*<strong>77. cata-*</strong></p><p>表示 “向下，相反，离开”，如 catalog 目录（cata 向下 + log 说→在下面要说的话→目录）</p><p>*<strong>78. deca-*</strong></p><p>表示 “十”，如 decameter 十米（deca+meter 米）</p><p>*<strong>79. deci-*</strong></p><p>表示 “十分之一”，如 decimeter 十分之一米（deci+meter 米）</p><p>*<strong>80. demi-*</strong></p><p>表示 “半”，如 demi-fixed 半固定的（demi+fix 固定）</p><p>*<strong>81. endo-*</strong></p><p>表示 “内部”，如 endogenous 内生的，自生的（endo+gen 产生 + ous→内部产生的）</p><p>*<strong>82. hecto-*</strong></p><p>表示 “百，许多”，如 hectowatt 一百瓦（hecto+watt 瓦）</p><p>*<strong>83. hemi-*</strong></p><p>表示 “半”，如 hemicycle 半圆形（hemi+cycle 圆，循环）</p><p>*<strong>84. hepta-*</strong></p><p>表示 “七”，如 heptagon 七角形（hepta+gon 角）</p><p>*<strong>85. hexa-*</strong></p><p>表示 “六”，如 hexagon 六角形（hexa+gon 角）</p><p>*<strong>86. holo-*</strong></p><p>表示 “全部”，如 holography 全息摄影（holo+graphy 写→全部写下→全息摄影）</p><p>*<strong>87. trans-*</strong></p><p>① 表示 “横过，越过”，如 transect 横切，横断（trans+sect 切→横切）</p><p>② 表示 “变换，改变，转移”，如 tranplant 移植（trans+plant 种→转移过去→移植）</p><p>*<strong>88. ultra-*</strong></p><p>① 表示 “极端”，如 ultrapure 极纯的（ultra+pure 纯的）</p><p>② 表示 “超出，超过”，如 ultramodern 超现代化的（ultra+modern 现代化的）</p><p>*<strong>89. un-*</strong></p><p>① 表示 “不，无，非，没有”，如 unreal 不真实（un+real 真实的）</p><p>② 表示 “打开，解开，弄出”，如 unlock 开锁（un+lock 锁）</p><p>*<strong>90. under-*</strong></p><p>① 表示 “在… 下”，如 underground 地下的（under+ground 地）</p><p>② 表示 “不足，不够”，如 underdeveloped 不发达的（under+developed 发展→发展不够）</p><p>③ 表示 “副手”，如 underagent 副代理人（under+agent 代理人）</p><p>*<strong>91. sur-*</strong></p><p>表示 “超过，在上面”，如 surmount 登上，超越（sur+mount 山→在山上→登上）</p><p>*<strong>92. super-*</strong></p><p>① 表示 “超级，超过，过度”，如 supernatural 超自然的（super+natural 自然的）</p><p>② 表示 “在… 上面”，如 supervise 临视（super+vise 看→在上面看→临视）</p><p>*<strong>93. sus-*</strong></p><p>表示 “在… 下面”，如 suspect 怀疑（sus+pect 看→在下面看一看→怀疑）</p><p>*<strong>94. sym-/ syn-*</strong></p><p>表示 “共同，相同”，如 sympathy 同情（sym+pathy 感情）</p><p>*<strong>95. se-*</strong></p><p>表示 “分开，离开，区别开”，如 select 选出（se+lect 选→选出分开）</p><p>*<strong>96. sub-*</strong></p><p>① 表示 “在下面，次一等，副手”，如 submerge 沉没，淹没（sub+merge 淹没→淹没下去）</p><p>② 表示 “接近，靠近”，如 subcentral 接近中心的（sub+central 中心的）</p><p>*<strong>97. suc-/suf-/ sup-/sur - 等 *</strong></p><p>在同辅音词根前表示 “在… 下面”，如 surround 包围（sur+round 圆圈→在下面围一圈）</p><p>*<strong>98. sept-/ septi-*</strong></p><p>表示 “七”，如 septangle 七角形（sept+angle 角）</p><p>*<strong>99. sex-*</strong></p><p>表示 “六”，如 sexangle 六角形（sex+angle 角）</p><p>*<strong>100. step-*</strong></p><p>表示 “后，继或前夫 (妻) 所生”，如 stepfather 继父</p><p><em><strong>101. stereo-</strong></em></p><p>表示 “立体”，如 sterograph 立体照片（stereo+graph 写，照片）</p><p><em><strong>102. supra-</strong></em></p><p>表示 “超….”，如 supranatonal 超国家的</p><p><em><strong>103. tetra-</strong></em></p><p>表示 “四”，如 tetragon 四角形（tetra+gon 角）</p><p><em><strong>104. tri-</strong></em></p><p>表示 “三”，如 triangle 三角形（tri+angle 角）</p><p>*<strong>105. twi-*</strong></p><p>表示 “二，两”，如 twilight 黎明，黄昏（twi+light 光→黑白光交替）</p><p>*<strong>106. uni-*</strong></p><p>表示 “一个，单一”，如 uniform 一贯的，一致的（uni+form 形状）</p><p>*<strong>107. vice-*</strong></p><p>表示 “副”，如 vice-president 副总统</p><p>*<strong>108. with-*</strong></p><p>表示 “向后，相反”，如 withdraw 撤消，撤退（with+draw 拉→向相反拉→撤退）</p><p>*<strong>109. se-*</strong></p><p>表示 “分开，离开，区别开”，如 select 选出（se+lect 选→选出分开）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;p&gt;*&lt;strong&gt;1</summary>
      
    
    
    
    <category term="基础知识" scheme="https://couriourc.github.io/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="english" scheme="https://couriourc.github.io/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/english/"/>
    
    
    <category term="词根词缀" scheme="https://couriourc.github.io/tags/%E8%AF%8D%E6%A0%B9%E8%AF%8D%E7%BC%80/"/>
    
    <category term="总结" scheme="https://couriourc.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="考研" scheme="https://couriourc.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>考研英语整理 - 句子</title>
    <link href="https://couriourc.github.io/posts/e33e3b9c.html"/>
    <id>https://couriourc.github.io/posts/e33e3b9c.html</id>
    <published>2022-10-07T10:24:51.000Z</published>
    <updated>2022-10-14T11:42:41.773Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="英语句子整理"><a class="markdownIt-Anchor" href="#英语句子整理"></a> 英语句子整理</h1><blockquote><p>来自☞星火英语的文章 - 知乎 <a class="link" href="https://zhuanlan.zhihu.com/p/359244875">四六级！考研！100 个句子刷完 7000 个单词！<i class="fas fa-external-link-alt"></i></a></p></blockquote><p>1.<strong>Typical</strong> of the grassland <strong>dwellers</strong> of the <strong>continent</strong> is the American antelope，or pronghorn.</p><p>译：美洲羚羊，或称叉角羚，是该大陆典型的草原动物。</p><p>2.Of the millions who saw Haley’s <strong>comet</strong> in 1986，how many people will live long enough to see it return in the twenty-first century？</p><p>译：1986 年看见哈雷慧星的千百万人当中，有多少人能够长寿到足以目睹它在二十一世纪的回归呢？</p><p>3.<strong>Anthropologists</strong> have discovered that fear，happiness，sadness，and surprise are universally reflected in facial expressions.</p><p>译：人类学家们已经发现，恐惧、快乐、悲伤和惊奇都会行之于色，这在全人类是共通的。</p><details><summary>🎈🎈一些身份的单词总结</summary><div class="markmap-container" style="height:100vh">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;学家&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;哲学 Philosophy&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;马克思主义哲学 Philosophy of Marxism&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;中国哲学 Chinese Philosophy&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;外国哲学 Foreign Philosophies&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;伦理学 Ethics&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;美学 Aesthetics&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;宗教学 Science of Religion&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;科学技术哲学 Philosophy of Science and Technology&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;西方经济学 Western Economics&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;世界经济 World Economics&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;劳动经济学 Labor Economics&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;职业&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;厨师    cook&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;(主）厨师 chef&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;建筑工人  construction worker&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;海关官员  customs officer&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;舞蹈家   dancer&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;作曲家   composer&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[36,37]},&quot;v&quot;:&quot;上班族   office staff&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[38,39]},&quot;v&quot;:&quot;职员    office clerk&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[40,41]},&quot;v&quot;:&quot;摄影师   photographer&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[42,43]},&quot;v&quot;:&quot;房地产经纪人    real estate agent&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[44,45]},&quot;v&quot;:&quot;公务员   public servant&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[46,47]},&quot;v&quot;:&quot;国家公务员 national public servant&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[48,49]},&quot;v&quot;:&quot;美容师   beautician&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[50,51]},&quot;v&quot;:&quot;秘书    secretary&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[52,53]},&quot;v&quot;:&quot;商人    merchant/ businessman&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[54,55]},&quot;v&quot;:&quot;卖花人   florist&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[56,57]},&quot;v&quot;:&quot;菜贩子   greengrocer&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[58,59]},&quot;v&quot;:&quot;肉贩子   butcher&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[60,61]},&quot;v&quot;:&quot;船员/水手 sailor&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[62,63]},&quot;v&quot;:&quot;交通管理员 traffic warden&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[64,65]},&quot;v&quot;:&quot;考古学家  archaeologist&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[66,67]},&quot;v&quot;:&quot;生物学家  biologist&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[68,69]},&quot;v&quot;:&quot;地质学家  geologist&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[70,71]},&quot;v&quot;:&quot;植物学家  botanist&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[72,73]},&quot;v&quot;:&quot;数学家   mathematician&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[74,75]},&quot;v&quot;:&quot;化学家   chemist&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[76,77]},&quot;v&quot;:&quot;哲学家   philosopher&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[78,79]},&quot;v&quot;:&quot;政治学家  politician&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[80,81]},&quot;v&quot;:&quot;物理学家  physicist&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[82,83]},&quot;v&quot;:&quot;人类学家  <strong>anthropologist</strong>&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[84,85]},&quot;v&quot;:&quot;和尚    monk&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[86,87]},&quot;v&quot;:&quot;气象学家  <strong>meteorologist</strong>&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[88,89]},&quot;v&quot;:&quot;打字员   typist&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[90,91]},&quot;v&quot;:&quot;兽医    <strong>vet</strong>&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[92,93]},&quot;v&quot;:&quot;总统    president&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[94,95]},&quot;v&quot;:&quot;裁缝师   tailor&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[96,97]},&quot;v&quot;:&quot;电工    electrician&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[98,99]},&quot;v&quot;:&quot;会计    accountant&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[100,101]},&quot;v&quot;:&quot;地勤人员  airline representative&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[102,103]},&quot;v&quot;:&quot;学徒工   <strong>apprentice</strong>&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[104,105]},&quot;v&quot;:&quot;汽车技工  auto mechanic&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[106,107]},&quot;v&quot;:&quot;管家    housekeeper&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[108,109]},&quot;v&quot;:&quot;家庭主妇  housewife&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[110,111]},&quot;v&quot;:&quot;笔译员   translator&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[112,113]},&quot;v&quot;:&quot;口译员   interpreter&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[114,115]},&quot;v&quot;:&quot;审计员   auditor&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[116,117]},&quot;v&quot;:&quot;门童    bell boy&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[118,119]},&quot;v&quot;:&quot;旅馆的行李员    bellhop&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[120,121]},&quot;v&quot;:&quot;铁匠    blacksmith&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[122,123]},&quot;v&quot;:&quot;书商    bookseller&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[124,125]},&quot;v&quot;:&quot;拳击手   boxer&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[126,127]},&quot;v&quot;:&quot;屠夫/肉商     butcher&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[128,129]},&quot;v&quot;:&quot;木匠          carpenter&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[130,131]},&quot;v&quot;:&quot;漫画家        cartoonist&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[132,133]},&quot;v&quot;:&quot;出纳员        cashier&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[134,135]},&quot;v&quot;:&quot;化学师/药剂师 chemist&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[136,137]},&quot;v&quot;:&quot;店员          clerk【职员，神职人员】&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[138,139]},&quot;v&quot;:&quot;小丑【🎃👕】          clown&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[140,141]},&quot;v&quot;:&quot;制(补)鞋匠    cobbler&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[142,143]},&quot;v&quot;:&quot;牛仔          cowboy&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[144,145]},&quot;v&quot;:&quot;素食主义者    vegetarian&quot;}]}],&quot;p&quot;:{}}"></svg></div></details><p>4.Because of its irritating effect on humans，the use of <strong>phenol</strong> as a general <strong>antiseptic</strong> has been largely discontinued.</p><p>译：由于苯酚对人体带有刺激性作用，它基本上已不再被当作常用的防腐剂了</p><p><a class="link" href="http://5.In">5.In<i class="fas fa-external-link-alt"></i></a> group to remain in existence，a profit-making organization must，in the long run，produce something consumers consider useful or desirable.</p><p>译：任何盈利组织若要生存，最终都必须生产出消费者可用或需要的产品。</p><p>6.The greater the population there is in a locality，the greater the need there is for water，transportation，and disposal of refuse.</p><p>译：一个地方的人口越多，其对水、交通和垃圾处理的需求就会越大。</p><p><a class="link" href="http://7.It">7.It<i class="fas fa-external-link-alt"></i></a> is more difficult to write simply，directly，and effectively than to employ flowery but vague expressions that only obscure one’s meaning.</p><p>译：简明、直接、有力的写作难于花哨、含混而意义模糊的表达。</p><p>8.With modern offices becoming more mechanized，designers are attempting to personalize them with warmer，less severe interiors.</p><p>译：随着现代办公室的日益自动化，设计师们正试图利用较为温暖而不太严肃的内部装饰来使其具有亲切感。</p><p>9.The difference between libel and slander is that libel is printed while slander is spoken.</p><p>译：诽谤和流言的区别在于前者是书面的，而后者是口头的。</p><p>10.The knee is the joints where the thigh bone meets the large bone of the lower leg.</p><p>译：膝盖是大腿骨和小腿胫的连接处。</p><p>11.Acids are chemical compounds that，in water solution，have a sharp taste，a corrosive action on metals，and the ability to turn certain blue vegetable dyes red.</p><p>译：酸是一种化合物，它在溶于水时具有强烈的气味和对金属的腐蚀性，并且能够使某些蓝色植物染料变红。</p><p>12.Billie Holiday’s reputation as a great jazz-blues singer rests on her ability to give emotional depth to her songs.</p><p>译：Billie Holiday’s 作为一个爵士布鲁斯乐杰出歌手的名声建立在能够赋予歌曲感情深度的能力上。</p><p>13.Essentially，a theory is an abstract，symbolic representation of what is conceived to be reality.</p><p>译：理论在本质上是对认识了的现实的一种抽象和符号化的表达。</p><p>14.Long before children are able to speak or understand a language，they communicate through facial expressions and by making noises.</p><p>译：儿童在能说或能听懂语言之前，很久就会通过面部表情和靠发出噪声来与人交流了。</p><p>\15. Thanks to modern irrigation，crops now grow abundantly in areas where once nothing but cacti and sagebrush could live.</p><p>译：受当代灌溉（技术设施）之赐，农作物在原来只有仙人掌和荞属科植物才能生存的地方旺盛的生长。</p><p>16.The development of mechanical timepieces spurred the search for more accurate sundials with which to regulate them.</p><p>译：机械计时器的发展促使人们寻求更精确的日晷，以便校准机械计时器。</p><p>17.Anthropology is a science in that anthropologists use a rigorous set of methods and techniques to document observations that can be checked by others.</p><p>译：人类学是一门科学，因为人类学家采用一整套强有力的方法和技术来记录观测结果，而这样记录下来的观测结果是供他人核查的。</p><p>18.Fungi are important in the process of decay，which returns ingredients to the soil，enhances soil fertility，and decomposes animal debris.</p><p>译：真菌在腐化过程中十分重要，而腐化过程将化学物质回馈于土壤，提高其肥力，并分解动物粪便。</p><p>19.When it is struck，a tuning fork produces an almost pure tone，retaining its pitch over a long period of time.</p><p>译：音叉被敲击时，产生几乎纯质的音调，其音量经久不衰。</p><p>20.Although pecans are most plentiful in the southeastern part of the United States，they are found as far north as Ohio and Illinois.</p><p>译：虽然美洲山河桃树最集中于美国的东南部但是在北至俄亥俄州及伊利诺州也能看见它们。</p><p>21.Eliminating problems by transferring the blame to others is often called scape-goating.</p><p>译：用怪罪别人的办法来解决问题通常被称为寻找替罪羊。</p><p>22.The chief foods eaten in any country depend largely on what grows best in its climate and soil.</p><p>译：一个国家的主要食物是什么，大体取决于什么作物在其天气和土壤条件下生长得最好。</p><p>23.Over a very large number of trials，the probability of an event’s occurring is equal to the probability that it will not occur.</p><p>译：在大量的实验中，某一事件发生的几率等于它不发生的几率。</p><p>24.Most substance contract when they freeze so that the density of a substance’s solid is higher than the density of its liquid.</p><p>译：大多数物质遇冷收缩，所以他们的密度在固态时高于液态。</p><p>25.The mechanism by which brain cells store memories is not clearly understood.</p><p>译：大脑细胞储存记忆的机理并不为人明白。</p><p><a class="link" href="http://26.By">26.By<i class="fas fa-external-link-alt"></i></a> the middle of the twenty-first century，painters and sculptors in the United States had begun to exert a great worldwide influence over art.</p><p>译：到了二十一世纪中叶，美国画家和雕塑家开始在世界范围内对艺术产生重大影响。</p><p><a class="link" href="https://link.zhihu.com/?target=http%3A//27.In">http://27.In<i class="fas fa-external-link-alt"></i></a> the eastern part of New Jersey lies the city of Elizabeth，a major shipping and manufacturing center.</p><p>译：伊丽莎白市，一个重要的航运和制造业中心，坐落于新泽西州的东部。</p><p>28.Elizabeth Blackwell，the first woman medical doctor in the United States，founded the New York Infirmary，an institution that has always had a completely female medical staff.</p><p>译：Elizabeth Blackwell，美国第一个女医生，创建了员工一直为女性的纽约诊所。</p><p>29.Alexander Graham Bell once told his family that he would rather be remembered as a teacher of the deaf than as the inventor of the telephone.</p><p>译：Alexander Graham Bell 曾告诉家人，他更愿意让后人记住他是聋子的老师，而非电话的发明者。</p><p>30.Because its leaves remain green long after being picked，rosemary became associated with the idea of remembrance.</p><p>译：采摘下的迷迭香树叶常绿不衰，因此人们把迷迭香树与怀念联系在一起。</p><p>31.Although apparently rigid，bones exhibit a degree of elasticity that enables the skeleton to withstand considerable impact.</p><p>译：骨头看起来是脆硬的，但它也有一定的弹性，使得骨骼能够承受相当的打击。</p><p>32.That xenon could not FORM chemical compounds was once believed by scientists.</p><p>译：科学家曾相信：气是不能形成化合物的。</p><p>33.Research into the dynamics of storms is directed toward improving the ability to predict these events and thus to minimize damage and avoid loss of life.</p><p>译：对风暴动力学的研究是为了提高风暴预测从而减少损失，避免人员伤亡。</p><p>34.The elimination of inflation would ensure that the amount of money used in repaying a loan would have the same value as the amount of money borrowed.</p><p>译：消除通货膨胀应确保还贷的钱与所贷款的价值相同。</p><p>35.Futurism，an early twentieth-century movement in art，rejected all traditions and attempted to glorify contemporary life by emphasizing the machine and motion.</p><p>译：未来主义，二十世纪早期的一个艺术思潮。拒绝一切传统，试图通过强调机械和动态来美化生活。</p><p>36.One of the wildest and most inaccessible parts of the United States is the Everglades where wildlife is abundant and largely protected.</p><p>译：Everglades 是美国境内最为荒凉和人迹罕至的地区之一，此处有大量的野生动植物而且大多受（法律）保护。</p><p>37.Lucretia Mott’s influence was so significant that she has been credited by some authorities as the originator of feminism in the United States.</p><p>译：Lucretia Mott’s 的影响巨大，所以一些权威部门认定她为美国女权运动的创始人。</p><p>38.The activities of the international marketing researchers are frequently much broader than those of the domestic marketer.</p><p>译：国际市场研究者的活动范围常常较国内市场研究者广阔。</p><p>39.The continental divide refers to an imaginary line in the North American Rockies that divides the waters flowing into the Atlantic Ocean from those flowing into the Pacific.</p><p>译：大陆分水岭是指北美洛矶山脉上的一道想象线，该线把大西洋流域和太平洋流域区分开来。</p><p>40.Studies of the gravity field of the Earth indicate that its crust and mantle yield when unusual weight is placed on them.</p><p>译：对地球引力的研究表明，在不寻常的负荷之下地壳和地幔会发生位移。</p><p>41.The annual worth of Utah’s manufacturing is greater than that of its mining and farming combined.</p><p>译：犹他州制造业的年产值大于其工业和农业的总和。</p><p>42.The wallflower is so called because its weak stems often grow on walls and along stony cliffs for support.</p><p>译：墙花之所以叫墙花，是因为其脆弱的枝干经常要靠墙壁或顺石崖生长，以便有所依附。</p><p><a class="link" href="http://43.It">43.It<i class="fas fa-external-link-alt"></i></a> is the interaction between people，rather than the events that occur in their lives，that is the main focus of social psychology.</p><p>译：社会心理学的主要焦点是人与人之间的交往，而不是他们各自生活中的事件。</p><p><a class="link" href="http://44.No">44.No<i class="fas fa-external-link-alt"></i></a> social crusade aroused Elizabeth Williams’ enthusiasm more than the expansion of educational facilities for immigrants to the United States.</p><p>译：给美国的新移民增加教育设施比任何社会运动都更多地激发了 Elizabeth Williams 的热情。</p><p>45.Quails typically have short rounded wings that enable them to spring into full flight instantly when disturbed in their hiding places.</p><p>译：典型的鹌鹑都长有短而圆的翅膀，凭此他们可以在受惊时一跃而起，飞离它们的躲藏地。</p><p>46.According to anthropologists，the earliest ancestors of humans that stood upright resembled chimpanzees facially，with sloping foreheads and protruding brows.</p><p>译：根据人类学家的说法，直立行走的人的鼻祖面部轮廓与黑猩猩相似，额头后倾，眉毛突出。</p><p>47.Not until 1866 was the fully successful transatlantic cable finally laid.</p><p>译：直到 1866 年第一条横跨大西洋的电缆才完全成功架通。</p><p><a class="link" href="https://link.zhihu.com/?target=http%3A//48.In">http://48.In<i class="fas fa-external-link-alt"></i></a> his writing，John Crowe Ransom describes what he considers the spiritual barrenness of society brought about by science and technology.</p><p>译：John Crowe Ransom 在他的著作中描述了他的认为，社会的精神贫困是由科学技术带来的。</p><p>49.Children with parents whose guidance is firm，consistent，and rational are inclined to possess high levels of self-confidence.</p><p>译：父母的教导如果坚定，始终如一和理性，孩子就有可能充满自信。</p><p>50.The ancient Hopewell people of North America probably cultivated corn and other crops，but hunting and gathering were still of critical importance in their economy.</p><p>译：北美远古的 Hopewell 人很可能种植了玉米和其他农作物，但打猎和采集对他们的经济贸易仍是至关重要的。</p><p>51.Using many symbols makes it possible to put a large amount of information on a single map.</p><p>译：使用多种多样的符号可以在一张地图里放进大量的信息。</p><p>52.Anarchism is a term describing a cluster of doctrines and attitudes whose principal uniting feature is the belief that government is both harmful and unnecessary.</p><p>译：无政府主义这个词描述的是一堆理论和态度，它们的主要共同点在于相信政府是有害的，没有必要的。</p><p>53.Probably no man had more effect on the daily lives of most people in the Untied States than did Henry Ford a pioneer in automobile production.</p><p>译：恐怕没有谁对大多数美国人的日常生活影响能超过汽车生产的先驱亨利福特。</p><p>54.The use of well-chosen nonsense words makes possible the testing of many basic hypotheses in the field of language learning.</p><p>译：使用精心挑选的无意义词汇，可以检验语言学科里许多基本的假定。</p><p>55.The history of painting is a fascinating chain of events that probably began with the very first pictures ever made.</p><p>译：优化历史是由一连串的迷人事件组成，其源头大概可以上溯到最早的图画。</p><p>56.Perfectly matched pearls，strung into a necklace，bring a far higher price than the same pearls sold individually.</p><p>译：相互般配的珍珠，串成一条项链，就能卖到比单独售出好得多的价钱。</p><p>57.During the eighteenth century，Little Turtle was chief of the Miami tribe whose territory became what is now Indiana and Ohio.</p><p>译：十八世纪时，“小乌龟 “是迈阿密部落的酋长，该部落的地盘就是今天的印第安那州和俄亥俄州。</p><p>58.Among almost seven hundred species of bamboo，some are fully grown at less than a foot high，while others can grow three feet in twenty-four hours.</p><p>译：在竹子的近七百个品种中，有的全长成还不到一英尺，有的却能在二十四小时内长出三英尺。</p><p>59.Before starting on a sea voyage，prudent navigators learn the sea charts，study the sailing directions，and memorize lighthouse locations to prepare themselves for any conditions they might encounter.</p><p>译：谨慎的航海员在出航前，会研究航向，记录的灯塔的位置，以便对各种可能出现的情况做到有备无患。</p><p>60.Of all the economically important plants，palms have been the least studied.</p><p>译：在所有的经济作物中，棕榈树得到的研究最少。</p><p>61.Buyers and sellers should be aware of new developments in technology can and does affect marketing activities.</p><p>译：购买者和销售者都应该留意技术的新发展，原因很简单，因为技术能够并且已经影响着营销活动。</p><p>62.The application of electronic controls made possible by the microprocessor and computer storage have multiplied the uses of the modern typewriter.</p><p>译：电脑储存和由于电子微处理机得以实现的电控运用成倍的增加了现代打字机的功能。</p><p>63.The human skeleton consists of more than two hundred bones bound together by tough and relatively inelastic connective tissues called ligaments.</p><p>译：人类骨骼由二百多块骨头组成，这些骨头是由坚韧而相对缺乏弹性的，被称为韧带的结缔组织连在一起。</p><p>64.The pigmentation of a pearl is influenced by the type of oyster in which it develops and by the depth，temperature，and the salt content of the water in which the oyster lives.</p><p>译：珍珠的色泽受到作为其母体牡蛎种类及牡蛎生活水域的深度，温度和含盐度的制约。</p><p>65.Although mockingbirds superbly mimic the songs and calls of many birds，they can nonetheless be quickly identified as mockingbirds by certain aural clues.</p><p>译：尽管模仿鸟学很多种鸟的鸣叫声惟妙惟肖，但人类还是能够依其声音上的线索很快识别它们。</p><p>66.Not only can walking fish live out of water，but they can also travel short distances over land.</p><p>译：鲇鱼不仅可以离开水存活，还可以在岸上短距离移动。</p><p>67.Scientists do not know why dinosaurs became extinct，but some theories postulate that changes in geography，climate，and sea levels were responsible.</p><p>译：科学家不知道恐龙为何绝种了，但是一些理论推断这是由地理、气候和海平面的变化造成的。</p><p>68.The science of horticulture，in which the primary concerns are maximum yield and superior quality，utilizes information derived from other sciences.</p><p>译：关注最高产量和优良品质的农艺学利用了其他科学的知识。</p><p>69.Snow aids farmers by keeping heart in the lower ground levels，thereby saving the seeds from freezing.</p><p>译：雪对农民是一种帮助，因为它保持地层土壤的温度，使种子不致冻死。</p><p>70.Even though the precise qualities of hero in literary words may vary over time，the basic exemplary function of the hero seems to remain constant.</p><p>译：历代文学作品中的英雄本色虽各有千秋，但其昭世功力却是恒古不变的。</p><p>71.People in prehistoric times created paints by grinding materials such as plants and clay into powder and then adding water.</p><p>译：史前的人们制造颜料是将植物和泥土等原料磨成粉末，然后加水。</p><p>72.Often very annoying weeds，goldenrods crowd out less hardy plants and act as hosts to many insect pests.</p><p>译：黄菊花通常令人生厌，它挤走不那么顽强的植物，并招来很多害虫。</p><p>73.Starting around 7000 B.C.，and for the next four thousand years，much of the Northern Hemisphere experienced temperatures warmer than at present.</p><p>译：大约从公元前七千年开始，在四千年当中，北半球的温度比现在高。</p><p>74.When Henry Ford first sought financial backing for making cars，the very notion of farmers and clerks owning automobiles was considered ridiculous.</p><p>译：当亨利・福特最初为制造汽车寻求资金支持，农民和一般职员也能拥有汽车的想法被认为是可笑的。</p><p>75.Though once quite large，the population of the bald eagle across North America has drastically declined in the past forty years.</p><p>译：北美秃头鹰的数量一度很多，但在近四十年中全北美的秃头鹰数量急剧下降。</p><p>76.The beaver chews down trees to get food and material with which to build its home.</p><p>译：水獭啃倒树木，以便取得食物并获得造窝的材料。</p><p>77.Poodles were once used as retrievers in duck hunting，but the American Kennel Club does not consider them sporting dogs because they are now primarily kept as pets.</p><p>译：长卷毛狗曾被用作猎鸭时叼回猎物的猎犬，但是美国 Kennel Club 却不承认它们为猎犬，因为它们现在大多数作为宠物饲养。</p><p><a class="link" href="http://78.As">78.As<i class="fas fa-external-link-alt"></i></a> a result of what is now known in physics and chemistry，scientists have been able to make important discoveries in biology and medicine.</p><p>译：物理学和化学的一个成果是使得科学家们能在生物学和医学上获得重大发现。</p><p>79.The practice of making excellent films based on rather obscure novels has been going on so long in the United States as to constitute a tradition.</p><p>译：根据默默无闻的小说制作优秀影片在美国由来已久，已经成为传统。</p><p>80.Since the consumer considers the best fruit to be that which is the most attractive，the grower must provide products that satisfy the discerning eye.</p><p>译：因为顾客认为最好的水果应该看起来也是最漂亮的，所以种植者必须提供能满足挑剔眼光的产品。</p><p>81.Television the most pervasive and persuasive of modern technologies，marked by rapid change and growth，is moving into a new era，an era of extraordinary sophistication and versatility，which promises to reshape our lives and our world.</p><p>译：电视，这项以迅速变化和成长为标志的最普及和最有影响力的现代技术，正在步入一个新时代，一个极为成熟和多样化的时代，这将重塑我们的生活和世界。</p><p>82.Television is more than just an electronics；it is a means of expression，as well as a vehicle for communication，and as such becomes a powerful tool for reaching other human beings.</p><p>译：电视不仅仅是一件电器，它是表达的手段和交流的载体并因此成为联系他人的有力工具。</p><p>83.Even more shocking is the fact that the number and rate of imprisonment have more than doubled over the past twenty years，and recidivism-----that is the rate for re-arrest------is more than 60 percent.</p><p>译：更让人吃惊的事实是监禁的数目和比例在过去的二十年中翻了一番还有余，以及累犯率 —— 即再次拘押的比例 —— 为百分之六十多。</p><p>84.His teaching began at the Massachusetts Institute of Technology，but William Rainey Harper lured him to the new university of Chicago，where he remained officially for exactly a generation and where his students in advanced composition found him terrifyingly frigid in the classroom but sympathetic and understanding in their personal conferences.</p><p>译：他的教书生涯始于麻省理工学院，但是 William Rainey Harper 把他吸引到了新成立的芝加哥大学。他在那里正式任职长达整整一代人的时间。他的高级作文课上的学生觉得他在课上古板得可怕，但私下交流却富有同情和理解。</p><p>85.The sloth pays such little attention to its personal hygiene that green algae grow on its coarse hair and communities of a parasitic moth live in the depths of its coat producing caterpillars which graze on its mouldy hair.Its muscles are such that it is quits incapable of moving at a speed of over a kilometer an hour even over the shortest distances and the swiftest movement it can make is a sweep of its hooked arm.</p><p>译：树獭极不讲究卫生，以至于它粗糙的毛发上生出绿苔，成群的寄生蛾生长在它的皮毛深处，变成毛毛虫，并以它的脏毛为食。它的肌肉不能让它哪怕在很短的距离以内以每小时一公里的速度移动。它能做的最敏捷的动作就是挥一挥它弯曲的胳膊。</p><p>86.Artificial flowers are used for scientific as well as for decorative purposes.They are made from a variety of materials，such as wax and glass，so skillfully that they can scarcely be distinguished from natural flowers.</p><p>译：人造花卉既可用于科学目的，也可用于装饰目的。它们可以用各种各样的材料制成，比如蜡和玻璃。其制作如此精巧，几乎可以以假乱真。</p><p>87.Three years of research at an abandoned coal mine in Argonne，Illinois，have resulted in findings that scientists believe can help reclaim thousands of mine disposal sites that scar the coal-rich regions of the United States.</p><p>译：在伊利诺州 Angonne 市的一个废弃煤矿的三年研究取得了成果，科学家们相信这些成果可以帮助改造把美国产煤区弄得伤痕累累的数干个旧煤场。</p><p>88.When the persuading and the planning for the western railroads had finally been completed，the really challenging task remained:the dangerous，sweaty，backbreaking，brawling business of actually building the lines.</p><p>译：当有关西部铁路的说服和规划工作终于完成后，真正艰难的任务还没有开始：即那些危险、吃力、需要伤筋动骨和吵吵嚷嚷的建造这些铁路的实际工作。</p><p>89.Because of the space crunch，the Art Museum has become increasingly cautious in considering acquisitions and donations of art，in some cases passing up opportunities to strengthen is collections.</p><p>译：由于空间不足，艺术博物馆在考虑购买和接受捐赠的艺术品时越来越慎重，有些情况下会放弃其进一步改善收藏的机会。</p><p>90.The United States Constitution requires that President be a natural-born citizen，thirty-five years of age or older，who has lived in the United States for a minimum of fourteen years.</p><p>译：美国宪法要求总统是生于美国本土的公民，三十五岁以上，并且在美国居住了至少十四年。</p><p>91.Arid regions in the southwestern United States have become increasingly inviting playgrounds for the growing number of recreation seekers who own vehicles such as motorcycles or powered trail bikes and indulge in hill-climbing contests or in caving new trails in the desert.</p><p>译：美国西部的不毛之地正成为玩耍的地方，对越来越多拥有摩托车或越野单车类车辆的，喜欢放纵于爬坡比赛或开辟新的沙漠通道的寻欢作乐者具有不断增长的吸引力。</p><p>92.Stone does not decay，and so tools of long ago have remained when even the bones of the man who made them have disappeared without trace.</p><p>译：石头不会腐烂，所以以前的（石器）工具能保存下来，虽然它们的制造者已经消失的无影无踪。</p><p>93.Insects would make it impossible for us to live in the world；they would devour all our crops and kill our flocks and herds，if it were not for the protection we get from insect-eating animals.</p><p>译：昆虫可能会使我们无法在这个世界上居住；如果我们没有受到以昆虫为食的动物的保护，昆虫就会吞嚼掉我们所有的庄稼并杀死我们饲养的禽兽。</p><p><a class="link" href="http://94.It">94.It<i class="fas fa-external-link-alt"></i></a> is true that during their explorations they often faced difficulties and dangers of the most perilous nature，equipped in a manner which would make a modern climber shudder at the thought，but they did not go out of their way to court such excitement.</p><p>译：确实，他们在探险中遇到了极具威胁性的困难和危险，而他们的装备会让一个现代登山者想一想都会浑身颤栗。不过他们并不是刻意去追求刺激的。</p><p>95.There is only one difference between an old man and a young one:the young man has a glorious future before him and old one has a splendid future behind him:and maybe that is where the rub is.</p><p>译：老人和年轻人之间只有一个区别：年轻人的前面有辉煌的未来，老年人灿烂的未来却已在他们身后。这也许就是区别之所在。</p><p>96.I find young people exciting.They have an air of freedom，and they have not a dreary commitment to mean ambitions or love comfort.They are not anxious social climbers，and they have no devotion to material things.</p><p>译：我们为年轻人振奋。他们带有自由的气息，他们不会为狭隘的野心和贪婪的享受而孜孜以求。他们不是焦虑地向上爬的人，他们不会对物质性的东西难舍难分。</p><p>97.I am always amazed when I hear people saying that sport creates goodwill between the nations，and that if only the common peoples of the world could meet one another at football or cricket，they would have no inclination to meet on the battlefield.</p><p>译：每次我听说体育运动能够在国家间建立起友好感情，说世界各地的普通人只要能在足球场或板球场上相遇就会没有兴趣在战场上相遇的话，我都倍感诧异。</p><p><a class="link" href="http://98.It">98.It<i class="fas fa-external-link-alt"></i></a> is impossible to say simply for the fun and exercise:as soon as the question of prestige arises，as soon as you feel that you and some larger unit will be disgraced if you lose，the most savage combative instincts are around.</p><p>译：不可能仅仅为了娱乐或锻炼而运动：一旦有了声誉问题，一旦你觉得你输了你和你所属团体会有失体面时，你最野蛮的好斗本能就会被激发出来。</p><p><a class="link" href="http://99.It">99.It<i class="fas fa-external-link-alt"></i></a> has been found that certain bats emit squeaks and by receiving the echoes，they can locate and steer clear of obstacles--------or locate flying insects on which they feed.This echolocation in bats is often compared with radar，the principle of which is similar.</p><p>译：人们已经发现，某些蝙蝠发出尖叫声并靠接受回响来锁定和避免障碍物 —— 或者找到它们赖以为生的昆虫。蝙蝠这种回响定位法常拿来和原理与之很相近似的雷达相比。</p><p><a class="link" href="http://100.As">100.As<i class="fas fa-external-link-alt"></i></a> the time and cost of making a clip drop to a few days and a few hundred dollars，engineers may soon be free to let their imaginations soar without being penalized by expensive failure.</p><p>译：随着芯片制造时间和费用降低到了几天和几百美元，工程师们可能很快可以任他们的想象驰骋而不会被昂贵的失败所惩罚。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;英语句子整</summary>
      
    
    
    
    <category term="基础知识" scheme="https://couriourc.github.io/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="english" scheme="https://couriourc.github.io/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/english/"/>
    
    
    <category term="总结" scheme="https://couriourc.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="考研" scheme="https://couriourc.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
    <category term="English" scheme="https://couriourc.github.io/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>考研英语整理 - 单词</title>
    <link href="https://couriourc.github.io/posts/edd2d7.html"/>
    <id>https://couriourc.github.io/posts/edd2d7.html</id>
    <published>2022-10-07T10:24:51.000Z</published>
    <updated>2022-10-24T08:00:23.097Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="考研英语词汇整理"><a class="markdownIt-Anchor" href="#考研英语词汇整理"></a> 考研英语词汇整理</h1><h2 id="考研常见连词汇总"><a class="markdownIt-Anchor" href="#考研常见连词汇总"></a> 考研常见连词汇总</h2><ol><li>above 在…… 上，胜过</li><li> against 对照，对比 ，与…… 相反</li><li> along with 连同…… 一起；加</li><li> also 也</li><li> although 虽然；但是（表让步 / 转折）</li><li>anyway 无论如何，总之</li><li> as 因为</li><li> as a result 作为…… 的结果（表因果）</li><li>as if 好像</li><li> as well 也</li><li> as yet 至今，到目前为止</li><li> aside from 除…… 之外</li><li> because 因为</li><li> before 在…… 之前</li><li> long before 很早以前；早在…… 之前</li><li> before long 不久以后</li><li> beneath 不如，比不上</li><li> besides 除…… 之外还</li><li> between 介于…… 之间</li><li> beyond 超出…… 之外的</li><li> but 但是</li><li> by 在…… 之前，不迟于</li><li> by contrast 对比起来</li><li> on the contrary/contrast 相反</li><li> by the time 到…… 时</li><li> despite 尽管（表让步）</li><li>during 在…… 期间</li><li> even 甚至，即使</li><li> even if 虽然，即使</li><li> excluding 不包括</li><li> for 因为；为了；代表</li><li> for example 例如（表例证）</li><li>hence 因此，所以</li><li> however 然而</li><li> if 如果；即使；是否</li><li> if only 但愿，只要，要是…… 就好了（表条件）</li><li>only if 只有在…… 的时候</li><li> if any 如果有的话</li><li> in 在…… 里；进…… 里；在…… 期间：穿着；在…… 方面</li><li> in case 假使，如果，万一</li><li> in effect/fact 实际上，事实上（表强调）</li><li>in essence 本质上</li><li> in general 通常，一般来说</li><li> in short 简而言之</li><li> in turn 转而，反过来；轮流地，依次</li><li> indeed 实际上，确实</li><li> instead 代替，反而</li><li> into 进入…… 之内；成为…… 的状态</li><li> later 后来，稍后，随后</li><li> lest 唯恐，以免</li></ol><h2 id="与政治有关的英语单词集合"><a class="markdownIt-Anchor" href="#与政治有关的英语单词集合"></a> 与 “政治” 有关的英语单词集合</h2><h3 id="1-名词"><a class="markdownIt-Anchor" href="#1-名词"></a> 1. 名词</h3><ol><li>government n. 政府；政体，国家体制</li><li> administration n. 政府；管理，行政</li><li> constitution n. 宪法，章程；体制</li><li> institution n. 机构；制度；制定</li><li> regime n. 统治制度，政权，政体</li><li> crown n. 王冠；王国；王位，王权</li><li> agency n. 机构</li><li> constituent n. 选民，选举人</li><li> convention n. 大会，会议</li><li> commission n. 委员会</li><li> committee n. 委员会</li><li> provincialist n. 地方主义者</li><li> advocate n. 拥护者</li><li> prosecution n. 起诉，诉讼</li><li> corruption n. 贪污，腐败</li><li> conviction n. 定罪，判罪</li><li> provision n. 规定，条款</li><li> statute n. 法规，法令</li><li> practice n. 常规，惯例</li><li> draft n. 草案；草稿</li><li> assertion n. 声明</li><li> regulator n. 监管者，监管机构</li><li> transparency n. 透明度</li><li> supervision n. 监督，管理</li><li> manipulation n. 操纵</li><li> regulation n. 管理</li><li> coordination n. 协调，配合</li><li> lobbying n. 游说活动</li><li> bribery n. 贿赂</li><li> compact n. 契约，协定</li><li> penalty n. 罚款，罚金，处罚</li><li> justice n. 法官</li><li> attorney n. 律师（代表当事人出庭者）</li><li>witness n. 证人</li><li> trial n. 审判，审理</li><li> jury n. 陪审团</li><li> council n. 委员会</li><li> ruling n. （法庭）裁决，裁定</li><li> enforcement n. 执行</li><li> sovereignty n. 主权</li><li> jurisdiction n. 管辖权，司法权</li><li> privileged power 特权</li><li> law enforcement 执法</li><li> exclusive right 专属权</li><li> jurisdiction 管辖权，司法权</li><li> capital market 资本市场</li><li> about-face n. 政策或意见彻底转变</li><li> compromise n. 妥协</li><li> hostility n. 愤怒反对</li><li> revival n. 复苏</li><li> interference n. 干涉</li><li> intervene n. 干预</li></ol><h3 id="2-形容词"><a class="markdownIt-Anchor" href="#2-形容词"></a> 2. 形容词</h3><ol><li>bureaucratic adj. 政府的，官僚（员）的</li><li> official adj. 公务的，公职的；n. 官员</li><li> unanimous adj. 一致通过的</li><li> robust adj. 强有力的</li><li> legitimate adj. 合法的；正当的</li><li> egalitarian adj. 平等主义的</li><li> conservative adj. 保守的，守旧的</li></ol><h3 id="3-动词"><a class="markdownIt-Anchor" href="#3-动词"></a> 3. 动词</h3><ol><li>overturn v. 推翻，撤销（判决等）</li><li>dismiss v. 驳回（上诉、讼案等）; 解雇</li><li> exempt v. 免除，豁免</li><li> infringe v. 违反；侵犯</li><li> supervise v. 管理，指导</li><li> contest v. 质疑，提出异议</li><li> authorize v. 批准，认可</li><li> verify v. 核实，查证</li><li> invalidate v. 使无效</li><li> diminish v. 削弱</li><li> remold v. 改变，更新</li><li> restore v. 恢复；重建</li><li> revive v. 复兴</li><li> reshape v. 重塑</li><li> disclose v. 披露</li></ol><h3 id="4-短语"><a class="markdownIt-Anchor" href="#4-短语"></a> 4. 短语</h3><ol><li><p>intrude on 侵犯，违背</p></li><li><p>comly with 遵守；符合</p></li><li><p>turn on 以…… 为中心</p></li><li><p>conflict with 与…… 相抵触</p></li><li><p>carry out 执行、贯彻</p></li><li><p>take aim at 抨击</p></li><li><p>cry out against 强烈反对</p></li><li><p>give in to 屈服，让步</p></li><li><p>make concession 做出让步</p></li><li><p>entitled to 有权享有，有…… 的资格</p></li><li><p>qualified for 有担任…… 的资格</p></li><li><p>be eligible for 有资格……</p></li><li><p>be in a position to do 有资格做某事</p></li></ol><h2 id="考研英语一义多词整理动词"><a class="markdownIt-Anchor" href="#考研英语一义多词整理动词"></a> 考研英语 “一义多词” 整理 —— 动词</h2><h3 id="1-促进-激发"><a class="markdownIt-Anchor" href="#1-促进-激发"></a> 1. 促进、激发</h3><ol><li>prompt v. 促使；鼓励；提示</li><li> promote v. 促进；促销；升职</li><li> propel v. 促使，驱使；推动</li><li> impel v. 推动；驱使；激励</li><li> urge v. 敦促；强烈要求；鞭策</li><li> boost v. 促进，增加；宣扬</li><li> advance v. 促进，推动；推广</li><li> accelerate v. 促进；加快；增加</li><li> facilitate v. 促进；使更容易</li><li> hasten v. 促进；急忙进行；赶往</li><li> motivate v. 促进；激励；是…… 原因</li><li> stimulate v. 促进；激发；刺激</li><li> expedite v. 促进；加快；发出</li><li> compel v. 促使，使发生；强迫；驱赶</li><li> arouse v. 激发，引起；唤醒；发奋</li><li> inspire v. 激发，鼓舞；引起，导致</li><li> excite v. 激起；使兴奋；刺激…… 的活动</li><li> provok v. 激起，引起；激励；激怒</li></ol><h3 id="2-加强-加重"><a class="markdownIt-Anchor" href="#2-加强-加重"></a> 2. 加强、加重</h3><ol><li>enhance v. 加强；提高</li><li> reinforce v. 加强；强化</li><li> intensify v. 加强；加剧</li><li> strength v. 加强；巩固</li><li> heigthen v. 加强；增强</li><li> aggravate v. 使加重，使恶化；惹怒</li><li> sharpen v. 加剧；变锋利；改善，提高</li><li> exacerbate v. 使加剧；使恶化；激怒</li><li> augment v. 增大，提高，增强</li></ol><h3 id="3-认为-声称"><a class="markdownIt-Anchor" href="#3-认为-声称"></a> 3. 认为、声称</h3><ol><li>deem v. 认为，相信</li><li> think v. 认为；考虑</li><li> reckon v. 认为；估算；指望</li><li> count v. 认为；重要；数数</li><li> regard v. 把…… 看作；看待；注重</li><li> believe v. 认为；相信</li><li> suppose v. 认为；假设</li><li> expect v. 认为；期待；要求</li><li> hold v. 认为；持有；召开；拘留</li><li> conclude v. 认为，断定；结束；达成；决定</li><li> convince v. 认为；说服；使确信</li><li> argue v. 认为；说服；争论；提出质疑</li><li> maintain v. 主张，断言；维持；保养；赡养；支持</li><li> insist v. 坚称；坚持，坚决要求</li><li> claim v. 声称；索取；要求；获得</li><li> assert v. 坚称；维护；生效</li><li> contend v. 声称；竞争；处理</li></ol><h3 id="4-要求-获得"><a class="markdownIt-Anchor" href="#4-要求-获得"></a> 4. 要求、获得</h3><ol><li>require v. 需要；要求</li><li> demand v. 强烈要求；需要</li><li> need v. 需要，必须；有必要</li><li> request v. 要求；请求；索要</li><li> acquire v. 获得；学到；患上（疾病）</li><li>gain v. 获得，赢得；增加；到达</li><li> obtain v. 获得，得到；存在</li><li> earn v. 赢得；赚得；盈利</li><li> claim v. 取得，获得</li></ol><h3 id="5-处理-解决"><a class="markdownIt-Anchor" href="#5-处理-解决"></a> 5. 处理、解决</h3><ol><li>dispose v. 处理；安置；清除</li><li> manage v. 处理；管理；控制</li><li> field v. 处理，应付（问题或意见）</li><li>deal with 处理；涉及；做生意</li><li> cope with 处理；应付；对付</li><li> handle with 处理</li><li> solve v. 处理，结局；解释，解答</li><li> settle v. 解决 (分歧、争端)；定居</li><li> address v. 处理；演说；写姓名地址</li><li> tackle v. 应付，解决；质问；反对</li><li> resolve v. 解决；决定；溶解；分解</li><li> treatment n. 处理，讨论；对待；护理</li></ol><h3 id="6-提供-给予"><a class="markdownIt-Anchor" href="#6-提供-给予"></a> 6. 提供、给予</h3><ol><li>offer v. 提供；主动提出；提议；出价</li><li> provide v. 提供；配备；供养；做准备</li><li> afford v. 提供，给予；买得起</li><li> furnish v. 提供，供应；为（房间）配备家具</li><li> supply v. 提供，供给；补充；满足要求</li><li> render v. 给予，提供；提交；使成为</li><li> grant v. 授予，允许；承认，同意</li></ol><h3 id="7-导致-引起"><a class="markdownIt-Anchor" href="#7-导致-引起"></a> 7. 导致、引起</h3><ol><li>lead to 导致；通向</li><li> bring about 引起；使掉头</li><li> result in 导致，结果是</li><li> spark off 导致，引发，激起</li><li> conduce to 导致，有利于</li><li> contribute to 带来，促成；有利于；捐赠</li><li> give rise to 使发生，引起</li><li> procure v. 导致；获得，取得</li><li> induce v. 导致，引起；引诱；归纳出</li><li> generate v. 引起；造成；发生；使形成</li><li> cause v. 造成，引起；使感到</li><li> trigger v. 引发，激发；触发</li><li> spell v. 导致，招致（尤指坏事）</li><li>entail v. 需要，导致</li></ol><h3 id="8-中止-取消"><a class="markdownIt-Anchor" href="#8-中止-取消"></a> 8. 中止、取消</h3><ol><li>purse v. 暂停，中止</li><li> suspend v. 暂停，停顿；踌躇</li><li> abolish v. 取消；废除，废止</li><li> cancel v. 取消；终止，废除</li><li> abrogate v. 取消；废除</li><li> countermand v. 取消，撤消；宣布无效</li><li> call off 取消；依次叫名；叫走</li></ol><h3 id="9-违反-侵犯"><a class="markdownIt-Anchor" href="#9-违反-侵犯"></a> 9. 违反、侵犯</h3><ol><li>violate v. 违反，违背；亵渎，损毁</li><li> breach v. 违反，破坏；在… 上打开缺口</li><li> contravene v. 违反；抵触；反驳；否认</li><li> transgress v. 违反；侵犯；犯罪；越界</li><li> infringe v. 违反 (法律)；侵犯 (权益)</li><li>go against 违反；不利于；反对</li><li> run counter to 违反，与… 背道而驰</li></ol><h3 id="10-强制-强迫"><a class="markdownIt-Anchor" href="#10-强制-强迫"></a> 10. 强制、强迫</h3><ol><li>force v. 强迫；用力推；使发生</li><li> compel v. 强迫，迫使；使发生，促使</li><li> coerce v. 强制，迫使</li><li> compulsion n. 强制，强迫</li></ol><h3 id="11-抛弃丢掉"><a class="markdownIt-Anchor" href="#11-抛弃丢掉"></a> 11. 抛弃，丢掉</h3><ol><li>disregard v. 抛弃；丢掉</li><li> abandon v. 抛弃；舍弃；中止；陷入</li><li> put away 放好，抛弃</li><li> cast away 丢掉，浪费</li><li> give up 放弃；交出</li></ol><h3 id="12-同意支持"><a class="markdownIt-Anchor" href="#12-同意支持"></a> 12. 同意，支持</h3><ol><li>consent v. 同意，允许，赞同</li><li> surpport v. 支持，拥护；鼓励；帮助</li><li> agree v. 同意；商定；达成一致意见</li><li> approvel v. 称许，赞成；批准，许可</li><li> endorse v. 赞同，认可；宣传，吹捧</li><li> applaud v. 鼓掌；称赞，赞许；喝彩</li><li> go along with 赞同</li><li> in sympathy of 支持</li><li> subscribe to 同意，赞成</li></ol><h3 id="13-阻碍抑制限制"><a class="markdownIt-Anchor" href="#13-阻碍抑制限制"></a> 13. 阻碍，抑制，限制</h3><ol><li>hinder v. 阻碍，妨碍</li><li> stem v. 阻止，遏制</li><li> impede v. 阻碍，妨碍；阻止</li><li> hamper v. 阻碍，妨碍</li><li> obstruct v. 阻碍，妨碍；堵塞；遮住</li><li> prevent v. 阻碍，阻止；防止；预防</li><li> resist v. 阻挡，抵制；抵抗；反抗</li><li> restrain v. 阻止；抑制；控制；剥夺自由</li><li> confine v. 限制，局限；关押；使离不开</li><li> astrict v. 束缚，限制</li><li> limit v. 限制；制约；减少</li><li> barrier n. 障碍；分界线</li><li> fence n. 障碍物；围栏；买卖赃物者</li><li> block n. 障碍物；大块；街道；大厦</li><li> handicap n. 残疾；障碍，不利条件</li><li> hold back 阻止；隐瞒；抑制；退缩</li><li> keep off 防止，挡住，避开</li></ol><h3 id="14-打扰扰乱"><a class="markdownIt-Anchor" href="#14-打扰扰乱"></a> 14. 打扰，扰乱</h3><ol><li>bother v. 打扰；费心；使不舒服</li><li> disturb v. 打扰；使烦恼；移动，弄乱</li><li> trouble v. 苦恼；费神；麻烦；使疼痛</li><li> interrupt v. 打扰；打断；阻断，遮挡</li><li> upset v. 扰乱；使心烦意乱；打翻</li><li> disrupt v. 妨碍，扰乱</li></ol><h3 id="15-意见观点"><a class="markdownIt-Anchor" href="#15-意见观点"></a> 15. 意见，观点</h3><ol><li>opinion n. 意见；专家意见；印象</li><li> viewpoint n. 观点，看法；视角，观察点</li><li> standpoint n. 立场，观点；观看位</li><li> perspective n. 观点；洞察力；景观</li><li> view n. 观点；方法；视野；风景</li><li> outlook n. 看法；前景；景色；瞭望处</li><li> idea n. 观点；信念；猜想；目标；理念</li><li> thought n. 想法；考虑；关心；念头</li></ol><h3 id="16-几乎不很少"><a class="markdownIt-Anchor" href="#16-几乎不很少"></a> 16. 几乎不，很少</h3><ol><li>scarce adj. 短缺的；adv. 几乎不</li><li> scarcely adv. 勉强，几乎不；才；决不，一定不</li><li> hardly adv. 几乎不；刚刚，才；差不多</li><li> barely adv. 几乎不；刚刚；仅仅；贫乏地</li><li> seldom adv. 不常，很少，难得</li><li> rarely adv. 罕有，很少；极度</li><li> little adv. 极少，轻微；几乎不；短时间地，一会儿地</li></ol><h3 id="17-痛苦的"><a class="markdownIt-Anchor" href="#17-痛苦的"></a> 17. 痛苦的</h3><ol><li>painful adj. 疼痛的；令人痛苦的，困难的</li><li> miserable adj. 痛苦的，使人难受的</li><li> anguished adj. 极度痛苦的</li><li> grievous adj. 极其严重的，使人痛苦的</li><li> torturous adj. 折磨人的，痛苦的</li><li> bitter adj. 味苦的；痛苦的；严寒的</li><li> afflictive adj. 难受的；苦恼的；给人痛苦的</li><li> agony n. 剧痛，痛苦</li></ol><h3 id="18-讨厌的"><a class="markdownIt-Anchor" href="#18-讨厌的"></a> 18. 讨厌的</h3><ol><li>annoying adj. 令人恼火的，令人烦躁的</li><li> trying adj. 令人厌烦的，难对付的</li><li> disgusted n. 厌恶的，厌烦的</li><li> offensive adj. 冒犯的；令人讨厌的</li><li> unlovely adj. 讨人嫌的；不可爱的</li><li> disagreeable adj. 不愉快的；厌恶的</li><li> unpleasant adj. 讨厌的；不愉快的</li><li> bothersome adj. 令人讨厌的；麻烦的</li><li> loathsome adj. 可恶的；令人讨厌的</li><li> troublesome adj. 令人讨厌的；麻烦的，困难的</li><li> confounded adj. 讨厌的；困惑的</li><li> distasteful adj. 讨厌的，令人反感的</li><li> nasty adj. 恶毒的；令人厌恶的；严重的；下流的；丑陋的，难闻的</li></ol><h3 id="19-轻微的"><a class="markdownIt-Anchor" href="#19-轻微的"></a> 19. 轻微的</h3><ol><li>slight adj. 轻微的，少量的；瘦小的</li><li> mild adj.(伤病) 不严重的，轻微的</li><li> trivial 琐碎的，微不足道的；容易解决的</li><li> trifling adj. 微不足道的；轻浮的；闲聊</li><li> subtle adj. 微妙的；敏锐的；灵活的</li></ol><h3 id="20-虚弱的"><a class="markdownIt-Anchor" href="#20-虚弱的"></a> 20. 虚弱的</h3><ol><li>weak adj. 虚弱的，无力的；懦弱的</li><li> frail adj. 脆弱的；虚弱的；n. 少女</li><li> feeble adj. 虚弱的；软弱的；无效的</li><li> impotent adj. 无力的；无效的；虚弱的</li><li> debilitated adj. 操劳过度的；疲惫不堪的</li><li> tender adj. 脆弱的；温柔的；年幼的</li><li> brittle adj. 脆弱的，易碎的；易生气的</li><li> flimsy adj. 脆弱的；浅薄的；易损害的</li><li> vulnerable adj. 脆弱的；易受伤害的</li><li> dilicate adj. 脆弱的；柔和的；精致的</li><li> friable adj. 易碎的；脆弱的</li><li> susceptible adj. 易受影响的，易得病的；敏感的</li></ol><h3 id="21-多样的"><a class="markdownIt-Anchor" href="#21-多样的"></a> 21. 多样的</h3><ol><li>multiple adj. 多种的；多人共有的；</li><li>various adj. 多样的；迥异的，千差万别的</li><li> diverse adj. 各式各样的；不同的</li><li> diversiform adj. 多样的；各色各样的</li><li> manifold adj. 多种多样的，许多种类的</li><li> dynamic adj. 动态的，变化的</li></ol><h3 id="22-可疑的"><a class="markdownIt-Anchor" href="#22-可疑的"></a> 22. 可疑的</h3><ol><li>suspicious adj. 怀疑的；不信任的</li><li> dubious adj. 可疑的；有疑虑的</li><li> questionable adj. 可疑的；有问题的</li><li> doubtful adj. 怀疑的；未必的，不大可能的</li><li> skeptical adj. 不相信的，持怀疑态度的</li><li> incredulous adj. 怀疑的；不轻信的</li><li> uncertain adj. 不确定的；犹豫的</li><li> inconclusive adj. 不确定的；非决定性的</li><li> indeterminate adj. 不确定的；模糊的</li><li> dicey adj. 不确定的；认命的；危险的</li></ol><h3 id="23-察觉"><a class="markdownIt-Anchor" href="#23-察觉"></a> 23. 察觉</h3><ol><li>discern v. 觉察出；了解，认识</li><li> detect v. 察觉；测出，检测，识别</li><li> perceive v. 认为，理解；察觉，注意到</li><li> recognize v. 辨别出；承认，意识到；赞赏；表彰</li><li> realize v. 了解，意识到；发生；实现</li></ol><h3 id="24-暗示"><a class="markdownIt-Anchor" href="#24-暗示"></a> 24. 暗示</h3><ol><li>imply v. 暗示，暗指；意味着；必然包含</li><li> hint v. 暗示，示意；n. 征兆；少量；秘诀</li><li> suggest v. 建议；推荐；表明；暗示</li><li> indicate v. 表明；暗示；指出；示意</li><li> implicit adj. adj. 含蓄的，未言明的；内含的，固有的；无疑问的，无保留的</li><li> implication n. 可能的影响；含意，暗指；牵连，涉及</li></ol><h2 id="考研英语一义多词整理形容词和名词"><a class="markdownIt-Anchor" href="#考研英语一义多词整理形容词和名词"></a> 考研英语 “一义多词” 整理 —— 形容词和名词</h2><h3 id="1-有缺陷的不利的有害的"><a class="markdownIt-Anchor" href="#1-有缺陷的不利的有害的"></a> 1. 有缺陷的，不利的，有害的</h3><ol><li>defective adj. 有缺陷的，有问题的</li><li> deficient adj. 有缺陷的；不足的</li><li> disabled adj. 丧失能力的，残疾的</li><li> flawed adj. 有缺陷的；有瑕疵的</li><li> adverse adj. 不利的，有害的；相反的；敌对的</li><li> disadvantageous adj. 不利的；不便的；贬抑的</li><li> detrimental adj. 有害的，不利的</li><li> baleful adj. 恶意的，有害的</li><li> pernicious adj. 有害的；恶性的；致命的</li><li> noxious adj. 有害的；有毒的；道德败坏的；讨厌的</li></ol><h3 id="2-有利的有用的"><a class="markdownIt-Anchor" href="#2-有利的有用的"></a> 2. 有利的，有用的</h3><ol><li>useful adj. 有用的，有益的；熟练的</li><li> helpful adj. 有用的，有帮助的；愿意帮忙的</li><li> beneficial adj. 有利的，有益的</li><li> profitable adj. 有益的，有用的</li><li> rewarding adj. 有益的，有意义的；赚钱的，盈利的</li><li> advantageous adj. 有利的，有益的</li><li> further some adj. 有利的，鲁莽的</li><li> serviceable adj. 有用的，可供使用的；耐用的</li><li> available adj. 可用的；可获得的；可购得的</li><li> favorable adj. 有利的；良好的；赞成的；讨人喜欢的</li></ol><h3 id="3-巨大的-壮丽的"><a class="markdownIt-Anchor" href="#3-巨大的-壮丽的"></a> 3. 巨大的、壮丽的</h3><ol><li>huge adj. 极大的，庞大的；很受欢迎的，著名的</li><li> enormous adj. 极大的，巨大的；凶暴的，极恶的</li><li> tremendous adj. 极大的，巨大的；惊人的；极好的</li><li> colossal adj. 巨大的；异常的，非常的</li><li> immense adj. 极大的，巨大的；非常好；无边无际的</li><li> splendid adj. 极佳的，非常好的；壮丽的，辉煌的</li><li> imposing adj. 壮观的，仪表堂堂的</li><li> imperial adj. 帝国的，皇帝的；宏伟的，华丽的；专横的</li><li> magnificent adj. 宏伟的，壮丽的；令人印象深刻的，出色的；高尚的</li><li> glorious adj. 光荣的，值得称道的；辉煌的，绚丽的；极其愉快的</li><li> resounding adj. 巨大的，令人瞩目的；响亮的，嘹亮的</li><li> vast adj. 巨大的，大量的，广阔的</li><li> gaint adj. 巨大的，伟大的</li><li> gigantic adj. 巨大的，庞大的</li><li> grand adj. 宏伟的；壮丽的；傲慢的</li></ol><h3 id="4-重要的"><a class="markdownIt-Anchor" href="#4-重要的"></a> 4. 重要的</h3><ol><li>crucial adj. 至关重要的，决定性的；极好的</li><li> critical adj. 极其重要的，关键的；批判的；严重的</li><li> important adj. 重要的；权威的 ；自命不凡的</li><li> significant adj. 重要的；显著的；意味深长的</li><li> vital adj. 至关重要的；生死攸关的；有活力的</li><li> substantial adj. 重要的，大量的；牢固的；基本的</li><li> indispensable adj. 不可缺少的；绝对必要的</li><li> imperative adj. 必要的，不可避免的；紧急的；专横的</li><li> essential adj. 必不可少的，非常重要的；基本的；必需的</li><li> inevitable adj. 不可避免的，必然会发生的；必然的</li><li> momentous adj. 重要的，重大的；极其重要的</li></ol><h3 id="5-明显的明确的"><a class="markdownIt-Anchor" href="#5-明显的明确的"></a> 5. 明显的，明确的</h3><ol><li>obvious adj. 明显的，显然的；明确表示的；平淡无奇的</li><li> distinct adj. 不同的，有区别的；清楚的，明显的；确切的</li><li> evident adj. 清楚的，显然的</li><li> overt adj. 公开的，不隐瞒的</li><li> apparent adj. 显而易见的，易懂的；貌似的，表面上的</li><li> manifest adj. 明显的，显而易见的</li><li> clear adj. 明显的，明白的；清楚的；鲜明的</li><li> explicit adj. 清楚明白的，明确的；直截了当的</li><li> specific adj 明确的，具体的；特定的；独特的</li><li> straightforward adj. 简单易懂的；直截了当的；诚实的</li><li> definite adj. 清晰的，明晰的；肯定的；确定的</li><li> unambiguous adj. 不含糊的；清楚的；明白的</li></ol><h3 id="7-缺点"><a class="markdownIt-Anchor" href="#7-缺点"></a> 7. 缺点</h3><ol><li>defect n. 缺点，缺陷，毛病</li><li> flaw n. 瑕疵，缺点；裂缝</li><li> blemish n. 瑕疵；污点；缺点</li><li> drawback n. 缺点，不利条件；出口退税</li><li> disadvantage n. 缺点；不利条件；损失</li><li> weakness n. 缺点；虚弱；宠爱</li><li> shortcoming n. 缺点，短处</li><li> downside n. 负面，缺点；下降趋势</li><li> demerit n. 缺点，短处；过失</li><li> inferior position 劣势地位</li></ol><h3 id="8-优点"><a class="markdownIt-Anchor" href="#8-优点"></a> 8. 优点</h3><ol><li>advantage n. 优点；优势；利益</li><li> merit n. 优点；优秀品质；事实真相；善事</li><li> virtue n. 优点；美德；功效；高尚品德</li><li> benefit n. 好处、利益；救济金</li><li> upside n. 积极面；上涨</li><li> strength n. 优势；力量；实力；意志力；强度</li></ol><h2 id="易考态度词"><a class="markdownIt-Anchor" href="#易考态度词"></a> 易考 “态度” 词</h2><ol><li>indifferent 漠不关心的</li><li> disregardful 漠视的</li><li> supportive 支持的</li><li> indignant 愤怒的</li><li> apprehensive 忧虑的</li><li> comprehensive 综合的</li><li> trustworthy 可信的</li><li> contradictory 矛盾的</li><li> illuminating 启发的</li><li> superficial 肤浅的</li><li> gloomy 悲观的</li><li> pessimistic 悲观的</li><li> optimistic 乐观的</li><li> sensitive 敏感的</li><li> confused 困惑的</li><li> panicked 恐慌的</li><li> carefree 无忧无虑的</li><li> identical 相同的</li><li> opposite 相反的</li><li> complementary 补充的</li><li> complimentary 免费的；赞赏的</li><li> detached 中立的</li><li> tolerant 容忍的</li><li> enthusiasm 热情</li><li> accusation 谴责</li><li> contemptuous 轻蔑的</li><li> disparaging 蔑视的</li><li> appreciative 欣赏的</li><li> critical 批判的</li><li> uneasy 不安的</li><li> insulted 受辱的</li><li> enraged 愤怒的</li><li> guilty 内疚的</li><li> sarcastic 讽刺的</li><li> skeptical 怀疑的</li><li> subjective 主观的</li><li> objective 客观的</li><li> rosy 美好的</li><li> satisfaction 满意</li><li> sympathy 同情</li><li> biased 有偏见的</li><li> passionate 热情的</li><li> plausible 有道理的</li><li> positive 积极的</li><li> negative 消极的</li><li> desirable 合意的</li><li> discontent 不满意</li><li> dispassionate 冷静的，客观的</li><li> nonconformist 不随大流的</li><li> vicious 邪恶的，不道德的</li><li> compassionate 有同情心的</li></ol><h2 id="真题复合形容词"><a class="markdownIt-Anchor" href="#真题复合形容词"></a> 真题复合形容词</h2><ol><li>off-the cuff adj. 当场的，未经准备的，即兴的</li><li> light-hearted adj. 轻松的</li><li> well-worded adj. 措辞得当的</li><li> well-regarded adj. 受到好评的</li><li> well-meaning adj. 意图良好的</li><li> double-digit adj. 两位数的</li><li> energy-intensive adj. 能源密集型的</li><li> self-conscious adj. 局促不安的</li><li> middle-brow adj. （书籍、艺术等）品味一般的，平庸的</li><li> second-rate adj. 二等的；次等的</li><li> back-and-forthing n. 来回</li><li> field-study n. 现场研究，实地研究</li><li> in-house adj. 内部存在的，内部进行的</li><li> ill-treat v. 虐待，折磨</li><li> real-estate adj. 不动产的</li><li> well-regarded adj. 受到好评的</li><li> hotly contested adj. 竞争激烈的</li><li> money-oriented adj. 金钱至上的</li><li> self-interested adj. 自私的</li></ol><h2 id="真题名词短语"><a class="markdownIt-Anchor" href="#真题名词短语"></a> 真题名词短语</h2><ol><li><p>gloom and doom 厄运</p></li><li><p>these days 现今，目前</p></li><li><p>work folks 上班族</p></li><li><p>noble quality 高尚品质</p></li><li><p>ethical value 伦理价值</p></li><li><p>traditional virtue 传统美德</p></li><li><p>silver lining （绝望中的）一线希望</p></li><li><p>public figure 公众人物</p></li><li><p>power plants 发电厂</p></li><li><p>social ethos 社会风气</p></li><li><p>normal 正常的，平常的</p></li><li><p>common 常见的，共同的</p></li><li><p>mean 平均的</p></li><li><p>total 总的，全部的</p></li></ol><h2 id="2022英语一黄皮书模拟卷ii生僻词整理"><a class="markdownIt-Anchor" href="#2022英语一黄皮书模拟卷ii生僻词整理"></a> 2022 英语一黄皮书模拟卷 Ⅱ 生僻词整理</h2><h3 id="完型人类可能正在淘汰基因进化"><a class="markdownIt-Anchor" href="#完型人类可能正在淘汰基因进化"></a> 完型：人类可能正在淘汰基因进化</h3><ol><li>mate v. 分配</li><li> seize v. 夺取；攻占</li><li> suppress v. 抑制，阻止</li><li> regain v. 重新获得；恢复</li><li> bound v. 限制；捆绑；adj. 必然的</li><li> mutation n. 突变；变化</li><li> beehive n. 蜂窝；蜂巢</li><li> superorganism n. 超个体</li><li> convention n. 习俗；常规</li><li> organism n. 有机体；生物体</li><li> transition n. 过渡；转变；变革</li><li> inferior adj. 较差的；级别低的</li><li> detached adj. 超然的；冷漠的</li><li> ingenious adj. 心灵手巧的；机敏的</li><li> strictly adv. 只，仅限于</li><li> merely adv. 仅仅；只不过</li><li> scarcely adv. 勉强；几乎不</li><li> nearly adv. 几乎；差不多</li><li> collectively adv. 集体地；共同地</li><li> ant colony 蚁群</li><li> pass on 传递；转移</li><li> attach to 附属；依恋</li><li> derive from 源自；来源于</li><li> genetic mutation 基因突变</li><li> natural selection 自然选择</li><li> at the mercy of…… 受…… 支配</li></ol><h3 id="text1暂停covid-19疫苗知识产权的保护将适得其反"><a class="markdownIt-Anchor" href="#text1暂停covid-19疫苗知识产权的保护将适得其反"></a> Text1：暂停 Covid-19 疫苗知识产权的保护将适得其反</h3><ol><li>waiver n. 弃权</li><li> access n. 机会</li><li> rollout n. 推广</li><li> vaccine n. 疫苗</li><li> landscape n. 形势</li><li> consensu n. 共识</li><li> solidarity n. 团结</li><li> institution n. 机构</li><li> diplomacy n. 外交</li><li> landmark n. 里程碑</li><li> regime n. 管理体制</li><li> dispute n. 争端；纠纷</li><li> petition n. 请求；申请</li><li> formula n. 配方；处方</li><li> resentment n. 愤恨；怨恨</li><li> foot-dragging n. 拖延；懒散</li><li> pose v. 造成</li><li> suspend v. 暂停</li><li> undo v. 消除；废除</li><li> incur v. 招致；引起</li><li> spark v. 引发；触发</li><li> kickstart v. 启动；振兴</li><li> denounce v. 谴责；指责</li><li> robust adj. 强劲的</li><li> fruitless adj. 徒劳的</li><li> supposed adj. 所谓的</li><li> toothless adj. 没有权威的</li><li> surplus adj. 过剩的；剩余的</li><li> furious adj. 激烈的；猛烈的</li><li> chaotic adj. 混乱的；杂乱的</li><li> tamely adv. 乖巧地；温顺地</li><li> precisely adv. 精确地；正是</li><li> deliver on 履行</li><li> turning point 转折点</li><li> tech transfer 技术转让</li><li> trade barrier 贸易壁垒</li><li> be akin to 与…… 相似，像</li><li> legal negotiation 法律谈判</li><li> take effect 生效；开始实施</li><li> intellectual property 知识产权</li><li> an actual legal document 法律文件</li><li> a statement of principle 原则声明</li></ol><h3 id="text2把ai引入课堂要遵守的规则"><a class="markdownIt-Anchor" href="#text2把ai引入课堂要遵守的规则"></a> Text2：把 AI 引入课堂要遵守的规则</h3><ol><li>shovel n. 铲</li><li> output n. 产出</li><li> approach n. 态度</li><li> overrule v. 否决</li><li> deliver v. 讲；发表</li><li> impede v. 阻碍；阻止</li><li> uneven adj. 不均衡的</li><li> exclusive adj. 独有的</li><li> underlying adj. 根本的</li><li> rewarding adj. 有意义的</li><li> transparent adj. 透明的</li><li> sophisticated adj. 复杂的</li><li> draw up 制定</li><li> keep up to date with 跟上最新潮流</li></ol><h3 id="text3全国企业税困境的错误解决办法"><a class="markdownIt-Anchor" href="#text3全国企业税困境的错误解决办法"></a> Text3：全国企业税困境的错误解决办法</h3><ol><li>trem n. 条款</li><li> tariff n. 关税</li><li> spoil n. 战利品</li><li><strong> floor n. 最低额</strong></li><li> revene n. 收入</li><li> arbitrage n. 套利</li><li> proposal n. 计划</li><li> advocate n. 拥护者</li><li> collection n. 收取</li><li> bargain n. 协定；协议</li><li> compact n. 协定；协议</li><li> initiative n. 计划，新方案</li><li> jurisdiction n. 管辖区域；管辖范围</li><li> tap v. 利用，开发</li><li> draw v. 招引，吸引</li><li> specify v. 具体说明；明确规定</li><li> intangible adj. 无形的</li><li> domesic adj. 国内的</li><li> minimum adj. 最低的</li><li> promissible adj. 容许的</li><li> disproportionately adv. 不成比例地</li><li> corporate tax 企业税</li><li> lend oneself to 适合于</li><li> in it own right 就其本身而言</li><li> race to the bottom 逐底竞争</li></ol><h3 id="text4碳边境税正当合理却也带来了巨大风险"><a class="markdownIt-Anchor" href="#text4碳边境税正当合理却也带来了巨大风险"></a> Text4：碳边境税正当合理却也带来了巨大风险</h3><ol><li>cement n. 水泥</li><li> cap n. 最高限额</li><li> subsidy n. 补贴</li><li> fertiliser n. 肥料</li><li> rival n. 竞争对手</li><li> penalty n. 惩罚；处罚</li><li> scheme n. 体系；体制</li><li> precedent n. 先例；前例</li><li> levy v. 征（税）</li><li>impose v. 强制推行</li><li> subsidise v. 补贴</li><li> unveil v. 将… 公之于众</li><li> asertain v. 弄清；确定</li><li> align v. 与… 结盟；使一致</li><li> outcompete v. 超过；胜出</li><li> undercut v. 削价竞争；以低于（竞争对手）的价格做生意</li><li> flat adj. 固定的</li><li> offshore adj. 国外的</li><li> intensive adj. 密集的</li><li> punitive adj. 惩罚性的</li><li> defensible adj. 有正当理由的</li><li> arbitrary adj. 任意的；武断的</li><li> commonplace adj. 常见的；普遍的</li><li> minimum adj. 最低的；最低限度的</li><li> pipe dream 白日梦；幻想</li><li> by vitue of 因为，由于</li><li> carbon intensity 碳浓度</li><li> practical and effective 切实有效的</li></ol><h3 id="七选五如何察觉抵御并反抗虚假信息"><a class="markdownIt-Anchor" href="#七选五如何察觉抵御并反抗虚假信息"></a> 七选五：如何察觉抵御并反抗虚假信息</h3><ol><li>antibody n. 抗体</li><li> metaphor n. 隐喻</li><li> institution n . 制度</li><li> dynamic n . 变化动态</li><li> susceptibility n. 易受影响的特性</li><li> nudge v. 轻推</li><li> insulate v. 隔离</li><li> dam v. 阻止；控制</li><li> immunize v. 使免疫</li><li> prioritize v. 优先处理</li><li> compound v. 使加重</li><li> bebunk v. 揭穿…… 的真相</li><li> cognitive adj. 认知的</li><li> insidious adj. 暗中为害的</li><li> sheer adj. 数量大的；完全的</li><li> self-reinforcing adj. 自我强化的</li><li> unwittingly adv. 糊里制涂地</li><li> fall for sth 对…… 信以为真</li><li> scroll through sth 浏览某物</li><li> in a quest for sth 追求某事物</li><li> a bad actor 不择手段的危险人物</li><li> be aligned with sth 与来事物一致</li><li> churn out sth (粗制滥造地) 大量炮制</li><li> prompt sb to do sth 促使某人做某事</li><li> take an enormous toll on sth 对某事物造成巨大损害</li></ol><h2 id="英语完形填空中近义词组整理"><a class="markdownIt-Anchor" href="#英语完形填空中近义词组整理"></a> 英语完形填空中近义词组整理</h2><h3 id="辨别"><a class="markdownIt-Anchor" href="#辨别"></a> 辨别</h3><ol><li>distinguish 辨别；看清，认出</li><li> discover 发现；了解到，发觉</li><li> determine 查明，确定，测定</li><li> detect 发觉，察觉</li></ol><h3 id="个人"><a class="markdownIt-Anchor" href="#个人"></a> 个人</h3><ol><li>group 团体，组，群，批</li><li> individual 个人</li><li> personnel 全体人员；人事部门</li><li> corporation 公司；法人；法人团体</li></ol><h3 id="居民"><a class="markdownIt-Anchor" href="#居民"></a> 居民</h3><ol><li>inhabitant （某区域内常住）居民</li><li> native 本地人，当地人</li><li> people 民族，种族，部落</li><li> individual 个人；有某种特点的人</li></ol><p>### 膨胀</p><ol><li>inflate 膨胀，涨价</li><li> expand 扩大，增加</li><li> increase 增加</li><li> extend 延伸</li></ol><p>◇——◇——◇——◇</p><p>### 独特的 or 共同的</p><ol><li>unique 独特的</li><li> common 共同的</li><li> particular 特指的</li><li> typical 典型的</li></ol><h3 id="联系"><a class="markdownIt-Anchor" href="#联系"></a> 联系</h3><ol><li>link 联系，连结</li><li> woven 编；编织</li><li> integrate 使合并，使结合</li><li> combine 结合，组合</li></ol><p>### 方法</p><ol><li>mean 方法，手段，工具</li><li> method 方法，条理</li><li> medium 媒介，手段</li><li> measure 措施，手段，策略</li></ol><h3 id="能力"><a class="markdownIt-Anchor" href="#能力"></a> 能力</h3><ol><li>ability 能力，本领</li><li> capability 能力，才能</li><li> capacity 容量；领悟能力</li><li> faculty 天赋</li></ol><h3 id="环境"><a class="markdownIt-Anchor" href="#环境"></a> 环境</h3><ol><li>context 环境，背景</li><li> range 范围 (活动 / 责任)，幅度</li><li> scope 范围 (研究事物)；机会，余地</li><li> territory 领土，版图；领域</li></ol><h3 id="对象"><a class="markdownIt-Anchor" href="#对象"></a> 对象</h3><ol><li>test 实验，检验</li><li> object 物体，目标</li><li> sample 样本</li><li> example 事例；典范，模范</li></ol><h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3><ol><li>requirement 所需的东西；要求，必要条件</li><li> explanation 解释，说明</li><li> account 描述，叙述，说明</li><li> assessment 评估，评价，鉴定</li></ol><p>◇——◇——◇——◇</p><h3 id="意识观点"><a class="markdownIt-Anchor" href="#意识观点"></a> 意识 (观点)</h3><ol><li>awareness 意识</li><li> expectation 预期</li><li> sentiment 观点</li><li> illusion 错觉</li></ol><p>◇——◇——◇——◇</p><h3 id="意识"><a class="markdownIt-Anchor" href="#意识"></a> 意识</h3><ol><li>physical 身体的</li><li> mental 心理的，精神的</li><li> subconscious 潜意识的</li><li> internal 内心的</li><li> external 外观的</li></ol><p>◇——◇——◇——◇</p><h3 id="找出"><a class="markdownIt-Anchor" href="#找出"></a> 找出</h3><ol><li>figure out 理解，弄明白；算出</li><li> find out 找出，发现</li><li> point out 指出，指明</li><li> turn out 结果是，被证明是</li></ol><h3 id="灵活性"><a class="markdownIt-Anchor" href="#灵活性"></a> 灵活性</h3><ol><li>stability 稳定性</li><li> flexibility 灵活性</li><li> sharpness 灵敏度，清晰度</li><li> framework 框架，构架</li></ol><h3 id="会议"><a class="markdownIt-Anchor" href="#会议"></a> 会议</h3><ol><li>association 关联，联系</li><li> meeting 会议；相遇，会面</li><li> collection 收集，采集；聚集</li><li> union 结合；婚姻</li></ol><blockquote><p>以上来自知乎大佬 - <a class="link" href="https://www.zhihu.com/people/mu-yu-58-20-31">沐雨的笔记<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="英语形容词分类汇总"><a class="markdownIt-Anchor" href="#英语形容词分类汇总"></a> 英语形容词分类汇总</h2><h3 id="一-前缀派生形容词"><a class="markdownIt-Anchor" href="#一-前缀派生形容词"></a> 一、前缀派生形容词</h3><h4 id="1由il-im-in-或ir-前缀构成的形容词"><a class="markdownIt-Anchor" href="#1由il-im-in-或ir-前缀构成的形容词"></a> 1. 由 il-，im-，in - 或 ir - 前缀构成的形容词</h4><p>illegal 非法的 impossible 不可能的</p><p>incorrect 不正确的 independent 独立的</p><p>irregular 不规则的，不规律的 irrelevant 不相干的，离题的</p><p>irresponsible 无责任感的</p><h4 id="2由non-前缀构成的形容词"><a class="markdownIt-Anchor" href="#2由non-前缀构成的形容词"></a> 2. 由 non - 前缀构成的形容词</h4><p>non-stop 中途不停的 non-violent 非暴力的</p><h4 id="3由un-前缀构成的形容词"><a class="markdownIt-Anchor" href="#3由un-前缀构成的形容词"></a> 3. 由 un - 前缀构成的形容词</h4><p>unable 不能的，不能胜任的 unbearable 难耐的，无法接受的</p><p>unbelievable 难以置信的 uncertain 不确定的</p><p>unconditional 人不舒服的 unconscious 昏迷的，不省人事的</p><p>unconditional 无条件，绝对的 undivided 没分开的；专一的</p><p>unfair 不公平的，不公正的 unfit 不合宜的，不相宜的</p><p>unfortunate 不幸的 unhappy 不开心的</p><p>unhealthy 不健康的，不卫生的 unimportant 不重要的</p><p>unknown 不知道的 unmarried 未婚的，独身的</p><p>unpleasant 使人不愉快的 unsafe 不安全的，危险的</p><p>unsuccessful 不成功的，失败的 untrue 不真实的，假的</p><p>unusual 不平常的，异常的 unwilling 不愿意的，勉强的</p><h3 id="二-后缀派生形容词"><a class="markdownIt-Anchor" href="#二-后缀派生形容词"></a> 二、后缀派生形容词</h3><h4 id="1由-able-或-ible后缀构成的形容词"><a class="markdownIt-Anchor" href="#1由-able-或-ible后缀构成的形容词"></a> 1. 由 - able 或 - ible 后缀构成的形容词</h4><p>able 能够；有能力的 accessible 可到达的，可接受的</p><p>admirable 值得赞赏的，可钦佩的 available 可获得的；闲置的</p><p>comfortable 舒服的，安逸的 enjoyable 愉快的；有趣的</p><p>flexible 灵活的，可变动的 horrible 令人恐惧的</p><p>portable 手提的，便携式的 possible 可能的</p><p>probable 很可能的，很有希望的 reasonable 合乎情理的</p><p>reliable 可信赖的，可依靠的 stable 稳固的，牢固的</p><p>suitable 合适的，适宜的 terrible 可怕的，糟糕的</p><p>valuable 值钱的，贵重的</p><h4 id="2由-al后缀构成的形容词"><a class="markdownIt-Anchor" href="#2由-al后缀构成的形容词"></a> 2. 由 - al 后缀构成的形容词</h4><p>abnormal 反常的，变态的 actual 实际的，现实的</p><p>agricultural 农业的 annual 每年的，年度的</p><p>casual 漫不经心的 central 中心的，中央的</p><p>conventional 依照惯例的 digital 数字的，数码的</p><p>equal 平等的 federal 中央的</p><p>festival 节日的，喜庆的 final 最后的，终极的</p><p>fundamental 十分重大的，根本的 general 大体上的，笼统的</p><p>legal 与法律有关的 mental 精神的，脑力的</p><p>metal 金属制成的，金属的 moral 道德的</p><p>national 国家的；民族的 natural 自然的</p><p>normal 正常的 optional 可选择的，选修的</p><p>oral 口述的，口头上的 oval 椭圆形的</p><p>personal 个人的，私人的 punctual 准时的，守时的</p><p>royal 皇家的，王室的 spiritual 精神的，心灵的</p><p>total 总数的；完全的 traditional 传统的，风俗的</p><p>usual 通常的，平常的 visual 必不可少的，对… 极重的</p><h4 id="3由-cal后缀构成的形容词"><a class="markdownIt-Anchor" href="#3由-cal后缀构成的形容词"></a> 3. 由 - cal 后缀构成的形容词</h4><p>botanical 植物学的，植物的 chemical 化学的</p><p>classical 传统的；古典的 electrical 电的；电器的</p><p>local 当地的，地方的 medical 医学的，医疗的</p><p>musical 音乐的 physical 身体的；物理的</p><p>political 政治的 practical 实际的，适用的</p><p>sceptical 怀疑的 technical 技术的，工艺的</p><p>theoretical 理论的 typical 典型的，有代表性的</p><p>vertical 垂直的，纵向的</p><h4 id="4由-ial后缀构成的形容词"><a class="markdownIt-Anchor" href="#4由-ial后缀构成的形容词"></a> 4. 由 - ial 后缀构成的形容词</h4><p>artificial 人工的，人造的 beneficial 有利的，有帮助的</p><p>commercial 毛衣的，商业的 confidential 机密的，保密的</p><p>controversial 引起争论的，有争议的 facial 面部用的；脸的</p><p>initial 开始的，最初的 official 官方的，政府的；正式的</p><p>racial 种族的 social 社会的，社交的</p><p>special 特别的，专门的</p><h4 id="5由-ant后缀构成的形容词"><a class="markdownIt-Anchor" href="#5由-ant后缀构成的形容词"></a> 5. 由 - ant 后缀构成的形容词</h4><p>abundant 大量的，丰盛的 brilliant 巧妙地，技艺高的</p><p>constant 经常的 distant 远的，遥远的</p><p>elegant 文雅的，漂亮的 fragrant 香的，芳香的</p><p>important 重要的 instant 即时的；紧迫的；方便的</p><p>merchant 商业的；商人的 pleasant 令人愉快的，舒适的</p><p>pregnant 怀孕的 relevant 相关的；切题的</p><p>vacant 空缺的，未被占用的</p><h4 id="6由-ent-后缀构成的形容词"><a class="markdownIt-Anchor" href="#6由-ent-后缀构成的形容词"></a> 6. 由 - ent 后缀构成的形容词</h4><p>absent 缺席的，不在的 ancient 古代的，古老的</p><p>apparent 显而易见的 confident 自信的，有自信的</p><p>consistent 一致的，始终如一的 convenient 便利的，方便的</p><p>different 不同的，有差异的 evident 清楚地，显而易见的</p><p>excellent 极好的，优秀的 fluent 流利的</p><p>frequent 经常的，频繁的 innocent 无辜的，清白的</p><p>permanent 永久的，永恒的 present 出现的，出席的</p><p>silent 无声的，无对话的 transparent 透明的，清澈的</p><p>urgent 紧急的，紧迫的 violent 暴力的</p><h4 id="7由-ate后缀构成的形容词"><a class="markdownIt-Anchor" href="#7由-ate后缀构成的形容词"></a> 7. 由 - ate 后缀构成的形容词</h4><p>adequate 合适的；合乎情理的 appropriate 合适的，恰当的</p><p>considerate 体贴的，关心 delicate 易损的，易碎的</p><p>desperate 不惜冒险的 favourite 幸运的，侥幸的</p><p>immediate 立即的 late 晚的，迟的</p><p>private 私人的</p><h4 id="8由-ic后缀构成的形容词"><a class="markdownIt-Anchor" href="#8由-ic后缀构成的形容词"></a> 8. 由 - ic 后缀构成的形容词</h4><p>academic 学术的，教学的 alcoholic 含酒精的</p><p>allergic 过敏的；厌恶的 athletic 健壮的；体育运动的</p><p>authentic 真正的 automatic 自动的，机械的</p><p>basic 基本的 bureaucratic 官僚的</p><p>catholic 天主教的 characteristic 典型的，独特的</p><p>classic 一流的，经典的；有代表性的 cubic 立方体的，立方形的</p><p>dynamic 充满活力的 electric 用电的，点动的</p><p>electronic 电子的 energetic 电子的</p><p>energetic 精力旺盛的 enthusiastic 热情的，热心的</p><p>fantastic 极好的，美妙的 magic 有魔力的；不可思议的</p><p>olympic 奥林匹克的 optimistic 乐观的</p><p>panic 惊慌的，惶恐不安的 plastic 塑料的</p><p>public 公共的，公众的 scientific 科学的</p><p>specific 明确的，具体的；独特的 systematic 系统的，有条理的</p><h4 id="9由-ive后缀构成的形容词"><a class="markdownIt-Anchor" href="#9由-ive后缀构成的形容词"></a> 9. 由 - ive 后缀构成的形容词</h4><p>active 积极的 aggressive 侵略的；咄咄逼人的</p><p>alternative 可供替代的 attractive 迷人的，有吸引力的</p><p>conservative 保守的，守旧的；谨慎的 expensive 昂贵的</p><p>native 本土的，本国的 passive 被动的</p><p>primitive 原始的，远古的 radioactive 放射性的</p><p>sensitive 敏感的，感觉敏锐的 subjective 主观的</p><p>tentative 试验性的</p><h4 id="10由-less后缀构成的形容词"><a class="markdownIt-Anchor" href="#10由-less后缀构成的形容词"></a> 10. 由 - less 后缀构成的形容词</h4><p>breathless 气喘吁吁的，上气不接下气的 careless 粗心的，漫不经心的</p><p>cordless 无线的 endless 无止境的，没有劲头的</p><p>harmless 无害的，不致伤的 hopeless 没有希望的，不可救药的</p><p>regardless 不顾，不加理会 stainless 无污点的</p><p>useless 无用的 worthless 没有价值的，没有用的</p><h4 id="11由-ous后缀构成的形容词"><a class="markdownIt-Anchor" href="#11由-ous后缀构成的形容词"></a> 11. 由 - ous 后缀构成的形容词</h4><p>ambiguous 模棱两可的 anxious 忧虑的，焦虑的</p><p>autonomous 自治的，自主的 cautious 小心的，谨慎的</p><p>curious 好奇的；奇异的 dangerous 危险的</p><p>delicious 美味的，可口的 famous 著名的</p><p>generous 慷慨大方的 humorous 富于幽默的</p><p>mountainous 多山的 nervous 紧张不安的</p><p>obvious 显然的，明显的 poisonous 有毒的，致命的</p><p>precious 宝贵的，珍贵的 religious 宗教的</p><p>ridiculous 荒谬的，愚蠢的 serious 严肃的，严重的</p><p>various 各种各样的</p><h4 id="12由-y-后缀构成的形容词"><a class="markdownIt-Anchor" href="#12由-y-后缀构成的形容词"></a> 12. 由 - y 后缀构成的形容词</h4><p>angry 生气的，愤怒的 busy 忙的，繁忙的</p><p>clumsy 笨拙的，不灵巧的 cosy 暖和舒适的；紧密无间的</p><p>crazy 疯狂的 dirty 脏的</p><h2 id="英语写作高级替换词"><a class="markdownIt-Anchor" href="#英语写作高级替换词"></a> 英语写作高级替换词</h2><p>夸大：exaggerate 替换词：overstate</p><p>抵消：counteract 替换词：offset, cancel out</p><p>拆除：tear down 替换词：knock down, pull down</p><p>加速：accelerate 替换词：speed up, precipitate</p><p>占优势：predominate 替换词：dominate</p><p>分辨：distinguish 替换词：differentiate, discern</p><p>开展：launch 替换词：conduct, carry out</p><p>承担：assume 替换词：shoulder, accept</p><p>颁布，制定：enact 替换词：enforce, promulgate, map out</p><p>影响：influence 替换词：impact, pervade</p><p>差异：difference 替换词：distinction, gap</p><p>交流：communicate 替换词：exchange, associate</p><p>接触：have access to 替换词：make contact with, keep in touch with</p><p>优先：give priority to 替换词：put…into first place</p><p>节约：economize 替换词：conserve, cherish</p><p>面临：be faced with 替换词：be confronted with</p><p>注意：beware 替换词：prevent, guard against</p><p>腐蚀：erode 替换词：wear away, corrode</p><p>欺骗：deceive 替换词：cheat, defraud</p><p>冲突：conflict 替换词：shock, tension</p><p>驱使：prompt 替换词：spur, incite</p><p>贪婪的：acquisitive 替换词：money-oriented, materialistic</p><p>自私的：self-centered 替换词：selfish, inconsiderate</p><p>体谅的：considerate 替换词：understanding, sympathetic</p><p>冷漠的：indifferent 替换词：apathetic, aloof</p><p>奢侈的：wasteful 替换词：luxurious, extravagant</p><p>过分的：excessive 替换词：extravagant, exorbitant</p><p>激烈的：intense 替换词：fierce, vigorous</p><p>严厉的：stringent 替换词：rigorous, rigid</p><p>难以置信的：unbelievable 替换词：incredulous, virtual</p><p>惊人的：extraordinary 替换词：marvelous, spectacular</p><p>有抱负的：ambitious 替换词：aggressive, aspirant</p><p>固有的：inherent 替换词：nature, innate</p><p>稳定的：steady 替换词：stable, constant</p><blockquote><p>以上来自知乎大佬 - <a class="link" href="https://www.zhihu.com/people/he-cheng-xiao-ying">饭团英语<i class="fas fa-external-link-alt"></i></a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;考研英语词</summary>
      
    
    
    
    <category term="基础知识" scheme="https://couriourc.github.io/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="单词" scheme="https://couriourc.github.io/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%8D%95%E8%AF%8D/"/>
    
    <category term="english" scheme="https://couriourc.github.io/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%8D%95%E8%AF%8D/english/"/>
    
    
    <category term="总结" scheme="https://couriourc.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="考研" scheme="https://couriourc.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
    <category term="English" scheme="https://couriourc.github.io/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>数据结构总结 - 线性表</title>
    <link href="https://couriourc.github.io/posts/a4b89f58.html"/>
    <id>https://couriourc.github.io/posts/a4b89f58.html</id>
    <published>2022-10-03T10:52:41.000Z</published>
    <updated>2022-10-24T08:01:21.257Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css"><h1 id="线性表-linear"><a class="markdownIt-Anchor" href="#线性表-linear"></a> 线性表 - Linear</h1><div class="markmap-container" style="height:500px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;线性表&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;顺序存储&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;<a href=\&quot;#顺序表\&quot;>顺序表</a>&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;链式存储-<a href=\&quot;#链表\&quot;>链表</a>&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;单链表&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;双链表&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;循环链表&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;静态链表&quot;}]}]}"></svg></div><h2 id="线性表的定义和操作"><a class="markdownIt-Anchor" href="#线性表的定义和操作"></a> 线性表的定义和操作</h2><h3 id="线性表的定义"><a class="markdownIt-Anchor" href="#线性表的定义"></a> 线性表的定义</h3><p>线性表是具有<u style="color: red;"><strong>相同</strong></u>的数据类型的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>≥</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n \ge 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 个<u style="color: red;"><strong>有限序列</strong></u></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L = (a_{1},....a_{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是唯一的 “第一个” 数据元素，又称<u style="color:red;"><strong>表头元素</strong></u>， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是唯一的 “最后一个” 数据元素，又称<u style="color:red;"><strong>表尾元素</strong></u>。除了<strong>表头元素</strong>，每个元素都有唯一的前驱。除了<strong>表尾元素</strong>，每一个元素都有唯一的后驱。以上就是线性表的<strong>逻辑特性</strong>。由此得到线性表的特点如下：</p><ol><li>表中元素的个数有限</li><li>表中元素具有逻辑上的顺序性</li><li>表中元素都是数据元素，每个元素都是单个元素</li><li>表中元素数据类型都相同，意味着每一个元素都占有相同大小的存储空间</li><li>表中元素具有抽象性，即仅讨论元素间的逻辑关系，而不考虑表示什么内容</li></ol><blockquote><p>👿线性表是一种逻辑结构，表示元素之间一对一的相邻关系。顺序表和链表是指存储结构，是不同的概念。顺序表强调了内存上的关系。</p></blockquote><h3 id="线性表的基本操作"><a class="markdownIt-Anchor" href="#线性表的基本操作"></a> 线性表的基本操作</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">// 为线性表分配空间</span><span class="token keyword">void</span> <span class="token function">InitList</span><span class="token punctuation">(</span><span class="token keyword">auto</span> <span class="token operator">&amp;</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取表长</span><span class="token keyword">int</span> <span class="token function">Length</span><span class="token punctuation">(</span><span class="token keyword">auto</span> L<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 查找元素</span><span class="token keyword">void</span> <span class="token function">LocateElem</span><span class="token punctuation">(</span><span class="token keyword">auto</span> L<span class="token punctuation">,</span><span class="token keyword">auto</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">auto</span> <span class="token function">GetElem</span><span class="token punctuation">(</span><span class="token keyword">auto</span> L<span class="token punctuation">,</span><span class="token keyword">auto</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 添加元素</span><span class="token keyword">auto</span> <span class="token function">ListInsert</span><span class="token punctuation">(</span><span class="token keyword">auto</span> <span class="token operator">&amp;</span>L<span class="token punctuation">,</span><span class="token keyword">auto</span> i<span class="token punctuation">,</span><span class="token keyword">auto</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 删除元素</span><span class="token keyword">auto</span> <span class="token function">ListDelete</span><span class="token punctuation">(</span><span class="token keyword">auto</span> <span class="token operator">&amp;</span>L<span class="token punctuation">,</span><span class="token keyword">auto</span> i<span class="token punctuation">,</span><span class="token keyword">auto</span> <span class="token operator">&amp;</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输出操作</span><span class="token keyword">void</span> <span class="token function">PrintList</span><span class="token punctuation">(</span><span class="token keyword">auto</span> L<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 判空</span><span class="token keyword">void</span> <span class="token function">Empty</span><span class="token punctuation">(</span><span class="token keyword">auto</span> L<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 销毁列表，归还空间</span><span class="token keyword">void</span> <span class="token function">DestroyList</span><span class="token punctuation">(</span><span class="token keyword">auto</span> <span class="token operator">&amp;</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>🍨对于线性表的各个类型的优势缺点，可以从 <strong>查找</strong> 和 <strong>增加删除</strong> 几个角度来分析。</p></blockquote><div class="markmap-container" style="height:300px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;线性表&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;值得注意的事项&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;数据元素<strong style=\&quot;color:red;\&quot;>同类型、有限、有序</strong>&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;重要术语&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;表头、空表&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;表头、表尾&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;前驱、后继&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;数据元素的位序&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;基本操作&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;创建、销毁、增删改查（所有数据结构使用的记忆思路）&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;判空、判长、打印输出&quot;}]}]}"></svg></div><h2 id="顺序表"><a class="markdownIt-Anchor" href="#顺序表"></a> 顺序表</h2><p>线性表的 <strong style="color:red;"><u>顺序存储</u></strong> 又称顺序表。他是用一组地址连续的存储单元 <strong style="color:red;"> <u>依次</u></strong> 存储线性表中的数据元素，从而使得逻辑上相邻的两个元素在物理位置上也相邻。第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 个元素存储在线性表的起始位置，第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个元素的存储位置后紧接着就是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 个元素，称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为在线性表中的 <dfn style="color:blue;">位序</dfn>。因此，顺序表的特点是表中元素的逻辑顺序与其存储物理顺序相同。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo><mo>+</mo><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mi>o</mi><mi>f</mi><mo stretchy="false">(</mo><mi>E</mi><mi>l</mi><mi>e</mi><mi>m</mi><mi>T</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">Loc(i) = Loc(0) + sizeof(ElemType)*i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">o</span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">o</span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathnormal">e</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span></span></p><blockquote><p>🤖 线性表中的元素的位序是从 <strong>1</strong> 开始的，而数组中元素的位序是从 <strong>0</strong> 开始的</p></blockquote><p>一维数组可以是<strong>静态分配</strong>的，也可以是<strong>动态分配</strong>的。</p><ul><li><p><strong>静态分配</strong>的时候，由于数组大小和空间事先固定，一旦空间占满，再加入新的数据就会产生溢出，进而导致程序崩溃。</p></li><li><p><strong>动态分配</strong>的时候，存储数组的空间是在执行过程中确认的，一旦数据空间占满了，就另外开辟一块更大的空间，用以替换原来的空间，从而达到扩充数组的目的，而不需要为线性表一次性划分所有的空间。</p><ul><li><code>cLang</code> 使用 <code>malloc</code>、<code>free</code> 来申请或者释放空间</li><li><code>cpp</code> 可以使用 <code>new</code> ,<code>delete</code> 来申请或者释放空间</li></ul><blockquote><p>🚨 注意<strong>动态分配</strong>并不是链式存储，它同样属于顺序存储结构，物理结构并没有发生变化， 依然是随机读取的方式，只是分配的空间大小可以在运行时动态决定。</p></blockquote></li></ul><h3 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h3><ul><li>主要特点是随机读取，可以通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 内通过首地址和元素序号找到指定的元素。</li><li>存储密度高，每个节点只存储数据元素</li></ul><h3 id="缺点"><a class="markdownIt-Anchor" href="#缺点"></a> 缺点</h3><ul><li>逻辑上相邻的元素物理上也相邻，所以插入元素和删除元素需要移动大量的元素</li></ul><p>假定顺序表的元素类型为 <code>ElemType</code>，则线性表的顺序存储类型描述为：</p><h4 id="基本操作的实现"><a class="markdownIt-Anchor" href="#基本操作的实现"></a> 基本操作的实现</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdbool.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">Maxsize</span> <span class="token expression"><span class="token number">9999</span> </span><span class="token comment">// 线性表定义的最大长度</span></span><span class="token keyword">typedef</span> <span class="token keyword">int</span> ElemType<span class="token punctuation">;</span><span class="token comment">// 静态分配</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>    ElemType data<span class="token punctuation">[</span>Maxsize<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 顺序表的元素</span>    <span class="token keyword">int</span> length<span class="token punctuation">;</span> <span class="token comment">// 表长</span><span class="token punctuation">}</span> Sqlist<span class="token punctuation">;</span> <span class="token comment">// 类型定义</span><span class="token comment">// 动态分配</span><span class="token comment">/***typedef struct {*   ElemType *data;*   int length;*} Sqlist;*/</span><span class="token comment">// 基本操作 - 初始化一个顺序表</span><span class="token keyword">void</span> <span class="token function">InitList</span><span class="token punctuation">(</span>Sqlist <span class="token operator">*</span>L<span class="token punctuation">)</span> <span class="token punctuation">{</span>    L<span class="token operator">-&gt;</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 顺序表初始长度为 0</span>    <span class="token comment">// 动态分配的时候为数组申请内存空间</span>    <span class="token comment">// L.data = (ElemType *)malloc(sizeof(ElemeType) * Maxsize);</span>    <span class="token comment">// 如果对于 CPP</span>    <span class="token comment">// L.data = new ElemType[Maxsize];</span><span class="token punctuation">}</span><span class="token comment">// 插入操作</span><span class="token comment">/** @descriptor: 因为本人考 C Lang 所以用 C 的语法来写了* @param { Sqlist } L  :操作的数组* @param { int } index :插入的位序* @param { ElemType } target :插入的对象* @return {bool} : 插入成功就返回 true,如果出现空间已经被占满,就不能继续插入**/</span><span class="token keyword">bool</span> <span class="token function">ListInsert</span><span class="token punctuation">(</span>Sqlist <span class="token operator">*</span>L<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">,</span> ElemType target<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 插入的位置根本不在考虑范围内</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> index <span class="token operator">&gt;</span> L<span class="token operator">-&gt;</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token comment">// 如果”上头“插入过多了</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>L<span class="token operator">-&gt;</span>length <span class="token operator">&gt;=</span> Maxsize<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token comment">// 迭代查询到需要插入的位置，然后让这个位置的后面元素后面移</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> L<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> index<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        L<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> L<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// or L.data[index-1] = target;</span>    L<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">;</span>    L<span class="token operator">-&gt;</span>length<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 删除操作</span><span class="token comment">/** @descriptor: 因为本人考 C Lang 所以用 C 的语法来写了* @param { Sqlist } L  :操作的数组* @param { int } index :删除的位序* @param { ElemType } value :被删除的元素放在的地方* @return {bool} : 删除成功就返回 true,如果不合法,就不能删除**/</span><span class="token keyword">bool</span> <span class="token function">ListDelete</span><span class="token punctuation">(</span>Sqlist <span class="token operator">*</span>L<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">,</span> ElemType <span class="token operator">*</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 判断是否合法</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> index <span class="token operator">&gt;</span> L<span class="token operator">-&gt;</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token operator">*</span>value <span class="token operator">=</span> L<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// 遍历 比如要删除第二个元素，index = 2</span>    <span class="token comment">// [ null, 1, 2, 3 ]</span>    <span class="token comment">// [ null, 1, 3,   ]</span>    <span class="token comment">// 这里取到的 i - 1 ，应该是王道书给到的位序在这里用的是位序为 1，但是是按照数组 </span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> L<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        L<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> L<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    L<span class="token operator">-&gt;</span>length<span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 按值查找</span><span class="token comment">/*** @param { Sqlist } L  :操作的数组* @param { ElemType } value :被删除的元素放在的地方* @return {int} : 如果为 0 说明查找失败，需要注意的是 位序=索引+1**/</span><span class="token keyword">int</span> <span class="token function">LocateElem</span><span class="token punctuation">(</span>Sqlist <span class="token operator">*</span>L<span class="token punctuation">,</span>ElemType e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 进入循环查找</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>L<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> L<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> e <span class="token punctuation">)</span> <span class="token keyword">return</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 函数入口</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Sqlist <span class="token operator">*</span>L<span class="token punctuation">;</span>    <span class="token function">InitList</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 尝试”违规“打印出 data 数据，也就是溢出打印。</span>    <span class="token comment">// 超出 MaxSize 之后，就会出现莫名奇妙的数字（其实就是地址） </span>    <span class="token comment">/*for (int i = 0; i&lt;Maxsize+2 ; i++) {    *  printf("data[%d]=%d\n",i,L.data[i]);      * }    */</span>    <span class="token comment">// 纠正：👇</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> L<span class="token operator">-&gt;</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"data[%d]=%d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> L<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="插入情况分析"><a class="markdownIt-Anchor" href="#插入情况分析"></a> 插入情况分析</h5><ul><li><p>最好情况：直接表尾插入，不需要移动元素，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></li><li><p><strong>最坏情况</strong>：需要在表头插入，需要移动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 个元素，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></li><li><p><strong>平均情况</strong>：假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P_{i} = \frac {1} {(n+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>是在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个元素上插入一个节点的概率，则在长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 的线性表中插入一个结点时所需要移动的结点的平均次数（数学期望 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">Ex</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">x</span></span></span></span>）为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></munderover><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></munderover><mfrac><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>∗</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>∗</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></munderover><mo>−</mo><mi>i</mi><mo>=</mo><mfrac><mi>n</mi><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{n+1} p_{i}(n-i+1)= \sum_{i=1}^{n+1} \frac {(n-i+1)} {n+1}= \frac {n+1} {n+1} *\frac {1} {n+1}*\sum_{i=1}^{n+1} -i=  \frac {n} {2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>因此，顺序表插入算法的平均时间复杂度是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O({n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span></span><span class="mclose">)</span></span></span></span></p></li></ul><h5 id="删除操作情况分析"><a class="markdownIt-Anchor" href="#删除操作情况分析"></a> 删除操作情况分析</h5><p>描述：删除顺序表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span></span></span></span> 中第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个位置的元素，用引用变量 e 返回。若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 的输入不合法，则返回 <code>false</code>；否则，将被删的元素赋给 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span></span></span></span>，并将第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 个元素移动及其后的元素依次向前移动一个位置，返回 <code>true</code></p><ul><li><p>最好情况：直接删除表尾元素，不需要移动元素，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></li><li><p><strong>最坏情况</strong>：需要删除表头元素，需要移动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 个元素，时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></li><li><p><strong>平均情况</strong>：假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P_{i} = \frac {1} {(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>是在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个元素上删除一个节点的概率，则在长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 的线性表中插入一个结点时所需要移动的结点的平均次数（数学期望 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">Ex</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">x</span></span></span></span>）为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><mi>n</mi></mfrac><mo>=</mo><mfrac><mi>n</mi><mi>n</mi></mfrac><mo>∗</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>∗</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo>−</mo><mi>i</mi><mo>=</mo><mfrac><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{n} p_{i}(n-i) = \sum_{i=1}^{n} \frac {(n-i)} {n}  = \frac {n} {n} *\frac {1} {n}*\sum_{i=1}^{n} -i= \frac {n-1} {2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li></ul><h2 id="链表"><a class="markdownIt-Anchor" href="#链表"></a> 链表</h2><div class="markmap-container" style="height:200px">  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;链表&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;单链表&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;定义-代码实现&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;基本操作的实现&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;双链表&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;循环链表&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;静态链表&quot;}]}"></svg></div><blockquote><p>线性表的链式存储又称<strong>单链表</strong>，它是指通过一组任意的存储单元来存储线性表中的数据元素。</p></blockquote><h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdbool.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;malloc.h&gt;</span></span><span class="token comment">// 链表结构体</span><span class="token keyword">typedef</span> <span class="token keyword">int</span> ElemType<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">union</span> <span class="token punctuation">{</span>    <span class="token comment">// 可能是链中链</span>    ElemType <span class="token operator">*</span>L<span class="token punctuation">;</span>    ElemType data<span class="token punctuation">;</span><span class="token punctuation">}</span> Data<span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">LNode</span> <span class="token punctuation">{</span>    Data data<span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">LNode</span> <span class="token operator">*</span>next<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">LNode</span> <span class="token operator">*</span>LinkList<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">LNode</span> Node<span class="token punctuation">;</span>Node <span class="token operator">*</span><span class="token function">GetElm</span><span class="token punctuation">(</span>LinkList L<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Node <span class="token operator">*</span>p <span class="token operator">=</span> L<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> L<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> p <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">,</span> <span class="token operator">++</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> p<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">/** * 在第 i 个位置插入 e (带头结点) * */</span>bool <span class="token function">ListInsert</span><span class="token punctuation">(</span>LinkList L<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> ElemType e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> false<span class="token punctuation">;</span>    Node <span class="token operator">*</span>p <span class="token operator">=</span> L<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> p <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">,</span> <span class="token operator">++</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>p<span class="token punctuation">)</span> <span class="token keyword">return</span> false<span class="token punctuation">;</span>    Node <span class="token operator">*</span>s <span class="token operator">=</span> <span class="token punctuation">(</span>LinkList<span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>Node<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    s<span class="token operator">-&gt;</span>data<span class="token punctuation">.</span>data <span class="token operator">=</span> e<span class="token punctuation">;</span>    s<span class="token operator">-&gt;</span>next <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>    p<span class="token operator">-&gt;</span>next <span class="token operator">=</span> s<span class="token punctuation">;</span>    <span class="token keyword">return</span> true<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//..... 此处省略后续的 前插入，后插之类 的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="优点-2"><a class="markdownIt-Anchor" href="#优点-2"></a> 优点</h4><ul><li>利用单链表可以解决顺序表需要大量连续存储单元的缺点</li></ul><h4 id="缺点-2"><a class="markdownIt-Anchor" href="#缺点-2"></a> 缺点</h4><ul><li>附加单链表附加指针域，也存在浪费存储空间的缺点。</li><li>非随机存取的存储结构，即不能直接找到表中某个特定的结点。–<strong style="color:red;">单向检索</strong></li></ul><blockquote><p>关于 <strong>头节点</strong> 和 <strong>头指针</strong> 的区分：</p><p>不管带不带头节点，头指针都始终指向链表的第一个结点，而头节点是带头结点的链表中的第一个结点，结点内通常不存信息。</p><p>引入头节点之后，可以带来两个优点</p><ul><li>由于第一个数据节点的位置被存放在头节点的指针域中，因此在链表的第一个位置上的操作的其他位置上的操作一致，无须特殊处理。</li><li>无论链表是否为空，其头指针都指向头节点的非空指针，因此空表和非空表的处理也就得到了统一。</li></ul></blockquote><h3 id=""><a class="markdownIt-Anchor" href="#"></a> </h3>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css&quot;&gt;&lt;h1 id=&quot;线性表-l</summary>
      
    
    
    
    <category term="数据结构" scheme="https://couriourc.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="基础知识" scheme="https://couriourc.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="data-structure" scheme="https://couriourc.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/data-structure/"/>
    
    
    <category term="基础知识" scheme="https://couriourc.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="数据结构" scheme="https://couriourc.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="线性表" scheme="https://couriourc.github.io/tags/%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    
  </entry>
  
</feed>
